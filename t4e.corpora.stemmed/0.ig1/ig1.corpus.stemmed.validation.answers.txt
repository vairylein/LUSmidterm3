A3192	Q3270	C2	IT	L35	programm è present ambient global , qual tutt element poss esser " vist " var funzion facent part programm . ogni funzion , , si trov ambient local divers ; , element funzion poss esser usat referenz ambient , esser vist funzion . e' è permess dichiar variabil purc ambient div . 	2
A1837	Q2094	C2	IT	L25	l' esecu non sar possibil . dichiar variabil si riserv cert quantit memor dov poi verrann inser i dat , non si dichiar non sar nessun spaz dispon inser i dat compil indic c' è error . 	2
A1972	Q2027	C2	IT	L25	simbol % (segu letter ) , permett sovrascriv (e inizializz ) rend leggibil conten cell memor relat variabil abbiam gia dichiar . cas %d,il calcol stamp vide sarem inser numer intero,per %f numer è reale,per %c caratt ,il %s è relat string ,% relat notazion scientif ,% g relat esponenzial real , %x numer esadecimal ,% u integral . 	0
A2919	Q2922	C2	IT	L32	risult sar valor tip int risult dall' oper desider , esemp a-a=|40| tabell asci è valor separ i caratter , cas sar risult oper . 	0
A2675	Q2671	C2	IT	L31	si , poic memor non è illimit . 	0
A2818	Q2955	C2	IT	L32	struct e' tip dat defin programm , e' dett user-defined type assolv funzion raggrupp inform eterogene . oper poss esser comp variabil tip " struct " : l' assegn variabil un' altra mediant cop conten (se tip ) ; l' access var camp attravers dot notation ; l' indic dell' indirizz variabil attravers " & " ; l' impossibil ' effettu confront variabil tip struttur definizion variabil com puntator . 	0
A1819	Q2116	C2	IT	L25	algoritm è proced risolv determin problem attravers numer fin pass discret non ambigu . programm è algoritm post form comprens computer (scritt tram linguagg programm ) , cio insiem istruzion , tram esecutor (computer ) , produc soluzion i problem post . 	1
A3254	Q3270	C2	IT	L35	perc quand vien defin funzion si cre memor spec contenitor appartent funzion specif mot ogni variabil local defin all' intern funzion può .si cre 2 funzion esemp 2 blocc poss conten variabil dell' altra funzion computer variabil div ,con div comp , propr perc apparteng blocc div .sol variabil global defin all' iniz programm può intercett tutt i blocc funzion . 	0
A2149	Q2224	C2	IT	L27	risult quell' oper non ' desider . esemp lavor inter volessim risult tip float,dobb usar l' oper dett " casting " ossi mett prim dell' espression tip dat desider parentes . ( (float ) a/b . . dov b inter ) . casting risult variabil float ' compost sol part inter part decimal . 	1
A2511	Q2440	C2	IT	L29	realt linguagg c è defin med livell . perc si trov posizion intermed i linguagg bass livell (com assembler , più vicin calcol ) quell alto livell (più lontan linguagg macchin ) . trov spiegazion , esemp , fatt c permett interven sull' alloc memor , pur distanz notevol linguagg macchin . 	1
A2370	Q2554	C2	IT	L29	c tip dat e' caratterizz i valor puo' assum varianil . 	0
A2645	Q2671	C2	IT	L31	esist numer massim cell erray dip dimension ram . 	0
A2556	Q2709	C2	IT	L31	si intend ser costrutt if annid all' intern dell' , part else verr attribu all' costrutt if dichiar . 	0
A2765	Q2833	C2	IT	L32	i tip predefin c/c++ int,char,float,void,enum . alcun essi poss esser modific attravers parol chiav esemp long,short ,doubl , camb i valor conten . programm può cre tip dat attravers parol chiav typedef permett all' utent defin identif tip dat potrann esser usat dall' utent all' intern programm . 	1
A2672	Q2709	C2	IT	L31	dop ser if nidific ,l ' istruzion else è sempr rifer all' ultim istruzion if comp codic . cas si vogl rifer l' else penultim if è necessar chiud blocc istruzion tal if prim dell' else inser } . ved esemp : if (cond1 ) { istruz1 if (cond2 ) { istruz2 } // mett } else si rifer if (cond1 ) elimin l' ultim parentes graff else{ istruz3 } } 	0
A2984	Q3041	C2	IT	L33	i vantagg notevol , luog flessibil programm , esemp dov non not prior i parametr problem . i principal svantagg produzion garbag , uso inefficient memor , rifer fluttuant . l' alloc memor vien effettu tram chiam funzion " malloc(numero_bits_da_alloc ) " , quest funzion restitu puntator anonim (indirizz ) heap , alloc i bits richiest . non è possibil alloc i numer bits richiest , vien restitu puntator null (ad ogni chiam verific ) . 	1
A1928	Q1967	C2	IT	L25	utilizz variabil tip " int " i numer memorizz dev esser compres -32768 32767 , si utilizz modif " unsigned " i numer si poss memorizz dev esser compres 0 65535 . 	0
A2220	Q2224	C2	IT	L27	esegu un' espression matemat variabil divers compil restitu " warning " ( un' avvert compil , per non pregiud compil ver propr ) oppur error ver propr . effettu oper variabil tip divers dovr ricorr " conversion cast " , semplic specific parentes tip oper vogl effettu (esemp : int a=1 float b=2.7 c=(float ) a+b=3.7 ) . 	1
A2545	Q2709	C2	IT	L31	presenz if nidific l' else si rifer costr if , trov presenz ser costrutt if non nidific l' else final e' rifer all' costrutt if . 	1
A2856	Q2833	C2	IT	L32	i tip predefin linguagg c : " int " (numer inter ) , " float" " doubl " (numer razional ) , " char " (caratter asci ) . i tip defin dall' utent : " struct " (struttur raggrupp div tip variabil ) , " typedef " (definizion nom tip esistent ) , " enum " ( list simbol variabil può assum ) , " union " (permett defin stess porzion memor tip div ) , " bit-field " (variazion struttur permett acced singol bit parol memor ) . i tip elenc dev esser defin prim " main " 	3
A3027	Q3053	C2	IT	L33	programm , l' iter , chiam cicl termin ingles " loop " , è struttur controll , all' intern algoritm , ordin all' elabor esegu ripetut sequenz istruzion , solit verific particolar condizion specific . esemp l' inizializz element array . più import istruzion cicl " for " , " whil " " do-whil " . int i; for (i = valiniz; i <= valfin ; i++ ) { //istruzion } whil (i <= valfin ) { //istruzion i++ ; } do {//istruzion i++ ; } whil (i <= valfin ) ; 	2
A2518	Q2513	C2	IT	L29	costant dat usabil sol lettur si defin sempr fuor main mediant com specif #defin mentr variabil contenitor conten puo camb veng defin specific tip dat dev conten . prim usat esemp cicl array defin numer ripetizion numer element valor fiss qual esemp p grec , variabil si usan dat contator tipic . 	1
A3408	Q3415	C2	IT	L36	entramb modal lettur . different sussist fatt l' oper " r " permett legg modal test caratter scrittur , tutt conosc , mentr l' oper " rb" permett legg form binar cio form lavor i computer calcol . 	2
A3125	Q3174	C2	IT	L35	vantagg : - riutilizz fil div progett ; - facil port avant progett team compost più ; - material condivis ; ... 	0
A2021	Q2027	C2	IT	L25	quest simbol caratter conversion funzion è seguent : - %d l' argoment è convert notazion decimal ; - %f l' argoment contien numer decimal ; - %c l' argoment contien unic caratt ; - %e l' argoment contien numer decimal espress notazion scientif ; - %g l' argoment contien numer decimal , più cort %e %f ; - %s string ; - %u l' argoment è convert decimal segn ; - %x l' argoment è convert esadecimal 	0
A2643	Q2671	C2	IT	L31	esist numer massim cell erray dip dimension ram . 	1
A1962	Q1967	C2	IT	L25	tipolog variabil integer : signed unsigned . l' utent può decid usar l' altra second valor verrann success assegn variabil . variabil signed int può conten valor -2147483648 +2147483647 . , variabil unsigned int può conten valor posit , cio 0 +4294967295 . 	1
A3409	Q3415	C2	IT	L36	semplic lettur modal binar legg esatt i byte com 0 1 convert test caratter ansi c . modal test convert i byte memorizz caratter potrebb incorr qualc error corrispondent . 	0
A3042	Q2996	C2	IT	L33	cas ) si dovrebb increment " " l' indirizz cell memor puntator " pi " , sebben improb inutil realizz . cas b ) puntator " pi " verrebb assegn valor dell' indirizz " i " increment sempr , cio 200034 dat int occup 4 bit ciascun . struttur comunqu andrebb scritt seguent mod : pi = &i + 1; cio parentes perc altriment puntator cerc l' indirizz dat chiam (i+1 ) . 	0
A2612	Q2675	C2	IT	L31	espression boolean è tip espression può restitu valor , vero(1 ) fals (0 ) , verific men dat condizion . essa è costitu condizion , verif risult . 	0
A3183	Q3227	C2	IT	L35	no; compil , durant l' esecu programm , trov più funzion main contemporane , dà error poic può esegu soltant . esist metod più funzion main programm bisogn ricorr strateg farn esegu l' altra com esemp : -> //////////////////////////// #defin main1 #includ <iostream> using namespac std ; #ifdef main1 int main ( ) //main 1 { [ ... ] return 0 ; } #els int main ( ) //main 2 { [ ... ] return 0 ; } #endif ///////////////////// 	3
A2814	Q2810	C2	IT	L32	c esist tip conversion : implic esplic . conversion tip implic c vien attu mod automat compil . conversion implic riconduc i var tip dat present un' espression , unic tip , mod essi sian confront . esemp andrò assegn variabil tip '' int' ' conten variabil tip '' float' ' : int i =0 ; float f=2.8; i=f ; compil convert valor conten variabil float (2 .8 ) , valor inter (2 ) , conseguent perd inform . 	0
A2728	Q2662	C2	IT	L31	" switc cas " confront valor variabil un' espression costant specific cas . framment codic : int x ; scanf( " % d " , &x ) ; switc (x ) { cas (1+1 ) : printf ( " \n " ) ; break; } non dar problem fas compil perc l' espression " 1+1 " è costant . framment : int x,y=1 ; scanf( " % d " , &x ) ; switc (x ) { cas (1+y ) : printf ( " \n " ) ; break; } non sar compil perc l' espression " 1+y " non è valut fas compil . potre risolv problem defin y com costant (fuor main ) . 	1
A2904	Q2955	C2	IT	L32	oper applic variabil tip struct : 1 . access singol camp variabil mediant dot notation ; 2 . definizion puntator all' inter variabil struct ; 3 . definizion puntator camp variabil struct . 	1
A2808	Q2810	C2	IT	L32	quand si fann oper variabil tip divers , linguagg c convert tip comun . conversion è implic perc non c' è bisogn specific richiest conversion , può port incomprension risult inaspett all' intern programm , esemp può verific overflow int convert float tronc cas float convert int. ovvi quest problem si può ricorr all' oper casting (conversion esplic ) , ossi inser parentes tond tip si vuol risult dell' oper . 	4
A2072	Q2227	C2	IT	L27	l' algebr bool è un' algebr astratt oper i sol valor logic 0 (fals ) 1 (ver ) . livell hardw calcol qualsias elabor elettron è struttural bas element bistabil , può oper sol sequenz simbol binar (bit ) . cas l' algebr bool può esser implement rappresent circu logic dov 0 1 corrispond condizion bit può assum . 	0
A3366	Q3304	C2	IT	L36	chiam t(n ) numer vis necessar ordin array n element . mergesort : t(n ) =2t (n/2 ) + 5n sap l' algoritm divid 2 l' array,l formul divent : t(n/2 ) =2t (n/4 ) + 5 (n/2 ) , t(n ) =2*2t (n/4 ) + 5n+5n . divid ulterior : t (n/4 ) =2t (n/8 ) + 5 (n/4 ) t(n ) =2*2*2t (n/8 ) + 5n+5n+5n . scriv 2,4,8 com potenz arbitrar 2 : t(n ) =2^ ( k ) t (n/2^ ( k ) ) + 5nk . assum n=2^ ( m ), k=m : t (n ) =2^ ( m ) t (n/2^ ( m ) ) + 5nm = nt (1 ) + 5nm =n+5n log(2 ) ( n ) ( dat n=2^ ( m ) implic m=log(2 ) ( n ) ) . cresc funzion tralasc grad n,valor costant base2 log . ordinamento= o(nlog(n ) ) 	1
A3090	Q3051	C2	IT	L33	puntator non può esser somm puntator , esso può esser somm inter . risult somm è l' indirizz dat puntator increment risult moltipl l' inter specific dimension tip bas puntator espress byte . esemp , p è puntator tip inter int (int *p ) valor 1000 (p=1000 ) , essend byte dimension int , p+1 val 1002 , p+2 val 1004 , general p+n val 1000+n*2 . 	0
A2786	Q2922	C2	IT	L32	i caratter segu stess regol operazional inter . dat i tip char codific asci 7 bit , facc char c,t ; poi somm , succed si somm i bit codific i tip char risult è numer inter conversion binar decimal verr stamp vide tram printf . 	0
A2153	Q2238	C2	IT	L27	memor sram , acronim static random access memory , consent access più rapid ram quant dispong capienz non tropp elev (dell' ordin poch mb ) . sram general usat com memor cach dov necessar elev veloc . 	0
A1904	Q1967	C2	IT	L25	variabil int immagazzin i valor negat tecnic complement . numer total valor immaganizz variabil int 32 bit : 2^32=4294967296 . tecnic complement i valor poss esser negat compres - (2^32 ) / 2 + (2^32 ) /2-1 . signif lim inferior è : -2.147.483.648 ; mentr superior è : 2.147.483.647 . 	1
A2384	Q2513	C2	IT	L29	durant l' esecu programm l' utilizz variabil è fondamental permett logaritm camb risult final . different : variabil poss camb valor dat stat assegn durant l' esecu programm , inoltr tip dat si poss attribu . costant valor rigid tutt dur programm non dispong tutt i tip dat non inter . sebben costant abbi stess funzion variabil , utilizz rend programm più ordin affid . 	0
A3393	Q3304	C2	IT	L36	l' algoritm merg sort , ordin sequenz " n " oggett , compless t(n ) = o(n\log n ) cas med cas pessim . infatt funzion merg compless o(n ) , inoltr essa richiam stess , ogni volt (circ ) met sequenz input . segu esecu dell' algoritm è dat ricorrent : t(n ) = 2t (n/2 ) + (n ) soluzion è propr o(n \log n ) . 	1
A2964	Q3051	C2	IT	L33	si , siccom variabil puntator conteng indirizz non è numer , poss somm inter , vien usat sistem array , intatt vogl otten l' element x : array [x ] , sistem somm all' indirizz array x , cos otteng l' indirizz posizion memor ricerc 	1
A1948	Q2094	C2	IT	L25	programm scritt dec c++ scriv programm rich variabil averl dichiar , compil fas compil dar error riport : " undeclared (first use this function ) " . particol dichiar variabil serv compil conosc tipolog dat sap quant spaz andar riserv variabil (char 8bit , int 16 bit , float 32 bit ) . 	3
A2085	Q2227	C2	IT	L27	inform rappresent elabor disposit elettron , dett ret logic qual possied port logic costitu element bas tutt i disposit digitali.l port logic si bas funzion transistor com interruttor binar veloc quest implement oper dell' algebr bool , algebr valor (0 ,1 ) .un funzion boolean può esser descritt mediant tavol verit . 	2
A2107	Q2238	C2	IT	L27	memor sram è memor tip static (i dat conten essa permang temp lung ) contien poch dat . alta veloc access inform der mod è realizz fatt conteng poch dat intern . capac è limit perc ogni cell memor richied numer elev component . infatt elev quantit dat vien utilizz dram vien realizz usand cell memor men compless . 	3
A2811	Q2833	C2	IT	L32	i principal tip dat : int (per i numer inter ) , float (per i numer real ) , doubl (per i numer real dopp precision ) char (per i caratter ) . tip bas i tip " user-defined " , defin programm . i tip user-defined più utilizz struct typedef . tip struct defin variabil riun inform eterogene , ovver , all' inern struttur , poss esser variabil tip divers . typedef si defin sinonim i tip già esistent . 	0
A2359	Q2481	C2	IT	L29	acced precis cell array bisogn specific identif l' array numer è l' indic cell seguent sint : nomearray [indic ] ; ricord indic cell part zer poss esser sol posit . cas array bidimensional , , indic sarann : nomearray [indice ] [indiceb ] ; 	0
A2922	Q2794	C2	IT	L32	è possibil modific codif caratter , farl non istruzion univoc dipend browser vien utilizz codif asci è più diffus è consigl risolv problem lett accent utilizz apic , tuttav si voless camb total codif miglior sostit potrebb esser utf-8 . 	3
A3317	Q3396	C2	IT	L36	funzion ricors può esser scritt mod non ricors ; per non port vantagg , anzi " complic " l' algoritm . 	0
A2745	Q2662	C2	IT	L31	si perc è confront 	0
A3070	Q3041	C2	IT	L33	vantagg forn dall' alloc dinam memor è possibil alloc dealloc eventual ridimension memor fas runtim (e non compil com memor static ) . svantagg present è cas puntator un' are memor alloc dinam veng fatt punt altra are memor , part memor dinam non sar più access programm . c alloc dinamicam memor si usa costrutt tip p=malloc(sizeof(tipod ) ) dov p è puntator blocc memor alloc . 	1
A2525	Q2453	C2	IT	L29	regol principal perc algoritm poss esser defin tal e' esser compost " sequenz precis fin oper " esegu determin comp . codic propost , fa esegu cicl si concluder ' quand l' utent inserir ' valor 0 , numer oper non è defin . inoltr codic non svolg nessun comp rilev , assegn valor variabil valor dovr ' esser forz cos 0 perc programm termin . 	1
A2691	Q2671	C2	IT	L31	c non esist numer massim cell array , quant si può continu rend sempr più grand estes propr array , continu alloc memor ; avessim memor infin avremm infin numer cell array . 	3
A2837	Q2810	C2	IT	L32	conversion implic si intend conversion tip più variabil realizz mod automat c consent valut un' espression . si tratt un' oper rischios , quant potrebb comport perd inform variabil (ad esemp passagg variabil tip float int , conseguent perd part decimal ) . essa si contrappon conversion esplic , realizz " hoc " programm , permett gest variabil i tip mod desider più util programm si sta realizz . 	1
A2773	Q2922	C2	IT	L32	oper aritmet variabil tip char ident quell tip int. somm , esemp , caratt (riconduc numer tabell codic asci ) caratt (altr numer tabell ) si otterr caratt (corrispondent numer tabell asci ) otten somm caratter precendent . 	1
A1914	Q1967	C2	IT	L25	variabil tip int 32 bit può rappresent numer inter posit negat , infatt , bit indic segn . cas si avrà lim massim posit +2147483647 negat ?2147483648 . calcol numer massim numer rappresentabis si fa 2^n , per rappresent segn serv bit si potrann rappresent -2^ (n-1 ) numer negat +2^ (n-1 ) numer posit non è compres 0 . numer massim sar +2^ (n-1 ) -1 	1
A3439	Q3174	C2	IT	L35	separ codic librer permett spezz i programm part separ , ovvi rius stess aument leggibilità/comprension programm . librer static consent colleg codic conten (funzioni/tipi/classi/costanti/etc ) static esegu , colleg avvien fas compil . 	0
A2071	Q2227	C2	IT	L27	l' algebr bool è un' algebr astratt oper i sol valor logic 0 (fals ) 1 (ver ) . livell hardw calcol qualsias elabor elettron è struttural bas element bistabil , può oper sol sequenz simbol binar (bit ) . cas l' algebr bool può esser implement rappresent circu logic dov 0 1 corrispond condizion bit può assum . 	0
A3412	Q3396	C2	IT	L36	funzion ricors scritt mod non ricors , vien defin iter , cio scritt attravers cicl . sfortunat , non tutt funzion facil 'trasform ' ricors non-ricors , alcun cas funzion non può esser trasform complet riscrittur , non sempr val pen . bisogn inoltr osserv funzion iter potent , larg applic , spess efficient poss risult artific , leggibil difficil comprend . 	2
A3026	Q2996	C2	IT	L33	prov compil entramb istruzion , è possibil not : ) cas vien dat seguent error : " lvalu required as increment operand " . signif non è possibil increment l' indirizz variabil (in cas puntator numer inter ) . b ) i n cas , è tip error : " lvalu required as unary '& ' operand " . non possibil assegn risult oper aritmet puntator , poic esso non è dot indirizz , sol valor numer . 	3
A2110	Q2299	C2	IT	L27	espression boolean espression logic , risult equivalent assum sempr valor . 	0
A3380	Q3334	C2	IT	L36	i vantagg si può ridurr problem " difficil " , ser problem più " semplic " . quest problem più semplic dev esser il/i caso/ bas . cas bas problem si conosc facil soluzion . ricorsion non è sempr utilizz , maggior part è integr . 	0
A3370	Q3389	C2	IT	L36	c stream astrazion rappresent fil disposit fisic , veng manipol attravers l' uso puntator . i fil contenitor inform assoc perifer (es.hard disk ) gest sistem oper ; ciascun perifer i/o e' rappresent fil cosicc ' l' access esse vien vist com access files . fil vien assoc stream un' oper 'open' , dop qual i dat poss esser scamb programm utent fil ; fil si dissoc stream l' oper 'chiusur ' . 	0
A2492	Q2513	C2	IT	L29	variabil costant utilizz c memorizz numer ,caratter string . com sugger , variabil volt dichiar tip , poss camb infin valor semplic dichiar valor . costant manteng sempr valor assegn moment dell' inizializz non permett modif . variabil poss esser dichiar inizializz seguent mod tip nomevariabile=valor ; esemp int a=1 ; costant mod possibil : const int c=3 ; oppur , prim main : #defin c 3 ; 	1
A2188	Q2211	C2	IT	L27	premett non abbiam svolt quest argoment lezion . microkernel different kernel implement men funzion , è più facil implement . rend dispon i serviz necessar softw veng cre " modul server " " livell " più alto . signif quest modul server crash , non provoc blocc dell' os , può esser riavv part . second domand kernelmod si intend ? line com ?non avrebb sens 	2
A3108	Q3041	C2	IT	L33	l' alloc dinam si evit : - sprec memor dov sovradimension array - sottostim dimension array conseguent overflow - rallent oper array (ad esemp cancell element ) svantagg : - maggior compless scrittur codic - risc produzion garbag rifer fluttuant c/c++ l' alloc dinam si effettu : 'malloc(sizeof(tipod ) ) ' oppur 'new tipod ' cre memor variabil tip tipod restitu l' indirizz byte . 	4
A3041	Q3051	C2	IT	L33	/*le oper somm c possibil ; è necessar somm puntator memorizz varibial , perc cas contrar verrebber somm indirizz punt i puntator . esemp com si pot somm pumntator : */ #includ <stdi .h> #includ <stdlib.h> int main(int argc , const char * argv[ ] ) { int x=5 ; int* p_x = & x ; int y=6 ; int* p_y = & y ; int = *p_x+*p_y ; printf ( " % d \n ", ) ; return 0 ; } //version mac 	0
A3416	Q3396	C2	IT	L36	si puo scriv non usand ricorsion complic codic scriv . esemp : alcun funzion " semplic " bast utilizz banal cicl elimin l' utilizz ricorsion . funzion compless elimin metod non ricors e' compless possibil . esemp pratic puo esser funzion fattorial ricors : int fattric(int n ) { int ris; if (n == 0 ) ris = 1; else ris = n * fattric(n ?1 ) ; return ris; } non ricors : int fattric(int n ) { int i , ris; ris=1 ; for (i=1;i<=n ;i++ ) ris = ris *i ; } return ris; } 	2
A2082	Q2299	C2	IT	L27	equazion boolean si dic equivalent quand , qualsias valor assegn variabil tal espression , risult espression coincid . esemp si not i teorem de morgan dov , l' espression ! (a + b ) è equivalent all' espression !a & !b . 	1
A2449	Q2453	C2	IT	L29	algoritm esser defin tal esser compost sequenz precis fin oper realizz comp . codic esam propon cicl si rip l' utent dig numer " 0 " , pertant cicl potenzial potrebb esser infin non compost ser " fin " oper . 	2
A2886	Q2794	C2	IT	L32	codif necessar scriv lett accent è l' asci 8 bit , extended ascii.quest codif è orma standard pc . 	1
A1912	Q2027	C2	IT	L25	quest caratter controll variabil ambient c . %d si utilizz variabil tip inter segn , mentr i decimal segn denot %u . %f è usat variabil tip float (real ) %c i caratter . insiem caratter (string ) si denot %s . %e si usa notazion esponenzial argoment tip float . %x è caratter esadecimal . %g è particol estension %e . trov comand printf scanf. 	2
A2409	Q2481	C2	IT	L29	l' array c è meccan permett costru tip dat i element sequenz omogene valor appartenent unic tip . acced cell tip array si può cos : int string [12 ] ; string [6 ] punt 5 element string (se string [n ] punt n-1 ) avrà valor inter tip int. 	0
A1833	Q2116	C2	IT	L25	più different sarebb opportun parl rapport algoritm programm ; infatt i intercorr ordin rapport esistent gen (algoritm ) spec (programm ) ; infatt mentr gener algoritm può esser scritt qualunqu linguagg (linguagg natural ,matemat , ecc ... ) , programm è algoritm vien scritt linguagg (c .d. programm ) vien compres calcol sar l' esecutor quell' algoritm . 	1
A2978	Q3046	C2	IT	L33	costrutt switc permett confront variabil tip inter (o caratt ) più inter (o caratter ) , consent confront più cas ; different costrutt if consent confront variabil qualunqu tip , tuttav cas confront . 	0
A2491	Q2440	C2	IT	L29	c , linguagg macchin assembly , vien consider linguagg alto livell quant permett astrarr alcun problem com gestion memor , istruzion linguagg definizion dell' algoritm . sar infatt compil , non programm , gest quest problemat . tuttav c risult più vicin linguagg macchin linguagg (pascal basic ) vien infatt spess identific com linguagg med livell . 	1
A2652	Q2661	C2	IT	L31	" lazy evaluation " si intend possibil valut un' espression moment quest è richiest strett necessar . mod " strict (o eager ) evaluation " si poss otten miglior prestazion punt vist dell' uso memor dell' uso risors sistem (si evit valut avveng più quand non necessar ) . possibil nat gest valut mod non è present tutt i linguagg può esser comunqu implement . 	2
A2486	Q2481	C2	IT	L29	informat array " vettor " è struttur dat compless , static omogene , usat linguagg programm chiar ispir nozion matemat vettor , (o matric , cas array bidimensional ) .l' array è inoltr classific com costruttor tip : ovver , esso consent defin tip dat part (com aggreg valor ) tip preesistenti.in c si acced precis cell array tram l' indic " i " , es : a[i ] . infin pot utilizz bisogn dichiar , es : int a[10 ] . 	1
A1986	Q2094	C2	IT	L25	non si dichiar variabil non si poss salv i risult oper si effettu 	0
A2300	Q2299	C2	IT	L27	espression boolean si dic equivalent present medesim tavol verit conduc rislt . e' possibil riscontr esemp equivalent legg de morgan : and b equival not ( ( not ) or (notb ) ) or b equival not ( ( not ) and (notb ) ) . 	0
A2083	Q2299	C2	IT	L27	equazion boolean 1 2 si dic equivalent quand , qualsias valor assegn variabil tal espression , risult espression 1 coincid . esemp si not i teorem de morgan dov , l' espression 	0
A2825	Q2955	C2	IT	L32	domand non sens . 	0
A3091	Q3053	C2	IT	L33	algoritm è prefer utilizz cicl quand sequenz oper esser ripet più . i cicl for , whil do-whil different : - cicl for è util quand numer iter è not prior - cicl whil è util quand , numer iter non è not , è necessar ripet un' oper finc condizion espress " whil (esp. ) " risult fals - cicl do-whil permett otten risult cicl whil , mod più semplic , includ l' oper , ven scritt prim whil , all' intern do-whil . 	3
A2401	Q2513	C2	IT	L29	variabil costant serv memorizz tener tracc valor determin are memor .ogn variabil costant è caratterizz tip dat specif com dev poss esser gest i dat all' intern esse.l different principal è utilizz ,infatti,dur l' esecu programm valor conten all' intern variabil poss esser modific mentr i valor costant no(l costant defin prior programm ) . dichiar variabil : tipo_d dichiar costant : #defin tipo_d 	0
A2710	Q2784	C2	IT	L31	espression veng valut bas all' ordin precedent : oper suddivis grupp caratterizz precedent , veng valut prim quell precedent superior success quell precedent inferior . cas oper appartenent grupp precedent vien utilizz propriet assoc determin vers valut (da destr sinistr ) . l' ordin precedent può esser modific utilizz parentes ( ) usat aument leggibil espression . 	2
A3165	Q3270	C2	IT	L35	poss perc funzion riconosc com variabil esistent sol quell intern stess quell global (dichiar prim main ) . infatt variabil non global è local funzion è defin , (esistent stess ) non collid quell dichiar main , per attenzion , tutt ciò è valid non si utilizz variabil global , tal cas variabil è present tutt programm , non permett cre variabil . 	3
A2917	Q2955	C2	IT	L32	variabil costru mediant struct poss conten inform eterogene (di tip divers : numer , string ... ) conseguent è possibil oper esser var mod ten cont l' appunt different tip inform . mod veng defin quest variabil non può esser modific all' intern main , quest variabil rimang stess all' intern tutt programm . i camp all' intern struct poss esser richiam mediant " . " ( es : agend .event ) quest poss esser svolt oper inizializz , stamp cos via ... 	1
A2123	Q2283	C2	IT	L27	l' oper restitu 1 (ver ) quand ingress (o entramb ) consist bit 1 (ver ) ; l' uscit e' 0 (fals ) quand entramb ingress consist bit 0 (fals ) . 	0
A3379	Q3334	C2	IT	L36	i vantagg si può ridurr problem " difficil " , ser problem più " semplic " . quest problem più semplic dev esser il/i caso/ bas . cas bas problem si conosc facil soluzion . ricorsion non è sempr utilizz , maggior part è integr . 	0
A2976	Q3046	C2	IT	L33	costrutt " switc " è possibil confront variabil tip inter (o caratter ) inter (o caratter ) , contempl più cas ; different costrutt " if " dov è possibil confront qualunqu tip dat , tuttav contempl cas . 	0
A2000	Q1967	C2	IT	L25	numer più grand è 2147483647 , più piccol -2147483648 . tip int occup si 32 bit , dedic segn (+ - ) . numer avrà disposizion 31 bit , è calcol fac 2^31 -1 è appunt ugual 2147483647 . numer minor bast , unic different è modul sar 1 più grand ( - 2^31 ) . perc 0 vien consider posit , numer negat posit è ugual . 	1
A2461	Q2554	C2	IT	L29	tip dat è form quel dat può assum . parol indic l' insiem valor variabil risult espression poss assum oper effettu tal valor . , esemp , dichiar variabil tip inter (int ) , i valor quest variabil può assum sol i numer inter . parol assegn quest variabil espression risult numer virgol , compil dar messagg error quant tip dat variabil è inter . 	3
A3224	Q3174	C2	IT	L35	innanzitutt fatt fil div port ordin maggior progett (fondamental quand si cominc programm compless ) , com vantagg si possibil utilizz l' insiem funzion fil defin com librer all' intern qualsias progett . 	1
A2989	Q3041	C2	IT	L33	alloc dinam memor c vuol dir utilizz mod flessibil : post occup quantit static stack , si alloc sol quantit necessar -graz sizeof- nell' heap (più capient quant non defin prior ) , rend linguagg estrem portabil . l' unic svantagg può esser attribu all' ardu gestion puntator non dimentic respons liber memor termin dell' utilizzo.per alloc : p= malloc(sizeof(int ) ) ; p puntator (a int ) int tip dat desider . liber : fre (p ) ; 	0
A2698	Q2709	C2	IT	L31	dop ser costrutt if , l' else vien attribu sempr all' if piu' vicin men non divers specific eventual parentes graff . ogni mod e' util porr sempr parentes graff mod tal l' istruzion risult piu' chiar programm dovrebb modific legger . 	2
A3037	Q3056	C2	IT	L33	teorem boehm-jacopin enunc : " algoritm puo' esser implement utilizz sol struttur . sequenz , selezion cicl . " dov sequenz e' l' insiem istruzion esegu nell' ordin decis programm , selezion e' scelt percors (es . if , if-els ) cicl e' blocc istruzion esegu condizion permett (es . whil , for ) . quest fas e' possibil cre algoritm esegu qualsias macchin . 	1
A3087	Q3056	C2	IT	L33	teorem boehm-jacopin afferm qualunqu algoritm può esser implement utilizz sol struttur : sequenz (è normal elenc istruzion ) , selezion (if-els ) cicl (iter costrutt whil ) , applic ricors composizion istruzion elementar . quest struttur eqivalent struttur controll linguagg assembl struttur controll qualsias linguagg programm . 	0
A2020	Q2027	C2	IT	L25	quest simbol caratter conversion funzion è seguent : - %d l' argoment è convert notazion decimal ; - %f l' argoment contien numer decimal ; - %c l' argoment contien unic caratt ; - %e l' argoment contien numer decimal espress notazion scientif ; - %g l' argoment contien numer decimal , più cort %e %f ; - %s string ; - %u l' argoment è convert decimal segn ; - %x l' argoment è convert esadecimal 	0
A2872	Q2794	C2	IT	L32	avend disposizion 128 caratter veng esclus moltissim simbol lett accent . infatt fà , pagin web , inser caratter non compres codif asci era necessar usar cos dett entit html , cio caratter preced da'& ' . era scomod moment si dov scriv qualcos lingu divers dall' ingles . infatt part quest entit divenner inutil l' estension codif asci . venn defin l' asci estes usa 256 numer (8bit caratt , usand l' ottav bit dell' asci lasc inutilizz ; c 	1
A3028	Q3046	C2	IT	L33	costrutt " switc " different " if " , può valut sol variabil dipend tutt scelt fatt compil . inoltr ogni singol valor variabil può controll singol scelt , eccezion fatt com default controll tutt variabil non stat specific precedent . già conosc variabil gioc costrutt " switc " potrebb esser prefer quant garant controll singol variabil . tutt cas risult miglior costrutt " if " dat controll più variabil . 	1
A2809	Q2833	C2	IT	L32	i tip bas dat : -&#8239 ;int (inter ) , -&#8239 ;float (real ) , -&#8239 ;doubl (real dopp precision ) & #8207 ; , -&#8239 ;char (caratter ) . e' possibil defin sinonim tip dat esistent attravers costrutt typedef . 	0
A2308	Q2283	C2	IT	L27	quand entramb ingress fals (bit 1 ) l' uscit ã¨ fals ; almen ingress ã¨ ver (bit 0 ) , l' uscit ã¨ ver (bit 0 ) . 	0
A2650	Q2675	C2	IT	L31	un' espression boolean è un' espression può com risult soltant ver fals . essa è compost proposizion (ver fals ) qual si applic oper logic and , or not . nell' espression , dop aver risolt parentes , not precedent and or , and precedent or . 	0
A3406	Q3389	C2	IT	L36	streams (o fluss ) quell astrazion forn livell linguagg programm gestion i/o indipendent perifer . permett acced fil manier simil si comport tutt stess manier , ovver oper oper essi stess tutt . i fil contenitor inform assoc perifer gest sistem oper . fil può esser assoc stream mediant un' oper " open " . volt esegu quest oper i dat poss esser scamb programm utent fil . 	1
A2159	Q2211	C2	IT	L27	s.o. bas micro-kernel , kernel , elev cost computazional , è ridott all' essenzial , ossi forn soltant minim gestion dell' hardw bass livell (driver ) memor deleg rest part estern dett server modul comun kernel . dunqu un' applic utent non richied dirett gestion " polit " meccan process , può esser esegu s.o. micro-kernel (anc kernel mod ) . 	1
A2073	Q2227	C2	IT	L27	l' algebr bool è un' algebr astratt oper i sol valor logic 0 (fals ) 1 (ver ) . livell hardw calcol qualsias elabor elettron è struttural bas element bistabil , può oper sol sequenz simbol binar (bit ) . cas l' algebr bool può esser implement rappresent circu logic dov 0 1 corrispond condizion bit può assum . 	0
A2130	Q2224	C2	IT	L27	casting automat assegn all' espression valor tip risult esser domin (gerarc tip dat ) . casting non è automat , è impost programm , valor dell' espression verr valut bas esso (ad esemp nell' espression x=(float ) 2/3 ; valor dell' espression verr calcol nell' ambit numer razional i operand inter ) . 	1
A2706	Q2784	C2	IT	L31	espression veng valut com val matemat ; esist precedent quest poss esser modific tram l' utilizz ( ) . quand oper si tratt " oper increment decrement " : essi rispett aument diminu l' unic oper prend . rappresent ++ -- ; quest poss esser utilizz prim , dop variabil (a=--x , a=x -- ) rispett signif : x vien decrement prim valor veng cop , vien prim cop valor x poi vien increment valor x 	0
A3283	Q3389	C2	IT	L36	stream si intend l' interfacc , fluss comun attravers l' utent oper gestion fil , è contenitor inform memorizz perifer hardw si access attravers stream . esemp fil può esser assoc stream mediant com " open " ; mod origin scamb dat programm utent fil . 	0
A2294	Q2283	C2	IT	L27	ipotizz variabil b l' algebr boolean poss assum com valor " 0 " (fals ) " 1 " (tru ) . l' espression or b rstitu " 1 " moment almen oper foss " 1 " , restitu " 0 " entramb assum " 0 " com valor . 	3
A2416	Q2453	C2	IT	L29	algoritm è defin com sequenz precis oper , comprens esecutor defin sequenz fin pass . com si può not porzion codic soprast viol l' ultim regol , infatt , intern c' è cicl whil infin qual rend quest righ codic sequenz istruzion infin . 	0
A2775	Q2922	C2	IT	L32	compil svolg l' oper codic asci corrispett caratter , percu dar ' comunqu un' caratt corrispondent codic asci risult dell' oper svolt non error com si potrebb immagin . 	2
A3405	Q3334	C2	IT	L36	funzion si dic ricors quand è defin seguent schem : -un più cas base,in è defin termin funzion più semplic not -un cas ricors l' utilizz funzion ricors vantagg principal : permett scriv poch line codic risolv problem compless .tuttav ricorsion non è sempr utilizz poic comport elev consum stack sistem stiam lavor stack limit risc crash programm . p.s : c' scritt ask question dev domand non 3 	4
A3410	Q3415	C2	IT	L36	semplic lettur modal binar legg esatt i byte com 0 1 convert test caratter ansi c . modal test convert i byte memorizz caratter potrebb incorr qualc error corrispondent . 	0
A2644	Q2671	C2	IT	L31	esist numer massim cell erray dip dimension ram . 	1
A2736	Q2675	C2	IT	L31	?espression boolean è ?espression oper i valor binar 0 1 (rispett fals ver ) . oper veng utilizz ?algebr bool not (oper unar ) , and or (oper binar ) ; quest oper ?amb linguagg programm si traduc i caratter ! (not ) , && (and ) , || (or ) . oper segu precis ordin precedent god propriet commut , assoc distribut nonc idempotent (a+a= ) element neutr (a+0= ) ; si avvalg inoltr legg de morgan . 	5
A3025	Q3046	C2	IT	L33	l' if verif condizion pass com parametr è " ver " , tal cas effettu un' azion ; cas contrar ( " else " ) effettu un' altra (opzional ) . e' possibil avval , inoltr , elseif, implement blocc if all' intern precedent , è possibil costru if annid . costrutt switc consent anch' esso valut un' espression valor pass com parametr intraprend , bas valor tal espression parametr , azion different ; different dell' if, comunqu , è più " ordin " . 	0
A2106	Q2283	C2	IT	L27	l' oper logic or (il simbol , leggibil compil e' || ) restitu 1 , cioe' ver , almen operand coinvolt nell' espression boolean val 1 , cioe' risult ver ; contrar dar ' 0 , cioe' fals , tutt operand valg 0 . 	1
A2609	Q2662	C2	IT	L31	definizion " cas " , variabil dev' esser tip integral ; confront valor deriv un' espression , inser l' espression com argoment " switc ( ) " variabil inter com argoment " cas " . 	1
A3066	Q3056	C2	IT	L33	teorem boehm-jacopin (enunc omonim informat 1966 ) afferm linguagg programm possied istruzion sequenz (di istruzion ) , selezion i cicl , è complet . quest sequenz istruzion è possibil codific ogni programm esegu calcol , quant quest istruzion equivalent istruzion linguagg assembler . teorem import teoric , quant permett comprend qual istruzion elementar ogni compil permett cap qual i linguagg complet . 	1
A3203	Q3174	C2	IT	L35	i fil " .cpp" conteng l' implement codic poss esser compil part non bisogn compil men non si modif , velocizz fas compil . vantagg è mantenibil codic , permett suddivid facil cas si dec programm team . 	2
A2829	Q2810	C2	IT	L32	conversion implic c ( ingles coercion ) è tip conversion tip dat vien svolt manier automat compil , cio quand oper operand tip divers , quest veng convert tip comun segu regol specif . compil tent conversion sequenz defin finc non riesc , alcun cas quest conversion si può verific perd d' inform si può perd precision . 	0
A2620	Q2784	C2	IT	L31	tutt oper si poss trov un' espression suddivis grupp caratterizz precedent . quell precedent superior veng valut prim quell precedent inferior . cas oper grupp precedent vien utilizz l' " associat " , determin vers valut (da destr sinistr ) . cio vien dat più import , second grupp , all' oper sta più destr sinistr . 	0
A2120	Q2299	C2	IT	L27	espression logic si dic equivalent medesim tavol verit , ossi , avend espression contenent variabil b risult oper funzion valor operand è . esemp espression boolean equivalent dat legg de morgan : and b = not ( ( not ) or (not b ) ) or b = not ( ( not ) and (not b ) ) 	2
A3257	Q3227	C2	IT	L35	funzion main è f ?unzion vien esegu all' iniz programm . essa può argoment restitu valor . nessun' altra funzion programm main . 	0
A2631	Q2662	C2	IT	L31	si costrutt può realizz confront valor deriv un' espression . infatt sar compil interven fas compil sostitu l' espression valor deriv essa quant si tratt inutil cpu . dunqu scriv , esemp , " cas 2+ (8*2 ) " oppur " cas 18 " non camb quant fas compil l' espression c vien sostitu valor final quest linguagg macchin . 	0
A3153	Q3227	C2	IT	L35	, non è possibil . 	0
A2920	Q2922	C2	IT	L32	risult sar valor tip int risult dall' oper desider , esemp a-a=|40| tabell asci è valor separ i caratter , cas sar risult oper . 	0
A2145	Q2283	C2	IT	L27	general , l' oper logic or restitu 1 quand almen valor dell' oper è 1 . vicevers restitu 0 quand tutt i valor dell' oper valor 0 . 	1
A3004	Q3046	C2	IT	L33	different if switc permett valut più condizion divers cicl . condizion switc poss per esser uguagl , mentr l' if si poss disuguagl , maggior minor . 	0
A2569	Q2661	C2	IT	L31	" lazy evaluation " si indic strateg valut qual un' espression vien comput moment quest è richiest . ciò permett un' ottimizz prestazion perc evit un' espression veng comput più quand non necessar . " strict evaluation " , si benef quant riguad l' impront memor programm , quant conc richiest prestazion vers calcol . 	0
A2010	Q2116	C2	IT	L25	l' algoritm è sequenz pass port risolu problem programm è traduzion dell' algoritm linguagg comprens macchin . 	0
A2813	Q2955	C2	IT	L32	oper si poss applic struttur cop , l' assegn com unic oggett , manipol tram l' access camp , l' inizializz tram list valor costant , l' indirizz tram l' oper & , passagg struttur funzion ritorn esse . non poss , funzion , esser confront . 	1
A2889	Q2794	C2	IT	L32	lett accent com 'è ' , codif asci codic superior 127 , fann part tabell asci estes , contrar quell standard (caratter 0 127 compres ) , spess var .un semplic risolu problem è sostitu lett accent vocal " apostrof " com " e' " post " è " . 	2
A2121	Q2299	C2	IT	L27	espression logic si dic equivalent medesim tavol verit , ossi , avend espression contenent variabil b risult oper funzion valor operand è . esemp espression boolean equivalent dat legg de morgan : and b = not ( ( not ) or (not b ) ) or b = not ( ( not ) and (not b ) ) 	1
A3056	Q3056	C2	IT	L33	teorem böhm-jacopin afferm qualsias algoritm può esser codific può esser implement utilizz struttur : sequenz selezion cicl debb esser applic comand semplic . 	0
A2783	Q2833	C2	IT	L32	i tip dat c : -tip semplic : element ?insiem consider entit non scompon part più elementar -tip struttur : ciascun element ?insiem è aggreg element volt semplic struttur -tip defin dall' utent : tip può esser defin dand tip già esistent -tip predefin built in(inter , real float ) già defin linguagg linguagg programm permett all' utent cre tip dat mediant l' utilizz seguent struttur : struct ,enum ,typedef,ecc 	1
A3302	Q3415	C2	IT	L36	si usa " r " ( lettur modal test ) quand i fil conteng caratter stampabil inform interpret uman " rb" ( lettur modal binar ) , vien usat quand i fil conteng dat var gen (mix caratter stampabil non ) 	0
A2567	Q2675	C2	IT	L31	un' espression boolean è espression restitu com valor ver fals (1 0 , si ecc . ) . 	0
A2641	Q2675	C2	IT	L31	" condizion " si intend fattor fondamental determin funzion costrutt qual : if-els , whil , for ecc ... condizion è solit compost variabil , costant oper tip : <= , == , >= ecc ... condizion (es : == b ) vien soddisfatt , solit programm pass all' istruzion success , altriment rip cicl salt line codic . 	0
A2291	Q2238	C2	IT	L27	sram , acronim static random access memory consent access più rapid inform via com stat costru celle,in mod più compless costos ram normal . sram riesc esser 20-30 più veloc ram normali.l capac è minor sempr via metod costruzion cell memoria,infatt maggior densit fluss dat è utilizz dram,men veloc più capient . 	1
A3111	Q3046	C2	IT	L33	maggior part cas switc cas - default fa if - else if - else patt si abbi oper uguagl (== ) . quest cas camb sint , (relat ) poch line codic cas l' , quell switc cas risult più pul più sintet . 	0
A1918	Q2116	C2	IT	L25	l' algoritm indic pseudo-cod linguagg natural tal metod usar risolv problem mentr stesur programm si è fatt passagg più quant si è " tradott " l' algoritm linguagg programm poss esser esegu calcolor . (n.b. concett algoritm non preved necessar problem debb esser risolt calcol ) 	1
A2097	Q2227	C2	IT	L27	l' algebr bool esegu oper matemat bas numer binar . , implement quest' algebr livell hardw , vien fatt uso piccol component elettron , i transistor , combin dann luog port logic . propr quest port esegu oper matemat , principal : - and : moltipl - or : somm - not : negazion 	0
