A3082	Q3063	C2	IT	L33	seguent codic cre tip puntator inter . non si può scriv b; non si può omett simbol dereferenz . poss visualizz conten cell memor tram l' utilizz dell' oper sizeof . 	0
A1952	Q2052	C2	IT	L25	bus sistem bus estension . svolg principal funzion : - funzion bus dat , permett scamb informzaion bidirezional i component - funzion bus indirizz , dov indirizz invi mod unidirezional dic cpu dov svolg funzion richiest - funzion bus controll ,coordin oper sistem mod tal evi conflitt permett comun nuov perifer tram slot . 	0
A3411	Q3332	C2	IT	L36	algoritm ricors e' possibil ridurr l' utilizz risors sistem , perc determin programm puo' richiam durant esecu mod dirett indirett 	1
A2483	Q2514	C2	IT	L29	programm c non è possibil oper (ad esemp printf scanf ) inter array . stamp conten si serv cicl 'for' permett scorr i var element compong l' array . esemp voless stamp conten v[10 ] (array inter ) : for(i=0,i<10,i++ ) { printf ( " % d ", v[i ] ) ; } per si voless stamp , esemp , valor dell' array si scriv : printf ( " % d ", v[3 ] ) ; 	2
A2115	Q2233	C2	IT	L27	spaz indirizz è defin numer parol indirizz dip esclus numer bit dell’indirizz non numer parol memor effett dispon : n è numer bit costitu l’indirizz memor spaz indirizz è 2^n . dat tutt i byte dev esser indirizz dimension effett memor è sempr minor ugual spaz indirizz . 	0
A2754	Q2918	C2	IT	L32	convert numer inter sistem ottal sistem decimal riscriv com somm cifr numer moltiplic potenz decrescent 8 . esemp 576 ( base8 ) = (5*8^ ( 2 ) ) + (7*8^ ( 1 ) ) + (6*8^ ( 0 ) ) =320+56+6=382 (base10 ) . numer non intero,per convert part frazionar , somm cifr part frazionar numer moltiplic potenz crescent negat 8(per part inter proced com descritt precedent ) . esemp 576 ,16 ( base8 ) = (5*8^ ( 2 ) ) + (7*8^ ( 1 ) ) + (6*8^ ( 0 ) ) + (1*8^ ( -1 ) ) + (6*8^ ( -2 ) ) =320+56+6+1/8+3/32=382 ,21875 (base10 ) . 	2
A2585	Q2627	C2	IT	L31	dimension n+1 poic ogni array com ultim posizion conten caratt special null . caratt vien utilizz cap dov fin string . dunqu array avrà dimension n+1 string lung n posizion n+1 trov caratt special null . 	0
A3049	Q3126	C2	IT	L33	quand si dichiar singol puntator , si riserv part memor tip dat vien richiam puntator . semplic , puntator , puntator assegn indirizz puntator inizial . 	1
A2129	Q2348	C2	IT	L27	osserv " comput " signif " calcol " , calcol non fa distinzion form poic entramb calcol . different and b not ( ( not ) or (not b ) ) risied veloc esecu calcol part compil . l' espression and b , infatt , è necessar sol oper , mentr not ( ( not ) or (not b ) ) necessar oper . quest different si può afferm and b è più rapid comput . 	0
A2734	Q2627	C2	IT	L31	string è defin c com array caratter termin variabil '\0 ' . durant l' indicizz dobb consider array è conten termin andrà diminu spaz effett utilizz all' intern string . e' quest motiv quand necessit string n caratter dobb dichiar dimension n+1 . 	0
A2421	Q2568	C2	IT	L29	com " # defin " è dett preprogramm , è dirett compil defin " macr " (string ) , cas " " , compil , fas compil sostitu " string sostitu " , cas " 20 " . non vien alloc alcun valor memor . scriv " const int = 20 " signif dichiar costant tip inter identific " " valor " 20 " . cas compil predispon locazion memor scriv valor "20 " riman costant durant l' esecu programm possibil esser modific . 	2
A3418	Q3372	C2	IT	L36	l' access casual fil permett acced conten specific posizion relat intern . 	0
A2283	Q2235	C2	IT	L27	memor rom utilizz memorizz dat programm serv moment dell' accension computer , prim caric sistem oper . rom effettu un' oper importantissim all' avvi sistem , boot l' aut diagnost , consist verific i fil sistem perifer computer non abbi problem . conten tal memor si puo' legg non modific e' persistent , cioe' non vien pers spegn calcol . 	1
A3347	Q3316	C2	IT	L36	funzion ricors è funzion richiam sè stess (ricorsion dirett ) richiam funzion volt richiam (ricorsion indirett ) . 	0
A2921	Q2887	C2	IT	L32	costruttor array defin insiem element tip , ordin access tram indic tip int. struct defin insiem element tip diversi,c poss esser built-in user-defined , access più facil programm tram cosiddett " dot notation " 	3
A2383	Q2474	C2	IT	L29	cas vien immediat valut condizion , quest è fals istruzion conten all' intern cicl whil non veng esegu . cas istruzion veng esegu almen volt poi vien valut condizion . entramb i cas istruzion conten all' intern cicl veng ripet finc condizion riman ver . 	2
A2396	Q2436	C2	IT	L29	i linguagg compil veng scritt editor si occup controll correttezz codic poi compil , ogni istruzion vien trasform corrispondent codic linguagg macchin può esser esegu processor . i linguagg interpret veng elabor vol veng esegu istruzion cos com descritt codic sorgent controll error . vantagg linguagg interpret elev portabil immediatezz , mentr compil richied minor processor svolg error 	2
A2077	Q2233	C2	IT	L27	numer bit costitu indirizz dip spaz indirizz disposizion rapport 2^n dov n è numer bit dell' indirizz . 	0
A3134	Q3139	C2	IT	L35	" sid effect " è camb programm può compromett funzion programm può modific variabil present funzion . tip sid effect si verif quand veng utilizz variabil global all' intern sottoprogramm funzion , esse sian defin all' intern dell' elenc variabil funzion . cas funzion , richiam , utilizz variabil global rend impreved comport funzion . 	0
A1861	Q2039	C2	IT	L25	visualizz vide string bisogn inser %s all' intern com stamp otten rig codic sar simil quest : printf ( " % s " , string ) ; avess inser %c all' intern com stamp avre visualizz scherm variabil tip char . printf ( " % c " , variabilec ) ; entramb i cas string , variabil tip char , dev comunqu esser stat dichiar inizializz , altriment fas compil veng rilev error . 	4
A2722	Q2632	C2	IT	L31	non è possibil dichiar array , anzi , gen non è possibil dichiar un' altra volt stess variabil . 	0
A2317	Q2270	C2	IT	L27	si . fattor influenz veloc clock , ovver quantit impuls gener dall' orolog intern , più elev è frequenz impuls clock più istruzion esegu nell' unit (clock , vien misur hz ) . fattor è quantit memor ram dispon all' intern computer . 	0
A2385	Q2503	C2	IT	L29	innanz tutt rappresent virgol fiss virgol mobil si poss rappresent numer razional approssim numer real . rappresent virgol mobil non decid prior quant bit verrann riserv part inter part decimal numer contrar rappresent virgol fiss . rappresent virgol mobil permett miglior precision mantiss . 	0
A3264	Q3187	C2	IT	L35	passagg parametr valor è mod comun pass inform funzion è mod normal utilizz c++ . passagg parametr rifer (o referenc ) , funzion vien pass l ?indirizz non valor ?argoment . approcc richied men memor chiam valor , consent modific valor variabil livell visibil estern funzion metod . passagg indirizz bisogn pass funzion argoment tip puntator 	2
A2790	Q2918	C2	IT	L32	esegu conversion ottal decimal si dev esegu ser moltipl elev valor dip posizion bit occup nell' array (ricord posizion pes minor , ovver quand l' esser elev zer , è relat all' ultim cell dell' array ) , dop aver esegu moltipl , si dev somm i div contrib leg bit dell' array binar . risult otten è ciò cerc , ovver form decimal . 	1
A2435	Q2475	C2	IT	L29	programm informat può esser defin com algoritm compless post form comprens computer (scritt tram linguagg programm ) . " programm " è insiem ordin istruzion espress specif regol not prior tram esecutor (computer ) elabor soluzion i problem post . termin collabor l' hardw macchin poter restitu risult part dat ingress . 	3
A2417	Q2571	C2	IT	L29	livell astrazion è medio-alt poic linguagg si discost alquant linguagg macchin , lasc sistem gestion aspett com l' alloc gestion memor , registr indirizz memor . 	0
A3354	Q3316	C2	IT	L36	funzion ricors è funzion richiam sè stess (ricorsion dirett ) richiam funzion volt richiam (ricorsion indirett ) . 	0
A3176	Q3169	C2	IT	L35	i parametr formal funzion argoment stess veng elenc nell' header . quest verrann usat corp funzion svolg oper vol . i parametr attual (effett ) quell funzion vien attiv prend post (rispett l' ordin veng elenc ) quell effett svolg funzion div cas . es int a(int n ) { return n*3 ; } n è parametr formal main { . a(x ) ; . } x è parametr effett prend post ogni n all' intern funzion . 	0
A2680	Q2782	C2	IT	L31	si può increment precedent all' intern un' espression utilizz l' oper " + " apparten grupp addit . 	1
A2285	Q2237	C2	IT	L27	architettur gen poss esser 16,32 64 bit . memor volatil ram i dat veng salv " pacchett " 1 byte . abbiam esemp sistem 32 bit , massim quant ' dat esso puo' indirizz e' par 2^32 byte . fac rapid calcol otten 2^32 byte corrispond propr 4096 mb . perc ' legg memor volatil superior 4096 mb serv un' architettur 64 bit poic ' quell 32 bit risult esser insufficient . 	3
A3419	Q3401	C2	IT	L36	quand facc un' oper scrittur fil scriv i dat conten buffer indic fil sto lavor 	0
A2307	Q2235	C2	IT	L27	rom vien utilizz memorizz dat programm serv moment dell' accension dell' elabor , prim caric sistem oper , esemp poss conten bios (basic input-output system ) . rom (read-only-memory ) ã¨ memor sol lettur non programm access rapid , i dat conten essa veng inser fas costruzion non poss esser modific success . 	2
A2913	Q2920	C2	IT	L32	struttur poss esser conten tip dat numer , com int float , caratter array . struttur può conten intern un' altra struttur . 	0
A2459	Q2443	C2	IT	L29	pseudo-cod si intend linguagg informal si avvicin linguagg programm , è più astratt quant serv esclus all' uom fars un' ide scrittur algoritm . 	1
A3270	Q3131	C2	IT	L35	funzion non può restitu un' array perc memor vien dealloc automat durant esecu ritorn singol valor puntator esso . 	2
A3300	Q3317	C2	IT	L36	funzion ricors si usa quand si riesc divid problem cas bas , si conosc prior soluzion , cas indutt risolv attravers proced preved richiam , dirett indirett , stess funzion inizial risolv problem più semplic . 	1
A3400	Q3357	C2	IT	L36	mod utilizz i fluss (streams ) : -i fluss commun cre aprir fil , può esser tip binar cio sequenz byte tip test cio sequenz caratteri; -programm c permett assoc fil fluss vien dichiar (# includ stdi .h ) permett cos scamb dat programm fil ; -il programm utilizz i fluss standard , veng esegu mod autonom : (stdout , stderr ) vide terminal (stdin ) tastier terminal . 	3
A1956	Q2038	C2	IT	L25	variabil char è possibil attribu caratt alfanumer maiuscol minuscol , simbol qualsias inser tastier non visibil (ad esemp spaz ) . 	4
A2466	Q2514	C2	IT	L29	array dev' esser inizializz cicl for; cicl esegu l' assegn valor fas success stamp . estrarr valor dall' array si utilizz parentes quadr l' indic . struttur dell' array può infin esser utilizz definizion matric . 	0
A2906	Q2953	C2	IT	L32	variabil caratt enumer durant l' esecu programm puo' assum valor qualsias , vien decis programm , realt valor numer int 0 n-1 variabil scelt . 	0
A2143	Q2307	C2	IT	L27	registr interru è sistem utilizz var hardw segnal azion event cpu . poic processor ricev inform sol attravers singl ingress , qualsias hardw debb richid l' utlizz cpu funzion , invi seganl cpu stess interromp ciò stav elabor analizz richiest dell' hardw . 	0
A2183	Q2328	C2	IT	L27	aggett 32 64 bit intend dimension form standard variabil all' intern un' architettur hardw (un different gestion inform part cpu ) . second dell' architettur var dimension registr intern microprocessor . un' architettur 64bit può gest dat sar più efficient è " convenient " support bus dat indirizz , nonc memor ram , " adegu " all' architettur . 	0
A1950	Q2117	C2	IT	L25	cpu pes maggior veloc computer , segu i registr , sram , dram , memor mass infin tutt i rimanent component . è dover precis non esist scal precis stabil qual component influ maggior veloc final computer . avend budget limit bisogn invest component nell' ordin scritt , consider invest dovrebber bas sull' utilizz dell' utent specif . 	1
A3236	Q3153	C2	IT	L35	funzion vien pass parametr valor valor parametr effett (cio qual funzion vien attiv ) vien cop variabil funzion chiam rappresent parametr formal (cio l' argoment funzion elenc test ) . passagg indirizz funzion invoc ricev puntator parametr effett . 	0
A1971	Q2117	C2	IT	L25	alcun component computer men fondamental comunqu veloc computer dip veloc calcol processor memor cach mont giust sched madr memor ram contien tutt i dat i programm coinvolt nell' elabor corrent .infin veloc computer nell' esegu un' elabor dip numer applic esecu .quind sarebb opportun invest microprocessor ram . 	1
A1988	Q1973	C2	IT	L25	memor ram si tratt memor volatil , ovver tutt conten all' intern essa vien pers quand cess l' aliment sistem . contrar memor archiv mass può conten dat manier permanent spegn calcol . memor ram è inoltr più piccol quell mass present access (temp intercorr richiest element leggere/scriv ) gran lung maggior quell mass . 	0
A3250	Q3171	C2	IT	L35	record attiv è struttur dat salv memor moment chiam funzion . esso conten tutt parametr variabil local funzion gener . conten ino miltr inform riguard l' indirizz ritorn (punt all' istruzion success quell chiam funzion ) colleg record attiv funzion chiamant . serv manten memor inform necessar " macchin astratt " esegu funzion . 	3
A3425	Q3354	C2	IT	L36	funzion è dett ricors determin propr valor , essa ricorr calcol un' valor ripet chiam stess . esser valid , preved condizion (dett punt ritorn ) qual restitu valor , evit loop . e' not com calcol valor avveng ordin invers chiam . l' uso ricorsion può rend più semplic programm , risult compatt eleg , sebben men efficient dell' iter termin occup memor veloc esecu . 	1
A1796	Q2163	C2	IT	L25	" printf ( ) " " scanf ( ) " non keywords c comand consent programm interag mond estern . " printf ( ) " permett scriv vide messagg (output ) , mentr " scanf ( ) " consent legg i dat inser tastier memorizz variabil (input ) . poter utilizz quest comand è necessar inser librer gestion perifer input/output macchin virtual , ovver scriv fuor " main{ } " : " # includ <stdi .h> " . 	1
A2207	Q2259	C2	IT	L27	fas esecu cpu principal : fas fetc , fas interpret quell esecu . prim fas l' unit controll trasfer l' istruzion registr istruzion (cir ) . second uc decodif l' istruzion cir nell' ultim fas uc gener i segnal controll esegu l' istruzion . 	0
A3351	Q3316	C2	IT	L36	funzion ricors è funzion richiam sè stess (ricorsion dirett ) richiam funzion volt richiam (ricorsion indirett ) . 	1
A2629	Q2685	C2	IT	L31	dichiar " char a[10 ] " si otterr array posizion " [0 ] " " [9 ] " . posizion " [10 ] " sar occup caratt " \0 " . ciò torn util quand dovrem esemp verific lunghezz , pon com condizion a[n ] == " \0 " com condizion uscit ipotet cicl whil . 	0
A2161	Q2332	C2	IT	L27	più process veng svolt parallel singol cpu , esemp process process b , cpu svolg brevissim lass process (non sta svolg process ) poi svolg process b brevissim lass (ovv cpu non sta svolg process ) , poi torn cos via . mod riesc esegu process parallel singol cpu . 	0
A2392	Q2573	C2	IT	L29	livell risult final , livell ottimizz programm puliz codic e' prefer utilizz costrutt switc , perc ' evit compil imbatt casist qual si sarebb trov legg tutt if-els andand legg casist interess . 	1
A3164	Q3167	C2	IT	L35	c/c++ funzion è compost test (header ) corp (body ) . prim , defin com " prototip " post solit header-files , è costitu : -tip risult (che esser unic ) specif " void " (se non ritorn nessun parametr ) -nom funzion -argoment parametr formal (sostitu quell effett moment dell' invoc funzion ) blocc corp è form : -part dichiar (di variabil local necessar all' esecu ) -part programmat content istruzion ver propr implement . 	1
A2426	Q2495	C2	IT	L29	scriv struct x{ .. } x1 ; x è struttur , x1 variabil . uso struct x{ .. } ; main dichiar variabil mod : struct x x1 ; x1.campo=valor ; facc quest dichiar struct { .. } x1 ; x1 è variabil poss inizializz dirett i camp struct : x1.campo=valor ; usand typedef struct{ .. } ; dichiar variabil bast semplic scriv main s1,s2,s3,sn ; s1.campo=valor ; i vantagg nell' usar typedef relat all' ordin , leggebil comprension codic . 	1
A2095	Q2329	C2	IT	L27	quand programm cre softw ,ovver codic sorgente,in determin linguagg programm esser " cap " computer qualsias automa,dev esser tradott linguagg macchin ,ovver oper bassissim livell . oper softw : compil prend l' inter codic sorgent traduc linguagg macchin cre cos l' esegu , bast error non vien cre . l' interpr traduc rig rig esegu . 	1
A2299	Q2355	C2	IT	L27	propriet oper boolean commut ( and b = b and ) , distribut . esemp quest' ultim è : and (b or c ) = (a and b ) or (a and c ) 	1
A2003	Q2129	C2	IT	L25	variabil trov valor integer (ovver i numer sinistr virgol ) 	0
A2487	Q2418	C2	IT	L29	ottimizz si intend process si increment sensibil prestazion programm sostitu alcun costrutt equivalent più efficienti.l funzional è grad programm risolv i problem propost . l' ottimizz avvien programm già scritt funzion si compon tipic fas : collaud prestazional , analis prestazion , ottimizz algoritm , ottimizz indipendent piattaform , ottimizz dipendent piattaform softw ottimizz dipendent piattaform hardw . 	1
A2498	Q2525	C2	IT	L29	veng defin global quand sens quest variabil poss ven utilizz ogni funzion fuor main main . mentr veng defin local quell variabil utilizz è relat all' intern main poss esser vist . 	0
A2362	Q2499	C2	IT	L29	bubbl sort preved confront copp element adiacent list , essi si trov nell' ordin sbagl veng invert . l' algoritm prosegu fas ordin tutt element esamin . merg sort lavor grupp element , ciascun qual vien ordin indipendent dall' . sottosequent veng poi combin , individu volt volt minim ordin list conseguent . metod più efficient è merg sort , quant rend necessar minor numer oper . 	1
A1870	Q2022	C2	IT	L25	i registr punt più alto gerarc memor , costitu mod più rapid sistem gest i dat poss esser dirett indirizz istruzion input output microprocessor . molt class registr , com esemp registr dat (dr ) registr indirizz (ar ) . vien usat memorizz numer inter , parol lett scriv mm . contien indirizz è usat acced memor . 	1
A1944	Q2058	C2	IT	L25	conten variabil non inizializz è indetermin , cio contien intern è present moment dell' alloc è assegn compil . 	1
A2023	Q2101	C2	IT	L25	programm continu assegn variabil numer massim bits quel tip variabil può conten , elimin i bits più ; esemp variabil potess conten 4 bits , assegn valor binar 10010 , ciò verr memorizz variabil sar 0010 , riport alcun error 	0
A1902	Q2068	C2	IT	L25	siccom funzion scanf %c , attend input caratt prim inser variabil predestin mett fil std , quand prem invi dop aver mess caratt esemp " p " compil mett fil std codic asci tast invi consider anchess input , cos fil std è " sporc " , far mod prossim scanf vad tutt ben , pul fil std funzion fflush , cos l' inser prossim input potr avven . 	3
A3163	Q3158	C2	IT	L35	tal oper c++ è tutt lec (non c ) . famigl funzion ugual com quest prend : " overloading " . esist per requis fondamental corrett funzion tal oper : 1 ) numer parametr formal divers funzion esser divers ; 2 ) definizion funzion parametr ugual (in numer ) divers tip vann evit . l' es . ved corrett creazion funzion divers (1 ) . n.b. programm esegu funzion appropr second tip argoment pass . 	2
A3008	Q3082	C2	IT	L33	si , l' array può esser defin com puntator . dichiar comport infatt l' alloc memor variabil puntator rappresent dell' array l' are punt . puntator è inizializz l' indirizz element dell' array . ogni element dell' array è access tram oper dereferenz ; esemp espression a[i ] * (a+ ) produc risult . 	1
A2751	Q2958	C2	IT	L32	codif asci 7 bit è standard codif caratter pot rappresent 128 caratter (2^7 ) . quest 128 alcun rappresent caratter alfanumer , dett caratter non stampabil rappresent codic controll (ad esemp 'null' ) . codif 8 bit (extended asci ) è stat svilupp segu poter codific caratter fuor 128 original (ad esemp lett accent simbol val ) . 	2
A3401	Q3354	C2	IT	L36	principal caratterist affinc algoritm poss esser espress form ricors : -la possibil formul l' algoritm funzion ; -l' esistent condizion termin , affinc non si verfichin cicl infin ; principal vantagg tal funzion è permett risolv problem compless poch righ programma.dal punt vist prestazion potrebber esser svantagg .funzion occup gross quantit spaz memor potrebber dar problem esecu . 	1
A2377	Q2459	C2	IT	L29	post prim funzion " main " , impon programm usar librer standard propr c , l' input l' output . 	0
A2770	Q2914	C2	IT	L32	linguagg programm alto livell tratt tip dat astratt cio insiem valor oper mediant codif non corrispond dat tratt concret macchin . programm è fondamental l' utilizz tip dat astratt perc è possibil tratt l' inform prescind mod concret qual essa è rappresent all' intern macchin . 	0
A3375	Q3381	C2	IT	L36	acced fil è necessar predisporr variabil rappresent , puntator fil (fil * fp ) . apertur : fil *fopen(nomefil , modal ) ; dov modal puo esser lettur " r " , scrittur " w " cos via . chiusur : int fclos (fil *fp ) ; resitu 0 tutt è andat ben , altriment eof . lettura/scrittur : int getc (fil *fp ) ; int putc (int c , fil *fp ) ; int fgetc (fil *fp ) ; int fputc (int c , fil *fp ) ; cancell : int remov (nomefil ) rinomin : int renam (vecchionom , nuovonom ) 	1
A2874	Q2873	C2	IT	L32	codif virgol mobil è util rappresent cifr grand piccol evit sprec inutil cell memor . punt vist sintatt rappresent virgol mobil consist part : mantiss l' esponent bas 10 , separ caratt " " . 	0
A2873	Q2921	C2	IT	L32	oper è float : tip int verrebb trasform float l' oper risult float . general valut operand rifer oper veng convert tip comun segu quest regol ordin : 1 operand e' long doubl l' vien convert long doubl 1 e' doubl l' vien convert doubl 1 e' float l' vien convert float altriment entramb vien esegu trasform inter sequenz cas non interess non riusc scriv limitaz caratter 	1
A2674	Q2783	C2	IT	L31	#defin dim 20 int main ( ) { int ar[dim ] [dim ] [dim ] ; int righ ; righe=sizeof( ) / sizeof(ar[0 ] ) ; //n°cell alloc l' inter array/n°cell alloc rig printf ( " nr righe=% d\n ", righ ) ; system ( " paus " ) ; return 0 ; } 	2
A2737	Q2698	C2	IT	L31	l' utilizz costrutt " switc " è comod sostitu ser comand " if " . mentr l' " if " verif condizion è ver fals , " switc " , dat condizion , verif più cas relat essa . per " switc " può esser utilizz alcun cas , : - vien valut variabil - ogni valor variabil utilizz determin sol istruzion . dell' istruzion esegu , " break " determin l' uscit costrutt " switc " . scelt final , " default " , determin l' oper esegu qualor nessun cas foss rispett . 	2
A2395	Q2470	C2	IT	L29	linguagg programm c si dic " cas sensit " poic riesc distingu i caratter maiuscol quell minuscol , caratterist pecul linguagg programm . 	0
A2681	Q2778	C2	IT	L31	indic array non nessun controll correttezz dat immess , spess veng fatt calcol cell memor inesistent . 	0
A2302	Q2200	C2	IT	L27	i principal oper logic and , or not . l' ordin prioritã ã¨ seguent : 1 . not 2 . and 3 . or 	1
A2212	Q2365	C2	IT	L27	asci unicod div sistem codif caratter . può codific 256 simbol caratter controll fondamental , utilizz 8 bit ; non includ per caratter alfabet (es . cirill ) . , , unisc sè tutt codif regional singol are , riusc cos rappresent caratter appartenent tutt lingu ; tuttav tal necessar 16 21 bit , comport cio maggior utilizz memor . 	0
A2420	Q2460	C2	IT	L29	fas svilupp programm c : 1-edit : consist creazion memorizz codic 2-preprocess : consist prepar process codic 3-compilation : consist compil , cio creazion var oggett codic memorizz 4-link : consist colleg oggett codic rispett librer 5-load : consist caric codic esegu output 6-exec : consist nell' esecu codic 	0
A1955	Q1999	C2	IT	L25	, variabil identif porzion memor destin conten dat , può compost lett cifr , necessar non iniz numer . 	3
A2835	Q2953	C2	IT	L32	variabil caratt enumer (enum ) descriv tip (com struct ) , serv dichiar variabil i valor " possibil " " ristrett " " predetermin " ( cio i valor spercific elenc ) . inoltr l' uso enum è util perc permett scriv codic più chiar più esplic . 	0
A2907	Q2831	C2	IT	L32	complement è sistem conversion utilizz abit elettron , infatt vantagg elimin rison zer ( elimin zer multipl divers rappresent numer binar ) . , codif complement è infin larg utilizz elettron poic circu sommator utilizz quest conversion oper mod più rapid ( esemp l' alu ) 	0
A2288	Q2215	C2	IT	L27	i registr insiem bit funzion memorizz dat . essi : registr indirizz memor : l' indirizz memor si vuol selezion registr dat memor : dic i dat giã ?â present memor selezion quell introdott contator programm : contien indirizz istruzion sucess registr istruzion corrent : contien istruzion tradurr esegu registr interru : inform funzion perifer . 	2
A2152	Q2284	C2	IT	L27	sram è ram volatil non necess refresh , i banc memor consent manten inform teoric infin , bass temp lettur bass consum . necess usar component cell rend per più costos dram . dram , è tip ram refresh i banc memor necessit . 	0
A3388	Q3373	C2	IT	L36	funzion remov ( " nomedelfil .form " ) ; serv elimin fil , mentr renam ( " nomeprecedent .form " , " nuovonome.form " ) ; serv rinomin . fil vien assegn com fil già esistent quest' vien solit sovrascritt . entramb funzion restitu feedback : 0 non error , oppur -1 aggiorn finestr elenc error codic dell' error verificat . usar funzion è necessar includ programm librer standard input output : #include<std .h> 	0
A2528	Q2416	C2	IT	L29	fas principal esecu programm : - edit : programm vien cre memorizz disc - loader : programm vien caric - exec : programm vien esegu 	0
A2759	Q2800	C2	IT	L32	numer ott vien convert numer esa attravers passagg : conversion numer bas ott numer bas dec conversion numer dec otten numer bas esa . esemp numer 2370 bas ott divent 1272 bas dec , divent 4f8 bas esa . passagg ott dec si ottien moltiplic , dall' ultim prim cifr , cifr question 8^n , n posizion cifr part cifr più destr ;il passagg dec esa si ottien divid numer dec 16 legg i rest dall' otten numer esa . 	0
A2100	Q2328	C2	IT	L27	i 64 bit 32 bit , indic rispett architettur lunghezz registr , spaz indirizz memor ecc . vantagg è capac elabor oper raddopp 2^32 2^64 . svantagg è i dat più ampi poss signific più spaz occup molt sprec . esemp memorizz numer 300 richied bit . memorizz 32 bit , 23 si sprec , 64 bit sprec 55 . 	0
A2485	Q2490	C2	IT	L29	innanzitutt voless individu l' n-esim element all' intern un' array " " poss usar indistint scrittur a[n ] oppur utilizz i puntator scrittur * (a+ n ) . inoltr puntator " i " " n " punt cell memor un' array different i-n darebb com risult numer element present cell memor . 	1
A2360	Q2467	C2	IT	L29	l' error più difficil individu è l' omission simbol " & " quand si acquis tastier tram scanf. compil non ril com error , programm smett funzion moment incontr . bisogn sempr ricord prim posizion string corrispond valor 0 dell' indic , l' ultim valor n-1 : l' spaz serv infatt simbol " \0 " indic termin string . e' facil dimentic inser " \0 " string quand quest vien inizializz manual (ad esemp cicl for whil ) . 	0
A1803	Q2163	C2	IT	L25	parol chiav linguagg c parol riserv linguagg , esemp int , char , float..., non poss esser usat com identif funzion variabil . scanf printf funzion predefin linguagg c permett effettu l' input l' output consoll fann part librer standard input\output present nell' intest programm (# includ <stdi .h> ) . 	1
A3136	Q3140	C2	IT	L35	i sottoprogramm permett svolg part programm zon separ . codic risult cos più leggibil si poss effettu più oper simil semplic richiam programm riscriv . 	0
A2463	Q2503	C2	IT	L29	rappresent virgol mobil numer real sistem numer decimal può esser vist com : r=m*10^n dov m, dett matiss è numer frazionar cio compres -1 1 , 10 rappresent bas (o radic ) elev n , numer inter segn , dett esponent . tip rappresent si vantagg virgol fiss poter codific numer grand numer piccol numer bits disposizion . quest ragion si utilizz tip rappresent . 	2
A2925	Q2928	C2	IT	L32	non dopp codif valor " zer " non richied circuiter specif tratt segn 	1
A2382	Q2434	C2	IT	L29	tip struttur è tip dat contien tip dat . serv cre variabil conteng var camp leg quell variabil , esemp memorizz var parametr oggett . vien dichiar tram com typedef struct {camp } ; 	1
A2404	Q2478	C2	IT	L29	e' insiem struttur dat algoritm permett esegu programm c , permett trasform input output 	1
A2509	Q2433	C2	IT	L29	linguagg c è utilizz perc è linguagg flessibil vicin macchin , usat svilupp unix sistem oper più modern com windows mac os x . caratterist import linguagg c è indipendent dall' hardw , cio i codic portabil macchin real un' altra . 	0
A2610	Q2744	C2	IT	L31	perc second scrittur ogni cas veng valut tutt condizion ogni cas , mentr è ver prim non veng valut . è ver second veng valut prim è ver l' ultim veng valut tutt . 	2
A3002	Q3062	C2	IT	L33	scrittur è scorrett perc puntator *a non sta punt nessun variabil , bens valor specif , non è logic puntator . risolv dovre dichiar un' altra variabil es . b , assegn valor b=20 , infin farl punt mod a=&b . 	1
A2257	Q2210	C2	IT	L27	i principal processor (cpu ) esegu oper , memor central (ram ) qual veng salv temporan i dat esser elabor , memor mass principal (hard disk ) qual salv permanent dat programm . quest comunic perifer (monitor , tastier , mous , stampant , sched ret , memor mass com pendriv ecc . ) attravers bus sistem qual trasfer dat comand 	1
A2184	Q2250	C2	IT	L27	registr interru , insiem segnal , fa' sì l' interfacc grad gener l' interru vien inser realizz dell' interfacc stess . funzion è quell blocc un' oper quand più import esser comp . c' è correl registr gestion interru poic , volt registr permett l' interfacc gener l' interru , processor interromp oper esegu gestion interru . 	1
A2375	Q2573	C2	IT	L29	different è stilist : è più leggibil switc if nidific . 	1
A3019	Q3105	C2	IT	L33	l oper " -> " serv acced camp struct tram puntator . si proced dereferenz puntator l oper * segu " . " es (* p ) .nom . c/c++ esist form compatt descriv quest oper è appunt l' oper " -> " ( freccett ) . cio scrittur (* p ) .nom p->nom equivalent . 	1
A3239	Q3129	C2	IT	L35	caratterist funzion ricors principal seguent : presenz piu' cas bas , qual risult puo' esser determin dirett ; presenz piu' cas compless , dett ricors , individu risult funzion valor piu' piccol piu' semplic risult dall' esecu funzion stess . 	2
A3223	Q3233	C2	IT	L35	const serv indic compil cert variabil non può esser modific durant l' esecu programma,vien utilizz funzion : -void stamp ( .. ) const { .. } -void funz(const../const* . . ) { .. } cas si rifer contenuto,nel variabil pass cop indirizzo.l variabil e/o indirizz sol lettur fas compil messagg error comunic eventual modif e' opportun utilizz evit risult corrott dov modif dat inizial , error difficil rintracc . 	1
A2683	Q2612	C2	IT	L31	quest istruzion non provoc error quant semplic si assegn 2 valor array 3 valor , cio ' signif a[3 ] non e' inizializz . infatt a[0 ] =1 , a[1 ] =2 a[2 ] avra ' valor casual quant e' locazion memor non inizializz 	0
A3178	Q3169	C2	IT	L35	i parametr formal funzion quell usat intest , quand essa vien dichiar . esemp , funzion intest è " int somm (int a,int b ) " , i parametr formal " " " b " . i parametr attual funzion i parametr funzion vien attiv , dop è stat opportun dichiar . 	2
A2562	Q2627	C2	IT	L31	perc array caratter conten ultim posizion valor special null , indic dov fin string . 	1
A3391	Q3360	C2	IT	L36	session scrittur lettur fil è necessar chiud fil mod tal conten veng salv permanent memor mass . quest oper vien esegu tram funzion fclos ( ) , può restitu risult distint : l' oper chiusur è stat esegu corrett restitu valor 0 , chiusur non è andat buon ritorn costant eof . 	1
A2812	Q2793	C2	IT	L32	simbol " == " è un' oper relazional uguagl ; ritorn 1 (ver ) 2 espression ritorn valor ugual ritorn 0 (fals ) cas contrar . usiam variabil float (32 bit ) variabil doubl (64 bit ) difficil restitu valor credibil poic variabil tip doubl contien più numer . 	0
A3385	Q3350	C2	IT	L36	qualsias linguagg programm comunic so poter acced fil , linguagg c/c++ i fil veng gest dirett sistem oper (so ) . particol c/c++ esist librer ad-hoc gest comun so . mod è possibil acced perifer ingress uscit tratt com files . 	1
A3361	Q3321	C2	IT	L36	fil binar è rappresent sequenz bytes mentr fil tip test (normal ) è caratterizz dall' esser sequenz caratter . cas occorr process codifica/decodif : comport corrispondent caratter scritti/lett quell realment memorizz perifer non garant . cas fil binar , , corrispondent è garant , quant non avvien alcun traduzion dell' inform . 	1
A2493	Q2514	C2	IT	L29	element array tip " int " possibil tutt normal oper aritmet . ciascun element ?intern ?array si acced tram indic ( inter >= 0 ) . segu è cicl stamp array 5 righ 5 colonn numer inter precedent inizializz . com è possibil ved necessar cicl stamp array form matric , altriment è sufficient cicl . for (i=0 ; i<5 ; i++ ) { for (k=0 ; k<5 ; k++ ) { printf ( " % d ", array[ ] [ k ] ) ; } printf ( " \n " ) ; } 	0
A2017	Q1973	C2	IT	L25	memor central è volatil : si perd inform quand cess l' aliment sistem ; memor mass è non volatil : è grad manten inform essa conten quand cess l' aliment sistem (hard disk rom ) . memor central d' access fiss non dip dimensione/posizion parol codic cerc ;in quell mass d' access dip veloc lettur dat posizion . 	0
A1961	Q2135	C2	IT	L25	perc unic tip sengnal on/off si poss scamb tutt inform si desider . scrittur aument lunghezz l' elabor è cos grad distingu facil segnal div . cre elabor bas numer different è possibil già esist (trit-calcol ternar ) . bas decimal sarebb complic realizz 10 segnal different . 	1
A2797	Q2812	C2	IT	L32	e' sicur più vantagg rappresent virgol mobil qual permett esprim numer grand poch cifr precision numer piccol . rappresent virgol mobil si utilizz notazion esponenzial 32 bit dov 1 bit indic segn , 8 bit l' esponent , dett caratterist , indic posizion virgol infin 23 bit mantiss rappresent cifr più rappresent numer . 	1
A2126	Q2237	C2	IT	L27	legg memor volatil superior 4096 mb serv un' architettur 64 bit , perc più memor sistem 32 bit non support , vist lim memor realment utilizz var second dell' hardw intorn 3,50 gb . signif un' architettur 32 bit massim quantit dat potr indirizz sar circ 4096 mb (4 gb ) , part vien utilizz indirizz necessar funzion dell' hardw perifer . 	1
A2579	Q2630	C2	IT	L31	i cicl equivalent . cicl " for " può sempr esser ricondott cicl " do whil " cicl " whil " . c' è teorem dic , teorem böhm-jacopin . cicl do-whil è util quand numer iter è not prior . mentr costrutt whil sequenz istruzion ripet vien esegu condizion espress whil è verific , cicl do-whil istruzion veng esegu dopodic vien effettu controll condizion whil verific . 	0
A3279	Q3378	C2	IT	L36	access casual (access random ) si indic caratterist poter acced element arbitrar sequenz costant , indipendent dimension sequenz stess posizion dell' element essa . l' element è arbitrar sens posizion non è preved , mot qual si usa termin " casual " . concett oppost è access sequenzial , l' access element richied più men second posizion . 	0
A2005	Q2101	C2	IT	L25	variabil vien assegn valor tropp grand , programm segnal part riserv messagg (in bass ) l' error riguard variabil digit , programm vien comunqu esegu valor non è desider . infatt si fuor rang definizion , risult comp segu l' aritmet complement 2 , volt super valor più alto è possibil memorizz , fa ripart contegg più bass . 	3
A3241	Q3158	C2	IT	L35	risult error quant si cre confusion rich cell . 	0
A2843	Q2820	C2	IT	L32	costruttor struct permett defin variabil struttur aggreg inform eterogene , non concess array . cio costruttor struct poss inser più variabil divers tip . non ved più variabil singolar , si parl entit più compless , caratterizz div camp . (es l' entit (nome,cognome,et ) ) . 	3
A2914	Q2831	C2	IT	L32	complement 2 è complement più utilizz più semplic rappresent numer binar posit negat . è possibil poic l' inform segn è inclus bit numer mot bast l' oper " addizion " effettu oper addizion quell sottrazion . otten numer rappresent ca2 , bast legg numer destr vers sinistr invert tutt cifr part bit ugual 1 (esclus ) . 	3
A1947	Q2135	C2	IT	L25	stat test part calcol progett bas ternar (ma bas 4 , 8 16 , com multipl sistem binar ) progett component memor trasmission inform . tuttav sistem binar è più comun poic semplif i process rend conseguent più veloc ; inoltr alcun cas non esist terz altern (es : on/off ) : determin component sarann sempr bas sistem binar . 	2
A2255	Q2323	C2	IT	L27	gestion perifer ã¨ caric sistem oper , puã² gest metod : polling interrupt . 	0
A2271	Q2347	C2	IT	L27	macchin von neumann : 1 ) unit elabor (cpu ) : scand clock interpret esegu istruzion programm (unit controll ,alu ) .present registr (cir,pc ,intr,sr ) . 2 ) memor central : volatil ,contien istruzion dat util all' esecu programma.s suddivid cell ,contenent parol , indirizz (ram ) . 3 ) perifer : permett scamb inform elabor mond estern (memor mass ,tast ,mous ) . 4 ) memor mass : memorizz dat mod persistent . 5 ) bus sistem : colleg element funzional consent scamb dat . 	2
A3432	Q3111	C2	IT	L33	scrittur *p=x indic puntator p punt cell memor contenent variabil x . scrittur x=*p , , indic variabil x si assegb conten cell memor punt p. terz scrittur indic variabil x è par sè stess moltiplic p. 	0
A3036	Q3067	C2	IT	L33	c/c++ funzion non può restitu dirett array poss è far restitu funzion puntator element dell' array quand vogl dobb ricord cos fondamental : -defin funzion com puntator tip dat form l' array es : int* funz( .. ) { .. } -se funzion si ritorn puntator defin all' intern funzion quest non funzion perc memor qual puntator è salv vien dealloc funzion (va usat funzion new usat memor heap ) 	2
A2626	Q2639	C2	IT	L31	linguagg c non esist tip string , è possibil definirlo/cr attravers array caratter . esemp vogl cre string " cia " , dobb utilizz array com : char parol [4 ] . l' array esser element perc l' ultim casell conten " \0 " termin parol . stamp vide parol è poi possibil utilizz com string : printf ( " % s " , parol ) . mod defin tip string è utilizz costrutt " typedef char string [ncar ] " ncar numer caratter massim . 	2
A1839	Q2117	C2	IT	L25	sicur cpu memor ram copp poter caric dat elabor veloc . poi memor fiss : hard disk access lent , più capient , memor solid (ssd ) più veloc capac ridott . perifer (sched aud , vide , ret , ecc. . ) non influent veloc calcol (ultim per alcun softw sfrutt gpu parallel cpu calcol compless ) . si necess veloc , invest prim 3 	0
A3266	Q3185	C2	IT	L35	funzione1 utilizz metod valor : vien pass sol valor variabil , verr cop non sub modif . funzione2 utilizz metod rifer : vien pass l' indirizz varabil , sub modif . i parametr funzione2 dev esser indirizz si usa &nomevar 	3
A1921	Q2097	C2	IT	L25	different macchin fisic , macchin virtual i component hardw simul . signif sistem oper sar install macchin virtual utilizz hardw non fisic simul programm (ad es virtual machin ) install sistem oper principal , ovver install macchin fisic . conseguent avrem macchin fisic può esser esecu più macchin virtual . 	1
A2489	Q2445	C2	IT	L29	c loos typing si intend i tip dat variabil non dev necessar esser dichiar . strong typing si intend i tip dev esser dichiar (c++ ) ; different risied scelt decisional progett linguagg , può vol più men flessibil all' intern esso . metod loos typing programm può commett error tip potrebber compromett l' esecu programm , strong typing costrett segu regol rigid , , non permett risolv veloc problem . 	1
A3197	Q3277	C2	IT	L35	, i parametr poss nom different , purc sian tip dichiar . i parametr present definizion funzion parametr formal , moment chiam funzion veng sostitu i parametr effett , quell specific main . esemp funzion è defin com void funzion (int , int b ) ; chiam , all' intern main , può form divers , com esemp int dato ,datob ; funzion (dato ,datob ) ; funzion , fas esecu , sostitu i parametr effett dato datob quell formal b 	4
A3353	Q3316	C2	IT	L36	funzion ricors è funzion richiam sè stess (ricorsion dirett ) richiam funzion volt richiam (ricorsion indirett ) . 	0
A2857	Q2904	C2	IT	L32	dichiar tip dat user-defined avvien solit part dichiar programm , dop costant prim variabil . parol chiav utilizz cas è " typedef " segu : 1 ) tip dat si vuol cre (ovver specif com è costru part tip esistent , sian built-in user-defined volt ) ; 2 ) tip ; 3 ) simbol " ; " . esemp : " typedef int anno ; " . mod attravers " typedef " è possibil assoc tip defin mediant costrutt " struct " , array puntator . 	1
A2430	Q2529	C2	IT	L29	consider x variabil tip inter l' espression x++ ved l' increment x 1 denot prim dell' increment , mentr cas ++x si sempr l' increment 1 , denotaziin vien effettu dop l' increment . esemp : x=5 ; printf ( " % d " , x++ ) ; // cas vide verr stamp valor x prim dell' increment , ossi 5 . //in istant x com valor 6 . printf ( " % d " , ++x ) ; // stamp vide valor x dop l' increment , ossi 7 analog val x -- --x dell' increment 1 si decrement un' unit . 	0
A3437	Q3340	C2	IT	L36	merg sort è algoritm ordin bas confront utilizz process risolu ricors , sfrutt tecnic divid et imper , consist suddivision problem sottoproblem stess natur dimension via via più piccol . (1 ) sequenz ordin lunghezz 0 1 , è ordin , nessun oper . altriment : (2 ) sequenz vien divis met (3 ) ognun quest sottosequent vien ordin , applic ricors l' algoritm (4 ) sottosequent ordin veng fus 	0
A3076	Q3067	C2	IT	L33	funzion potr restitu soltant puntator array funzion cre nell' heap qual controll alloc dealloc . infatt non è possibil l' assegn array , l' are memor stack vien dealloc termin funzion stess . 	0
A2916	Q2790	C2	IT	L32	pass decimal binar bisogn divid numer decimal 2 non si arriv 0 , riport sempr rest division . numer binar , dunqu , si trov prend i numer rest bass vers l' alto , ovver dall' rest division . vicevers bisogn prend numer binar moltiplic ogni membr potenz 2 corrispondent . esemp numer moltiplic 2^0 , 2^1 , 2^2 , cos via . si somm tutt i risult si ottien numer decimal . 	1
A3328	Q3371	C2	IT	L36	moment esecu programm veng apert fluss (streams ) standard : assoc vide terminal : - stdout - stderr assoc tastier : - stdin (funzion printf or scanf usan quest fluss ) 	0
A3263	Q3256	C2	IT	L35	utilizz funzion programm rend più semplic lettur eventual modif codic programm mucc istruzion sol funzion 'main' . essend c++ linguagg alto livell , non è comp programm alloc memor funzion . bast pens funzion main quell librer (conten esemp <iostream> ) non necessit esser alloc dichiar , librer estern includ . quantit memor alloc dipend esclus dall' oggett si vuol alloc . 	3
A2617	Q2778	C2	IT	L31	l' array rappresent più semplic tip dat struttur utilizz linguagg programm . import vann per evidenz i lim quest struttur dat present , onde evit error fas programm . e' ben ten ment dat linguagg c non effettu alcun controll i lim array . error non : 1 ) oper aritmet confront array ; 2 ) chied funzion restitu array ; 3 ) assegn valor all' inter array ; 4 ) inizializz array n element più n valor . 	2
A1992	Q2001	C2	IT	L25	different principal : memor ram è volatil può esser cancell sovrascritt , rom non può esser modific sovrascritt nessun mod perc è possibil legg conten apport nessun modif . inoltr rom è permanent è caratterizz d' access maggior ram , vien continu modific essend rapid dirett access . 	2
A2086	Q2250	C2	IT	L27	contien inform relat funzion perifer . perifer process dev contatt cpu verr invi segnal registro.in segu processor memorizz esecu all' arriv dell' interrupt iniz l' esecu subroutin esegu richiest dell' interrupt , infin processor ripr l' esecu oper stav elaborando.il c è grad sfrutt interrupt second funzion richiest . 	4
A3342	Q3316	C2	IT	L36	funzion ricors è funzion richiam sè stess (ricorsion dirett ) richiam funzion volt richiam (ricorsion indirett ) . 	0
A2446	Q2416	C2	IT	L29	3 fas esecu : fetc : l' indirizz prim istruzion vien inser programcounter . cu cop conten pc nell' ar vien lett quell' indirizz ; tal dat vien conserv dr . conten dr vien ricop ir . frattemp pc si è aggiorn locazion success . decod : l' istruzion vien interpret , prelev eventual memor dat necessar . exec : i dat veng caric registr cu invi alu com esecu dell' oper . risult sar conten registr . psw verr aggiorn 	2
A2696	Q2639	C2	IT	L31	string non è tip dat defin dall' utent corrispond array caratter , caratt final è null cio caratt " \0 " string lunghezz n contien n+1 caratter . string può esser defin dall' utent typedef esemp : typedef char string [n ] ; l' array caratter si dichiar semplic l' espression tip dat char corrispond caratter es . char vett[n ] ; 	1
A1822	Q2003	C2	IT	L25	macchin " von neumann " è modell hardw oper manier sequenzial .e' form var component : processore,l memor central ,la memor mass var perifer ;son interconness bus sistem trasfer i dat sincronizz " clock " dall' unit controllo.l macchin astratt c rispett quest caratterist struttur softw .e' compost dall' unit central ,dall memor central ,da perifer standandard i/o bus sistem . 	2
A2103	Q2328	C2	IT	L27	i termin 32 64 bit si intend grandezz bit variabil semplic architettur hardw . esemp cpu , i registr architettur 64 bit dimension maggior 32 bit perc dev " ospit " quantit maggior dat cos sistem può gest più dat contemporan . quest è l' unic different i calcol quant essi oper sempr com metod : fas fetc , interpret esecu . 	0
A2480	Q2490	C2	IT	L29	l' identif array fung puntator element , non è possibil modific valor , i puntator poss esser utilizz punt tutt element dell' array . bisogn porr per particol attenzion dimension dell' array , evit oltrepass i " confin " memor . 	0
A3050	Q3114	C2	IT	L33	struttur controll " if-els " " whil " defin compl quant permett codific qualsias algoritm . 	0
A2990	Q3073	C2	IT	L33	e' util dichiar contator " i " dirett all' intern cicl for quand si gran numer righ codic non si vuol ritorn cim programm dichiar tal variabil int. funzion quant mod si cre variabil local for vien dealloc appen cicl termin , si usa quand contator non serv success , util success cicl . 	4
A3305	Q3321	C2	IT	L36	fil normal test è fil contien caratter scrittur semplic , compong test leggibil dirett utent bisogn install programm appos . termin si usa contrapposizion fil binar , è fil contenent dat numer binar non dirett leggibil dall' utent . realt , punt vist macchin , non c' è distinzion i tip , poic tutt i fil non sequenz byte . different sta ciò i byte rappresent com veng interpret fil . 	1
A1990	Q1973	C2	IT	L25	memor ram è memor " volatil " , poic quand essa non vien più aliment perd i dat intern . ram più veloc (e più costos ) memor archiv mass , qual memor persistent different prim . 	1
A3395	Q3297	C2	IT	L36	funzion bas i tip fil si trov librer stdi .h fopen ( ) aprir fil , fclos ( ) chiud , fscanf ( ) fprintf ( ) scriv legg fil , fread ( ) fwrit ( ) lettur scrittur dat fil blocc alcun fseek ( ) ftell ( ) . general i fil ,propr com i fluss , poss esser form test (leggibil poi tram blocc not mett .txt com estension ) oppur numer binar (che imped lettur fuor programm ) . 	0
A3326	Q3372	C2	IT	L36	l' util risied fatt moment dell' apertur fil (open ) verr inizializz indic posizion fil . 	0
A2712	Q2761	C2	IT	L31	manc ugual infatt , quand pon variabil , cas , ugual valor , 5 , signif vien assegn valor variabil , cas un' istruzion condizional usiam ugual (a==5 ) verific variabil assum valor vogl , cas 5 . insid error costrutt non andrà verific variabil assum valor vol , calcol assegn variabil valor non verr segnal compil . 	2
A3384	Q3297	C2	IT	L36	oper principal usabil tip fil : oper gestion fil : apertur " fopen ( ) " , chiusur " fclos ( ) " , cancell " remov ( ) " ridenomin " renam ( ) " fil ; oper lettura/scrittur : formatt " fprintf ( ) fscanf( ) " , caratter " fgetc ( ) fputc ( ) " fil binar " fread ( ) fwrit ( ) " ; oper gestion error : " ferror ( ) " controll è commess error precedent oper lettur scrittur , " feof ( ) " controll è stat raggiunt fil precedent oper lettur . 	4
A3010	Q3105	C2	IT	L33	l' oper freccett è introdott semplific scrittur all' intern funzion struttur pass rifer es : typedef struct{ int a; } struttur ; //senz oper freccett : void funzion (struttur *s ) { (* s ) .a=3 ; } //con oper freccett : void funzion (struttur *s ) { s->a=3 ; } funzion equivalent l' oper freccett codic risult più leggibil 	0
A2758	Q2806	C2	IT	L32	convert numer binar numer decimal bast segu algoritm : numer binar puo' esser vist com array , dov ogni cifr (1 0 ) corrispond cell array . e' necessar moltiplic ogni cifr numer binar (quind ogni cell dell' array ) , 2^n , dov n e' posizion cifr nell' array (ricord prim cell dell' array corrispond n=0 ) . volt fatt ciò non rest somm i risult tal moltipl , somm dar numer binar convert bas decimal . 	2
A2600	Q2637	C2	IT	L31	array multidimensional è array qualsias numer dimension è intend com array array . util cre matric . esemp array tip : int matric [n ] [ m ] (con n m costant ) rappresent array multidimensional (bidimensional ) identif matric ( inter ) n righ m colonn . 	0
A2176	Q2245	C2	IT	L27	rappresent i numer virgol possibil usar 3 tip div : float , doubl oppur long doubl . numer molt cifr decimal si usa long doubl , per occup memor . tip float è più convenient termin memor , può conten men 	1
A2544	Q2639	C2	IT	L31	string dev termin caratt termin '\0 ' , mentr array caratter è contenitor più caratter 	0
A1827	Q2117	C2	IT	L25	component hardw maggior pes veloc computer cpu , infatt più è elev frequenz impuls clock , più è elev numer istruzion esegu unit . secondar prestazion pc influenz memor ram dispon (e tip memor -sram dram - ) , veloc trasfer dat disc memor . mot è prefer invest potenz processor . 	0
A2479	Q2560	C2	IT	L29	dichiar puntator si fa segu variabil tip puntator (p ) tip rifer appartenent , esemp puntator contien l' indirizz variabil inter si dichiar cos : int* p; dov l' oper * (oper non referenz ) mand conten dell' oggett punt p. p può possibil valor : p : conten valor variabil p (indirizz locazion memor punt ) ; &p : indirizz fisic locazion memor p; *p : conten locazion memor punt ; 	1
A3129	Q3274	C2	IT	L35	macchin dedic è oggett fisic virtual si occup svolg sol funzion . può esser realizz tram struttur lif (o fif ) vien realizz quand è necessar funzion nasc muoi all' intern main prim si conclud programm . 	0
A3032	Q3055	C2	IT	L33	caratt '* ' funzion oper dereferenz . esemp : *a=16 ; quest rig codic dic cell indirizz è conten 'a ' andiam mett valor 16 . 	1
A2298	Q2306	C2	IT	L27	long short qualif tip inter condizion spaz alloc compil variabil ; quand vien esegu programm val seguent regol : spaz alloc (short int) < =spazio(int ) < =spazio(long int ) . tipic i long utilizz 32 bit , i short 16 int 16-32 bit . 	0
A3214	Q3128	C2	IT	L35	non è possibil funzion restitu array perc vien tratt programm com puntator . soluzion problem è utilizz doubl (ricord doubl mul(doubl a[ ] , int n ) { ? . } ) , inoltr si può utilizz struct comport alcun risc : array veng pass indirizz valor metod è dispend punt vist dell' ingombr memor . 	1
A2575	Q2664	C2	IT	L31	, caratterist dell' array è l' omogen dat esso conten : tutt i valor immagazzin tip . 	1
A3331	Q3315	C2	IT	L36	f indic oper verrann svolt fluss (cio fil ) . fputs ( ) inser fil string immess tastier mentr fputc ( ) inser fil caratt . funzion fputs ( ) ricev input puntator string inser puntator fil , mentr fputc ( ) ricev valor inter caratt inser puntator fil . cas success fputs ( ) restitu output numer non negat fputc ( ) ritorn caratt scritt ; cas error restitu entramb eof (end of fil ) . 	1
A2458	Q2475	C2	IT	L29	programm è form ser algoritm veng elabor calcol svolg determin azion richiest dall' utent . ciò bisogn riusc " tradurr " algoritm linguagg comprens calcol quest ser comand è ver propr programm invi i var dat calcol cpu . 	0
A2633	Q2702	C2	IT	L31	non si può oper l' assegn array , cio dat array b , è error scriv a=b , poic array è sequenz cell consecut omogene . otten array ugual bisogn esegu cicl for , grad assegn element dell' array . esemp dat a[dim ] , b[dim ],i dovr scriv : int a[dim ] ; int b[dim ] ; int i; for(i=0;i<dim;i++ ) { b[i ] =a [i ] ; } mod otteng vettor ugual ogni element . 	1
A2806	Q2825	C2	IT	L32	cos effett , different sta scrittur programm infatt struct quand vuo cre variabil tip 'dat ' dev scriv struct dat vard ; mentr typedef dev scriv dat vard ; 	0
A2532	Q2464	C2	IT	L29	variabil semplic conteng sol inform individu è sufficient . variabil struttur richied struttur intern permett efficient memorizz inform altrettant efficient individu inform memorizz . semplic individu l' inter archiv ,poss richied nom indici,in mod tal ogni part individu . 	0
A2816	Q2792	C2	IT	L32	poic 8=2^3 , ogni cifr total corrispond 3 cifr binar : 000=0 001=1 010=2 011=3 100=4 101=5 110=6 111=7 convert numer sistem binar ottal si proced mod : si consider numer binar part destr si divid grupp 3 cifr binar . dop l' oper avanz cifr si aggiung tant zer quant bast complet grupp . ogni grupp poi convert corrispett numer ottal , com indic . esemp : conversion numer binar (1101 ) bas ottal (1101 ) = (1|101 ) = (001|101 ) =15 bas ottal . 	2
A3281	Q3421	C2	IT	L36	int fwrit (*ptr,dimensioneelement ,numelement ,fil *fp ) ; int fread(*ptr,dimensioneelement ,numelement ,fil *fp ) . funzion serv scrivere/legg blocc dat fil binar . è necessar specific , dimension singol element numer element scrivere/legg . i dat scriv fil veng pres zon memor punt ptr scritt fil punt *fp . i dat legg veng pres fil punt *fp memorizz zon memor punt *ptr. entramb restitu numer element lett 	2
A3296	Q3297	C2	IT	L36	innanzitutt fil esist già è possibil aprirl (fopen ) success chiud (fclos ) ; principal modal quell lettur (fopen " exampl .txt " , rt ) scrittur (fopen " example2.txt " , w ) . quest possibil version binar , camb legger codic . tuttav i comand feof , fprintf , fscanf, fputs , fgets , fputc , fgetc è possibil utilizz fil .txt qualsias mod previst c/c++ . 	0
A3364	Q3291	C2	IT	L36	concett fil intend memorizz dat mod permanent , l ?utilizz moment , oppur memor central non è sufficient l ?esecu programm . programm comport creazion variabil tip fil , l ?apertur fluss vers fil , relat oper lettur scrittur import oper chiusur termin fluss . fil struttur è sequenz lunghezz non prefiss valor tip . 	0
A2902	Q2814	C2	IT	L32	caratterist integral : rappresent numer discret valori,v è corrispondent biunivoc qualsias tip integral sottoinsiem numer natural caratterist floating : concettualmente,il domin r è insiem dens : dat element x1 x2 domin distanz epsilon piccol piac ,esist sempr ?infin valor r conten ?intervall [x1 ,x2 ] . tip integral : char signed char unsigned char signed short int signed int signed long int unsigned short int unsigned int unsigned long int floating : float doubl long doubl 	0
A2715	Q2642	C2	IT	L31	array può esser defin com collezion organizz oggett , dov tutt element apparteng tip (es . numer real , numer real caratter ) . ogni element dell' array dev' esser identific mod sistemat , quant dev' esser possibil richiam ogni singol element attravers notazion appropr , c vien fatt tram l ?us indic numer , array dimension n , vann 0 n-1 . essend essi sol struttur astratt identific puntator è possibil cre array qualsias tip dat . 	1
A2367	Q2427	C2	IT	L29	parol chiav inizial int rappresent tip valor restitu funzion . cas special main , esso vien interpret com valor restitu dall' inter programm sistem oper . coerent convenzion universal circ i valor restitu programm sistem , main restitu sempr numer inter . argc contien numer paramentr rig com , inclus programm . pertant argc e' sempr >= 1 . argv e' array puntator char . ogni puntator referenz singol parametr line com sottoform sempr . 	0
A2410	Q2427	C2	IT	L29	l' identif main è tip int quant è funzion ritorn valor inter ,0 default,il qual chiud l' esecu programm tram controll part compil (se è 0 chiud programm ) . struttur (int argc , char *argv[ ] ) pass programm i parametr inser line com moment richiest esecu sistem oper . argc contien numer parametr rig com ,inclus programm . argv e' array puntator char . ogni puntator referenz parametr form string . 	0
A2763	Q2903	C2	IT	L32	sistem esadecimal cifr vann 0 9 qual si aggiung prim lett dell' alfabet (a ,b,c ,d ,e ,f ) . i valor lett : a=10,b=11,c=12,d=13 ,e=14 ,f=15.per convert numer decimal numer esadecimal è necessar divid numer dat i success quozient 16 segu prend i rest ordin contrar ricord 10 15 valor sostitu lett . esemp : n° 26 26/16=1 resto=10 ( ) 1/16=0 resto=1 26 decimale= 1a esadecimal 	3
A2738	Q2649	C2	IT	L31	è ?collezion organizz oggett ?.il concett ?collezion ? implic tal oggett sian tipo.un array c è dunqu collezion variabil tip . ?organizz ? implic possibil identific univoc tutt ogget ?array mod sistematico;quest c vien fatt tram l ?us indic numer che,in array dimension n,vann 0 n-1 . int tesor [100 ] ; quest rig codic dichiar array inter , form 100 element .quest signif abbiam 100 variabil pront conten numer inter =>pratic . 	0
A2494	Q2448	C2	IT	L29	programm top-down è stil programm problem compless , algoritm proced vien suddivis sottoproblem più piccol più semplic implement linguagg desider . i vantagg programm top-down : -permett concentr aspett più signif ; -rend l' algoritm semplic più leggibil ; -la risolu può esser modific si modif struttur general dell' algoritm risolut ; -la risolu sottoproblem può esser riutilizz problem . 	3
A3273	Q3290	C2	IT	L36	aprir fil mod si poss legg scriv , si pass com string modal funzion fopen string " r+ " . legg si usa com sol funzion fread mentr scriv si usa funzion fwritef . legg scriv richied per introdurr concett posizion corrent all' intern fil . rend different vettor caratter è fatt disposit è memorizz è disc memor primar . 	2
A2374	Q2448	C2	IT	L29	top-down signif letteral " dall' alto vers bass " rappresent mod scriv programm . e' util scomporr grand " problem " tant problemin minor tratt volt . scorr vers bass , compil legg codic dar com soluzion somm tutt i problemin scompost l' abil programm . 	0
A2926	Q2822	C2	IT	L32	perc valor float , caus error minim calcol legg cert valor , non poss mai esser ugual . vien cos defin numer epsilon piccol rapresent margin error , graz qual si poss confront valor tip float dov approssim , garant appunt valor epsilon . 	1
A2465	Q2443	C2	IT	L29	" pseudo-cod " si intend linguagg programm rappresent serv dar ide progett andra ? scritt linguagg c ver propr . 	0
A2014	Q2001	C2	IT	L25	ram è memor volatil , qual veng " conserv " i dat cors elabor istruzion programm computer esecu , tutt ciò vien pers quand si spegn calcol . rom , , è memor permanent sol lettur , vien scritt sol volt è tipic utilizz memorizz dat programm serv moment dell’accension calcol . 	1
A1857	Q2029	C2	IT	L25	proced top-down consist suddivision programm partenz tant sottoproblem più semplic risolv . sottoproblem vien suddivis volt , necessar sottoproblem più semplic otten sottoproblem elementar , cio non ulterior scompon . tal proced risult fondamental miglior dell' ingegner softw ovver : affid , leggibil , riutilizz revision . 	1
A3064	Q3111	C2	IT	L33	scrittur signific complet different . signific prim scrittur (*p=x ) è p punt x . second è x è ugual valor punt p. mentr terz scrittur equival moltipl gen x=x*p . 	0
A2438	Q2570	C2	IT	L29	scriv whil ( ) { } non si ottien uscit cicl infin ; si vien gener un' error fas compil perc risult mancant condizion cicl whil . si ottien cicl infin scriv whil (1 ) { } perc condizion sempr valor " 1 " è sempr ver ( !=0 ) . calcol non uscir mai cicl whil volt è entrat . contrar cicl whil (0 ) { } non verr mai esegu perc condizion sar sempr fals . sar cicl " inutil " perc calcol non avrà mai possibil mand esecu 	1
A2558	Q2625	C2	IT	L31	si intend linguagg è grad riconosc maiuscol minuscol . perc 2 variabil inizializz maiuscol l' altra minuscol sarann divers occup porzion memor different . 	1
A2124	Q2306	C2	IT	L27	long short qualific tip variabil int. condizion spaz alloc compil variabil determin valor massim minim . elabor 32 bit compil alloc 16 bit variabil short int , ( -32.768 ; 32.767 ) 32 bit variabil int long int (-2.147.483.648 ; +2.147.483.647 ) . qualor support macchin , long int alloc 64bit estension maggior int. dev' esser 'short int' <= 'int' <= ' long int' 	1
A2908	Q2803	C2	IT	L32	defin tip dat è necessar cre struttur scriv typedef struct{ //qui mett variabil struttur esemp int a; char c; } nomestruttur ; infin usar struttur è necessar assoc " nomestruttur " variabil . l' passagg : nomestruttur b; 	1
A2504	Q2467	C2	IT	L29	error più facil commett è omett i dopp apic all' iniz string . omett programm non dar error memorizz com variabil . 	0
A2883	Q2812	C2	IT	L32	codif virgol mobil vien solit prefer quell virgol fiss quant quest' ultim lim numer cifr inter decimal . consegu precision decimal davver ridott (anc quand numer inter è piccol ) . codif virgol mobil , , numer part inter piccol molt cifr decimal , quest ultim poss occup i bit codif virgol fiss sarebber occup part inter (che sarebb preced zer , esser utilizz " convenient " ) . 	3
A3341	Q3316	C2	IT	L36	funzion ricors è funzion richiam sè stess (ricorsion dirett ) richiam funzion volt richiam (ricorsion indirett ) . 	0
A3259	Q3185	C2	IT	L35	funzion 1 pass valor variabil b mentr funzion 2 pass rifer variabil . funzion star attent non modific valor variabil b , quel cas valor main camb . main cas pass variabil pass l' indirizz 	0
A1949	Q2012	C2	IT	L25	linguagg alto livell si intend linguagg comprens utilizz person desider utilizz tal linguagg programm compil si programm . i linguagg alto livell più comun c , c++ , pascal , jav . tram compil linguagg alto livell vien tradott linguagg binar , unic linguagg macchin conosc compr . 	0
A2801	Q2822	C2	IT	L32	perc calcol non è infinit precis . talvolt numer 0 vien consider 0,0000034 . sicurezz si mett epsilon mett ripar quest evenient 	0
A2029	Q2068	C2	IT	L25	variabil programm memorizz memor primar calcol . memor primar è piccol non si poss memorizz grand quantit dat ; perc variabil tip char vien rappresent memor mediant byte ,convien svuot fil stdin quand si legg . 	0
A2521	Q2563	C2	IT	L29	pratic codic asci è codic può 7 8 bit (standard estes ) , occup relat spaz nlla memor , tuttav non è grad rappresent tutt i caratterer esistent . codic unicod , , può 16 32 bit , simbol aggiunt si prefigg comp copr tutt i simbol (compres ideogramm ) occup , chiar , maggior spaz memor . unicod sta prend sopravvent quant è utilizz ret internet , esemp , poter rappresent lingu caratter special . 	2
A2503	Q2442	C2	IT	L29	oper applic i puntator : dereferenz cio l' assegn puntator right-valu variabil (esemp x=3 , x=*p conseguent *p punt valor 3 ) ; l' assegn indirizz , cio puntator vien assegn l' indirizz variabil cio left-valu essa (esemp p=&x ) p è salv l' indirizz cell memor occup variabil x ; inoltr è possibil somm sottrarr quantit puntator qual punt all' indirizz memor success precedent . 	0
A2318	Q2286	C2	IT	L27	memor ram è risors limit vien condivis process dell' inter sistem . quest' ottic , dichiar variabil permett corrett gestion : sarann defin indirizz dispon riserv numer dimension necessar conten variabil tip dichiar . quest are memor alloc sarann riemp esecu programm . più , dichiar tipizz permett compil verific eventual error semant codic . 	1
A2568	Q2629	C2	IT	L31	different sta array è struttur dat compless monodimensional matric è " array array " , cio struttur dat bidimensional . 	0
A3413	Q3341	C2	IT	L36	sì è possibil lettur modal binar fil non modal binar , appar com insiem " zer uni" , poi non tradott è tradott codif asci i caratter veng visualizz com i numer (in binar ) qual corrispond . 	0
A2714	Q2672	C2	IT	L31	quand si dichiar array (per esemp array[n ] ) compil riserv memor spaz memor sufficient memorizz n variabil tip dichiar . tal cell memor si acced tram indic , indic parentes quadr , individu l' element richiest . indic element vann 0 n-1 (per acced element dell' array bisogn scriv array[0 ] ) . 	1
A3044	Q3106	C2	IT	L33	dot notation si usa c acced singol camp struttur : si scriv l' identif struttur segu punt dall' identif camp desider . 	0
A2997	Q3091	C2	IT	L33	sì , bast per ricord l' oper " * " priorit oper matemat , esemp x=2 * *p equival dir x= 2* (*p ) 	0
A1941	Q1971	C2	IT	L25	tipic problem può insorg quand si effettu oper variabil tip divers (float int ) . e' necessar anteporr " ( float ) " (senz virgolett ) all' identif variabil tip int desider invoc , specific cos intend tratt com float . inoltr i valor numer inter dev termin .0 (es . 3.0 , 7.0 ) . es : int = 6 ; float f; f= (float ) / 3.0 ; quest oper è dett typecasting . 	0
A2688	Q2667	C2	IT	L31	perc i creator linguagg programm decis cos , convenzion . 	1
A3156	Q3186	C2	IT	L35	quand funzion non restitu nessun valor 	0
A1959	Q2069	C2	IT	L25	trasform numer binar decimal : ogni cifr numer decimal corrispond potenz 2 , quest cifr è " 1 " prend mett part , quest cifr è " 0 " pass successiva(proced destr vers sinistr ) , si calcol tram l’algoritm division , divid success 2 (bas sistem binar ) numer decimal convert consider i rest contrar . 	0
A2174	Q2278	C2	IT	L27	l' unit controll (cu ) caric registr indirizz (ar ) l' indirizz si trov dat legg (o scriv ) ram . attravers bus sistem cu mand un' istruzion lettur (o scrittur ) ram ; un' istruzion trasfer dat dat conten quell' indirizz vien trasfer registr dat (dr ) vicevers dat dr vien scritt posizion ram corrispondent quell' indirizz . 	2
A2614	Q2629	C2	IT	L31	array è struttur dat form sequenz cell consecut omogene , contenent cio variabil (un cell ) tip . matric è semplic array multidimensional (soprattutt bidimensional ) , rifer nozion matemat matric . different sta fatt matric (o più ) indic (ogn indic è dimension ) ogni element è identific combin valor tutt indic vettor . 	4
A2515	Q2432	C2	IT	L29	linguagg assembler è rappresent simbol (mnemon ) codif binar usat calcol (linguagg macchin , binar ) . tip linguagg utilizz simbol , registr , etichett utilizz codif binar (la qual è salv memor ) invi richiest cpu . l' assembler è programm traduc codic linguagg assembler linguagg macchin funzion è propr quell far comunic linguagg alto livell cpu . 	2
A2172	Q2253	C2	IT	L27	azion scrittur lettur dat memor central veng gest cpu sfrutt bus indirizz bus controll cpu caric l' indirizz registr indirizz mett bus indirizz mod perifer corrett si attiv tram segnal controll trasmess bus dedic fa comp quest l' azion desider (store/load memor ) indirizz 16 bit quest poss esser tutt possibilitã ?â 16 uni 16 zer (2 16 ) 	0
A2746	Q2761	C2	IT	L31	l' utilizz = sta indic com assegn , mentr 2 = (== ) utilizz com uguagl . insid tal error poss esser , : esemp l' intenzion era confront valor un' istruzion if , l' oper assegn ritorn valor è probabil veng valut com tru , sar valut clausol then , fac comport programm mod inattes . 	1
A2772	Q2819	C2	IT	L32	complement 1 2 (non esist ) veng utilizz rappresent codic binar i numer negat . complement 1 si ottien somm numer posit binar mascher sol " 1 " , otten cos corrispondent numer negat . metod cre per problem zer : infatt verrebb identific mod div . complement 2 si somm ulterior " 1 " numer binar otten complement 1 , elimin cos problem . (si parl somm binar ) esemp : 0(dec ) =0000 0(dec ) =1111 (compl.1 ) 0(dec ) =0000 (compl.2 ) 	1
A1999	Q2003	C2	IT	L25	macchin von neumann rappresent mod maggior part calcol è organizz livell hardw . i element principal : cpu , memor central , memor mass , perifer bus sistem . macchin astratt linguagg c si bas quell von neumann , divers essa possied standard input standard output . quest suddivis cell (variabil ) , ognun qual contien dat immess dall' utent . 	0
A2015	Q2029	C2	IT	L25	proced top-down consist scomporr problem tant sottoproblem più piccol dettagl .quest metod risult util corrett comprension problem , è spess fas fondamental rioluzion problem informat . 	0
A2182	Q2209	C2	IT	L27	moment confront y oppost (not y ) utilizz l' oper logic " and " si cre contraddizion risult sempr fals . avend and second part dell' espression poic risult parzial è sempr 0 , consegu risult final 0 , cio l' espression sar fals ogni circost . 	0
A3184	Q3128	C2	IT	L35	c/c++ non è possibil cre funzion restitu array quant , volt uscit funzion , verrebb manc rifer puntator abbiam ritorn . soluzion possibil è quell cre tip struttur (struct ) conteng intern array , implement funzion mod ritorn un' istanz quel tip struttur . esemp : typedef struct miastruttura{ int mioarray[n ] ; } ; miastruttur funzion ( ) { miastruttur daritorn ; [ ... ] return daritorn ; } trov array all' intern struttur ritorn . 	1
A3172	Q3171	C2	IT	L35	l' insiem dat salv stack (com parametr , variabil local , ... ) è dett record attiv funzion , rappresent funzion esecuzione.il record attiv nasc muor essa esist specif ogni funzion . 	3
A3141	Q3140	C2	IT	L35	i sottoprogramm (o funzion ) part programm veng defin fuor main mod allegger codic . sol sottoalgoritm limit (ad . es . codic riemp array valor gener casual ) veng richiam main specific valor (variabil puntator ) input restitu valor output (fann eccezion procedur funzion void non restitu null ) . 	0
A2215	Q2209	C2	IT	L27	risult è 0 . si può osserv not y and y fa sempr 0 i risult dell' espression non sar mai 1 perc l' oper and com risult 1 entramb operand 1 . 	0
A2460	Q2523	C2	IT	L29	lazy-evalutation consist posticip valut comput quand risult comput è realment usat . quest tecnic aument performanc programm (non valut i component non necessar comput ) riduc possibil incontr error valut condizional comput . 	0
A2693	Q2673	C2	IT	L31	l' associat defin vers compil val espression , cio sinistr destr oppur destr sinistr . divent fondamental l' utilizz quand un' espression present oper grupp precedent , mod sap qual ordin oper verrann svolt . esemp : a+b-2 ; l' espression vien esegu sinistr vers destr , (a+b ) success risult vien sottratt 2 . 	2
A1929	Q2132	C2	IT	L25	riloc consist traduzion indirizz logic , ovver indirizz gener processor è esecu process , fisic , cio locazion esatt , fisic memor principal . esist tip div riloc present funzion different : quell static quell dinamica.l scop tal meccan , entramb i cas , è mett corrispondent indirizz logic indirizz fisic . 	2
A3277	Q3421	C2	IT	L36	sint : size_t fwrit (void *ptr , size_t siz , size_t blocks , fil *fp ) ; size_t fread (void *ptr , size_t siz , size_t blocks , fil *fp ) ; serv scriv legg , rispett , blocc dat (anc struttur ) dimension " size_t siz " , scriv legg " size_t blocks " immagazzin variabil punt ptr. restitu numer byte scritt lett . quest funzion usat scrittura/lettur dat binar fil , modal (binar ) si rend necessar gest fil contenent dat tip struttur (dimensione=cost ) 	0
A2432	Q2442	C2	IT	L29	impotr oper applic variabil tip punttor è * , necessar esegu l' oper dereferenz . fondamental è & , applic variabil prelev l' indirizz (magar assegn variabil tip puntator ) . si segnal poi oper : ++ -- ! size_of (altr oper unar ) = += -= assegn , ovvi necessar moltissim oper + , - util correl array puntator == , != , > , < , <= , >= confront && || logic boolean ) [ ] . -> notazion suffiss * / % moltipl ? : condizional 	2
A2687	Q2761	C2	IT	L31	si manc ugual . infatt quand scriv variabil (a ) pon ugual valor (5 ) , signif assegn valor 5 . mentr cas costrutt if interess verific quand variabil (a ) è equivalent valor defin (5 ) . form corrett costrutt è if (a==5 ) { } . insid error esso non può esser identific calcol difficil rivel . 	2
A1841	Q1964	C2	IT	L25	ricerc dicotom (o binar ) è algoritm ricerc permett trov , tram access casual , determin valor insiem ordin dat . algoritm oper men confront esemp algoritm ricerc sequenzial . prim trov l' element med dat ordin ; corrispond cerc , termin ricerc . altriment val valor è maggior minor dell' element med rip process finc non trov l' element cerc 	1
A2166	Q2266	C2	IT	L27	definizion costant " # defin " non produc nessun occup memor , mentr l' istruzion c " const " riserv memor costant vien defin , cas inter . " # defin " val tutt sorgent (programm ) quel punt poi , mentr " const " è limit function corrent . 	3
A2195	Q2295	C2	IT	L27	l` algebr bool è bas oper logic fondamental not (es not ) op. unar , and (es and b ) op. binar , or (es or b ) op. binar si applic operand poss assum i valor binar ver fals . contraddizion si intend un' espression è sempr fals esemp and (not ) . tautolog si intend un' espression è sempr ver esemp or (not ) . 	0
A3149	Q3183	C2	IT	L35	variabil global poss esser usat tutt dur programm , veng alloc fas compil dichiar fuor main (sub dop librer ) . esse vist tutt part programm , cio main var funzion . quest poss caus sprec memor different variabil local veng vist part codic inser delimit oper { } . permett liber memor non farl satur . 	2
A1795	Q2050	C2	IT	L25	e' necessar usarl quand compil esegu oper (somm , different etc ) più variabil disomogene (ad es . , int a=5 ; float b=2.5 ; ) salv risult variabil int c=a+b ; cos fac si perd part decimal (c=7 anzic 7.5 ) . , maggior comprension puliz codic , è specific form " output " (int , float , unsigned ... ) evit risult indesider . l' esemp prim , si scriv int c = (int ) (a+b ) ; //c val 7 . 	1
A2753	Q2887	C2	IT	L32	prend esemp tip dat " impieg " qual dovrebb esser caratterizz : , cognom , codic fiscal , indirizz , numer telef , stipend via segu . l' array non può esser costruttor tip adegu dat " impieg " poic non si prest aggreg tutt quest inform . infatt , esso è costitu element valor tip omogene . costruttor struct , , permett defin struttur dat aggreg element tip div i var element si dic camp struttur . 	0
A2223	Q2270	C2	IT	L27	un' elev frequenz clock cpu (ad esemp 2 3 ghz ) fa mod tutt oper calcol sian più veloc quand usi programm fann elabor grafic . 	0
A3324	Q3317	C2	IT	L36	è utilizz funzion ricors cas problem si poss suddivid sottoproblem risolv mediant funzion . esemp è programm stamp sequenz numer fibonacc poic (eccett cas n=0,1 ) programm utilizz funzion n-1 n-2 n defin dall' utent poi stamp i risult . 	0
A1980	Q2057	C2	IT	L25	clock sistem , circu temporizz , consent sincronizz l’esecu tutt oper esegu cpu . tal orolog intern è respons segnal onda quadr caratterizz rapid succession livell tension , alto bass . poic maggior è frequenz tal segnal maggior è numer oper veng esegu unit , si può afferm tal frequenz incid manier considerevol veloc pc . 	2
A3219	Q3192	C2	IT	L35	pass matric com parametr funzion , dovr pass funzion parametr inter , specific numer rig colonn matric . esemp , prend matric " int m[3 ] [4 ] " funzion " void funzion (int m ) " , si decid pass funzion parametr è matric oper seguent mod : " void funzion ( m [2 ] [3 ] ) " . cas vien pass funzion valor inter , situ second rig terz colonn matric . 	1
A2287	Q2372	C2	IT	L27	macchin virtual intend indic softw cre ambient virtual simul comport macchin fisic . e' res possibil graz fatt veng riserv risors hardw quest macchin virtual (part disc rigid , ram ecc ... ) . vantagg quest " macchin " e' offrir contemporan piu' utent possibil ' div ambient oper separ attiv ciascun propr richiest . 	1
A2393	Q2476	C2	IT	L29	variabil identif cert tip dat cell memor . puntator tien cell memor l indirizz altra variabil . puntator variabil indirizz dev esser tip . i puntator gest oper unar * & prend rispett i right left valu variabil punt . puntator valg regol algebr , si gioc indirizz non valor variabil . memor utilizz variabil puntator è sempr stess quantit , dip tip prescelt . 	3
A3261	Q3160	C2	IT	L35	sì , assum funzion ricors svolg propr richiam sè stess . ogni rich " profond " dell' elabor aument , finc cert punt , scop vien raggiunt funzion ritorn . tipic esemp funzion ricors è visualizz dat struttur gerarc , esemp visualizz fil conten directory . vien cre funzion 'gener ' legg directory visualizz ogni fil . fil è directory , funzion richiam sè stess usand directory trov com parametr . 	1
A2833	Q2952	C2	IT	L32	dat numer binar 01010101 , calcol cos numer decimal corrispond : 1*2^6=64 0*2^5=0 1*2^4=16 0*2^3=0 1*2^2=4 0*2^1=0 1*2^0=1 somm i var risult otten numer decimal 85 . quant riguard segn bast ved prim cifr (da sinistr ) è 0 numer sar posit è 1 sar negat , cas è posit . utilizz complement 2 otten numer binar 10101011 (bisogn invert 0 1 vicevers , somm 1 ) , fac i calcol com prim otten numer decimal 171. 	0
A1877	Q2165	C2	IT	L25	scanf è non scriv caratt controll (es . %d ) poic si inser qualsias valor , poss esser problem durant l' esecu programm . si dovrebb inser : printf ( " valore= " ) ; scanf( " % d " , &valor ) ; 	1
A3426	Q3387	C2	IT	L36	cas bas stud risolu problem manier dirett , ricorsion (ad es . x val 0 ) ; cas indutt ved risolu problem attravers determin proced ricors (ad es . x val n n+1 ) . sostanz si può afferm cas bas è cas particol cas indutt . risolv cas indutt si suddivid problem part (istanz ) più semplic mod pot risolv dirett success si unisc soluzion otten perven soluzion problem partenz . 	2
A3075	Q3044	C2	IT	L33	dicitur p[3 ] compil all' indirizz memor indic p , più i byte necessar memorizz tip dat è compost l' array moltiplic [3 ] (la posizion richiest ) prend valor (la deferenz è implic dicitur ) . cas veng usat oper precedent " ( ) " indic posizion dat dell' array richiest l' oper " * " vien effettu deferenz . dicitur divers , effettu stess oper equivalent . 	1
A2087	Q2228	C2	IT	L27	ram cach fisic divers . cach è realizz sram (ser circu flip-flop ) , divers dram usat ram (un cell è compost condens transistor ) . non è possibil " trasform " ram pc cach . teoric si può realizz macchin oper cach : effett via maggior veloc access miglior prestazion pc . cost sarebb per proibit . 	0
A2787	Q2820	C2	IT	L32	permett defin variabil cre dall' utent aggreg inform var tip . 	0
A3422	Q3341	C2	IT	L36	si è possibil i fil binar dimension limit minor test , è più difficil corregg cas error ; lettur veng form ser lung 0 1 , difficil comprend . 	2
A1883	Q2101	C2	IT	L25	dichiar variabil float od int , compil c/c++ alloc automat spaz 4 bytes memorizz valor . signif , variabil tip int , si può assegn rang valor 0 4294967295 , fenomen analog variabil float . accad assegn valor tropp grand , è error fas compil , fas esecu (nel cas vogl assegn valor tastier esecu ) . 	0
A3189	Q3139	C2	IT	L35	sid effect effett collateral è gener modif dell' ambient global , ovver ciò è conten main funzion . nell' ambit quest ultim si verif effett collateral quand si modific variabil non è stat dichiar all' intern funzion , ovver nell' ambient global , cos fac l' effett esecu funzion non è più confin all' intern stess , potrebb andar modific variabil utilizz funzion , compromett funzion . è sconsigl l' uso variabil global . 	1
A2851	Q2918	C2	IT	L32	conversion ottal decimal avvien sequent manier : valor (più destr ) string bit numer ottal esser moltiplic numer 8 elev posizion bit , segu bit ecc . tutt quest valor veng poi somm uscit valor decimal . 	0
A3316	Q3286	C2	IT	L36	l' access modal binar port vantagg modal tip test quant riguard numer byte letti/scritt stess memorizz nella/dall perifer . corrispondent test , , caratter scritti/lett quell memorizz perifer non è garant . 	1
A2252	Q2234	C2	IT	L27	e' util trov espression boolean si equivalg , avvien tavol ver ' corrispondent espression ugual . particol , de morgan trov seguent espression si equivalg : and b = not ( (not ) or ( not b ) ) ; or b = not ( ( not ) and ( not b ) ) ; quest legg de morgan aiut semplific espression boolean trov men compless form piu' facil legg piu' intuit . 	2
A2805	Q2885	C2	IT	L32	rappresent complement : rappresent complement . più utilizz è quell complement rappresent tutt i numer -2^ (n-1 ) +2^ (n-1 ) -1 dov n sta numer bit utilizz . msb (most significant bit ) rappresent segn numer , esso è 0 si proced normal decodifica,s val 1 si sottrarr 2^ (n-1 ) numer decodific ; inoltr camb segn numer bast invert cifr somm 1 . si usa perc è access sistem semplic quant usa circu . 	2
A2490	Q2495	C2	IT	L29	struct consent grupp variabili,anc tip diverso,aggreg insiem unic è tip struct veng dichiar etichett struttur serv com abbrev success dichiarzion (non costrutt ) typedef struct permett cre tip dat complessi,il scop è assegn nom altern tip dat esistent ,solit quell dichiar standard è tropp ingombr vantagg : variabil dichiar struttur si poss usar tutt main 	0
A1931	Q2135	C2	IT	L25	poic è più semplic interpret circu elettr sol fas dat 0 dall' 1 ( " non pass corrent 0 " , " pass corrent 1 " ) . si è possibil progett calcol div sistem numer , ciò rend più difficil progett controll error sistem . 	0
A3201	Q3233	C2	IT	L35	parol chiav " const " vien utilizz evit camb conten variabil mentr quest vien , esemp , stamp . utilizz const pass dat sol lettur , vien modific , verr segnal error . 	1
A2163	Q2335	C2	IT	L27	funzion processor fas interpret decodif dell' istruzion e' svolt dall' unit ' â controll (control unit ) consist trasform linguagg programm linguagg macchin . 	1
A2527	Q2568	C2	IT	L29	#defin è un' istruzion fa part precompil : compil esegu sostitu 'a' 20 all' intern codic prim compil (pu , minim part , rend po' più veloc l' esecu ) . const , , costant vien elabor sol volt vien alloc spaz conten cell memor vien richiam codic tal indirizz . inoltr compil esegu controll valid costant . " const" quand vien applic variabil , quest cess esser modific avrem fatt costant . 	1
A3359	Q3400	C2	IT	L36	quand vien istanz fil (fil *f ; ) sistem oper cre " stream " , fluss , assoc fil . fluss permett appunt legg scriv fil . i fluss utilizz comunic perifer com l' output vide tastier . quand chiud fil sistem oper " dissoc " stream fil . fil vien chius manier automat quand programm termin l' esecu . durant chiusur i dat veng scritt fil . programm si arrest inaspettat è possibil alcun dat vad pers . 	0
A1866	Q1964	C2	IT	L25	ricerc dicotom è algoritm velocizz ritrov dat list . essa elabor list ordin . vien ricerc dat punt central list , non si trov quest posizion si prosegu met list dov dat si dovrebb trov . si ricontroll dat central met pres esam . process si rip ritrov dat . ricerc è più veloc perc non controll tutt i dat scart met list ogni cicl . 	1
A2705	Q2732	C2	IT	L31	array si intend sequenz cell memor consecut omogene . ogni sequenz vien dat identif , mentr ogni singol cell vien identific mediant sequenz indic . moment creiam array dobb indic quant cell memor necessit ,cio diam all' array dimension fiss , mod tal quand richiam variabil compil sapp qual cell memor rifer . 	4
A1964	Q2163	C2	IT	L25	utilizz istruzion scanf printf è necessar includ librer " # < stdi .h> " keyword parol fondamentali,infatt non è necessar inizializz alcun librer utilizz ,quest rimang tal applic c (es : microcontrollor ) , mentr istruzion elenc non fiss , utilizz linguagg c altra piattaform avrò librer istruzion divers , keyword rimarrann tal perc propr c. 	1
A2849	Q2952	C2	IT	L32	codific binar modul segn corrispond numer 85 (posit ) ; idem codif complement 1 2 . essend posit infatt proced conversion non camb . 	0
A2636	Q2744	C2	IT	L31	prim è miglior perc rend codic più leggibil capibil lettor , perc if-els si un' unic istruzion (if-els ) second istruzion (els ) non serv compost cio abbi anch' essa condizion perc entra gioc quand condizion if è fals . cas semplif programm . 	1
A3088	Q3091	C2	IT	L33	puntator è variabil contien l' indirizz memor un' altra variabil . assegn puntator l' indirizz variabil è necessar dichiar (per specific tip dat dovr punt ) eventual assegn cell memor . attravers l' oper deferenz " * " è possibil acced cell punt assegn valor (ad esemp *p = x , mot si assegn valor x cell puntator fa rifer . ) 	1
A2253	Q2234	C2	IT	L27	legg de morgan prov l' equivalent specif espression boolean . prim legg afferm and b equival not ( ( not ) or (not b ) ) ; mentr second verif not ( ( not ) and (not b ) ) ã¨ ugual or b . 	0
A2400	Q2560	C2	IT	L29	dichiar puntator seguent form : ------------------------------------tipod *puntatore------------------------------ -- dov : 1 ) " tipod " defin vers qual tip variabil esso " può punt " ; 2 ) " puntator " è l' identif variabil puntator ; 3 ) ? * ? si chiam oper unar de-referenz . ? import ten present programm defin puntator determin tip poi utilizz punt oggett tip , si potrann otten error esecu avvert fas compil . 	3
A2724	Q2732	C2	IT	L31	array dimension vien defin all' intern programm com costant array static .gli arrays insiem variabil tipo.l singol variabil array dett element .gli array dimension fiss vien specific all' intern codic si chiam array static .,dat dimension non camb durant l' esecu programm different array dinam dimension vien determin all' atto esecu programm . es . array static : intx [5 ] ; float y[ ]={8 .34 ,4.55.2.33.6.12 } ; 	1
A1975	Q2047	C2	IT	L25	si è attual possibil , l' esecu programm avvien parallel cos aument performanc computer . e' import inoltr microprocessor inform spaz memor sta andand utilizzare,per evit sovrascr dat stess cella.quest quand memor microprocessor è condivis ,ci architettur memor distribu dov ogni microprocessor è dot banc priv memor . 	0
A3009	Q3082	C2	IT	L33	si punt prim cell memor . si è possibil acced utilizz oper dereferenz : * . 	0
A2894	Q2793	C2	IT	L32	quant l' oper uguagl (== ) relazion variabil poss differ quant variabil float contien numer real virgol mentr variabil doubl identif numer real virgol different float può conten numer più compless lung 	0
A3373	Q3408	C2	IT	L36	funzion int feof ( fil *f ) ; restitu valor divers 0 posizion corrent fil raggiunt fil . restitu 0 non fil . 	0
A1815	Q2143	C2	IT	L25	system ( " paus " ) serv sospend l' esecu programm utent non prem tast (a vide verr visualizz : " prem tast continu " ) .in pratic serv visualizz finestr l' output previst durant l' esecu programm (util verific correttezz ) .se non è present finestr vien chius termin dell' esecu poter visualizz " risult " dunqu potrebb esser omess (dip tip programm cre ) 	1
A3335	Q3372	C2	IT	L36	l' util acced fil mod casual , sta fatt poter acced conten fil più veloc mod sequenzial , quant si offset consent spost all' intern fil , part necessar dall' iniz , part posizion si desider . quest funzional risult particolar util si vuol acced mod rapid comod conten fil particolar grand . 	4
A2625	Q2729	C2	IT	L31	unic array non può conten variabil tip divers , perc altriment non sarebb array non avrebb funzion corrett . definizion sapp array è variabil struttur contenent insiem valor tutt tip (omogene ) , individu unic collett (identif ) ; utilizz variabil int non poss utilizz variabil tip char . 	1
A2369	Q2455	C2	IT	L29	si , è possibil graz all' assembler inlin permett compil corrett codic assembly inser sorgent scritt c c++ . 	1
A2863	Q2816	C2	IT	L32	inter gestibil calcol non poss assum numer grand (tendent infin ) perc memor risors disposizion calcol fin . quest cos limit i valor i calcol poss manegg . c/c++ inter posit (dett unsigned int ) può assum com valor massim 4.294.967.295 . valor è otten fac ( ( 2^32 ) -1 ) : 2^32 perc codif è 32 bit mentr si fa men perc tolt 0 (quest perc vogl otten valor massim non numer combin possibil ) . 	4
A3377	Q3360	C2	IT	L36	quand si diment usar chiusur fil (fclos ) , poss succed 2 cas : - perd dat (rimast buffer ) ; - perd files . 	1
A3068	Q3072	C2	IT	L33	framment codic stamp vide " 15 " . perc variabil puntator p q vien assegn l' indirizz memor cell array , dist 15 posizion . infatt , quand si dichiar variabil " " , è array 100 inter , programm alloc stack spaz necessar ,cio 100 cell consecut omogene tip " int " ( 4 byte ciascun ) . variabil " p " " q " veng rispett assegn posizion 36 posizion 21 dell' array , corrispond posizion memor dist 15 inter . 	1
A2263	Q2234	C2	IT	L27	espression boolean equivalent medesim tavol veritã ?â . legg de morgan seguent : prim ) ã ?â and b = not ( ( not ) or (not b ) ) second ) ã ?â or b = not ( ( not ) and (notb ) ) quest legg particolar util velocizz semplific i calcol . 	0
A2462	Q2473	C2	IT	L29	string non è necessar & perc esse funzion già puntator non c' è bisogn si indic qual esser l' indirizz rifer variabil . anzi mett quest si indic l' indirizz prim cell compil sa già qual cell conteng element success dell' array . 	1
A2827	Q2822	C2	IT	L32	ricord i tip float usat c (che sian quantific long ò doubl ) rappresent concettual l' insiem numer real realta' non sottoinsiem r caus precision limit calcol . dunqu defin qualsias tip virgol mobil è consigl cit vincol precision tram costant float sufficient vicin zer , appunt epsilon assicur margin accett error oper confront valor : " ( x==y ) --> (x<=y+eps ) && (x>=y-eps ) " dov , es : #defin eps 0.00001 	4
A3128	Q3253	C2	IT	L35	variabil è dett automat (o dinam ) , cess esist non appen fluss programm esce funzion variabil è defin . variabil è dett static " vit " coincid l' inter dur programm : quand fluss programm torn funzion è defin variabil static , ritrov variabil com l' lasc (cio valor ) . esist , variabil automat , specif aut , è inutil quant default (pu esser usat miglior leggibil programm ) . 	0
A2991	Q2997	C2	IT	L33	tipod è tip (int,float,c ecc. . ) puntator punt , variabil memor punt puntator dev esser tipod puntator . * è l' oper unar dereferenz , esso permett puntator right valu l' indirizz variabil punt , dereferenz quell cell corrispond quell' indirizz (ed assegn cert valor esemp ) . puntator è variabil tipod corrispond , right valu , indirizz variabil tip . 	0
A2406	Q2499	C2	IT	L29	bubbl sort funzion mod : ogni copp element adiacent list vien compar essi nell' ordin sbagl veng invert . l' algoritm scorr poi tutt list finc non veng più esegu scamb , situazion indic list è ordin . merg sort funzion mod : sequenz ordin lunghezz 0 1 , è già ordin . altriment sequenz vien divis met , ogni sottosequent vien ordin applic l' algoritm infin sottosequent veng fus . bubbl sort è più efficient merg sort . 	1
A3074	Q3075	C2	IT	L33	tutt i cicl veng usat gestion iter codic . cicl whil si rend necessar ripet blocc istruzion finc condizion valut è ver . quand numer iter è not prior è prefer l' uso cicl for , permett manier più sintet racchiud l' assegn , l' increment dell' indic condizion valut . cicl do-whil vantagg esegu indipendent condizion valut ser istruzion almen volt : risult particolar util controll dell' input . 	1
A1880	Q2039	C2	IT	L25	visualizz vide string inser %s printf . 	0
A3371	Q3341	C2	IT	L36	lettur fil binar avvien tram funzion fread . è possibil esegu l' oper lettur dat modal binar fil non scritt modal binar , dat vien interpret erron si legg sbagl . 	0
A1797	Q2097	C2	IT	L25	ogni utent interag macchin virtual non macchin fisic . termin “virtual ” indic quest macchin non esist realment , softw realizz part funzion . l' insiem funzion macchin virtual descriv può esegu . 	1
A3280	Q3378	C2	IT	L36	access casual (access random ) si indic caratterist poter acced element arbitrar sequenz costant , indipendent dimension sequenz stess posizion dell' element essa . l' element è arbitrar sens posizion non è preved , mot qual si usa termin " casual " . concett oppost è access sequenzial , l' access element richied più men second posizion . 	1
A2206	Q2229	C2	IT	L27	ram è dett memor access casual perc impieg acced indirizz div cio non serv scorr tutt parol present memor perc bast sap l' indirizzo. memor volatil perc quand sistem oper vien riavv i dat essa veng cancell ogni volt . 	1
A1923	Q2146	C2	IT	L25	l' architettur hardw calcol è compost : processor cpu svolg l' elabor programm , memor central ram utilizz memorizz dat istruzion esegu , memor mass utilizz memorizz grand quantit dat programm manier permanent (quind non volatil com ram ) , perifer var tip infin bus sistem interconnett tutt component permett scamb dat essi . 	1
A2456	Q2427	C2	IT	L29	l' indic predefin " main " vien dichiar com numer inter quant obbligator restitu inter segnal condizion error . struttur (int argc , char *argv[ ] ) , " argc " è numer parametr programm , mentr " argv " è l' array contien quest programm . 	0
A2742	Q2685	C2	IT	L31	dichiar array 10 element disposizion corrispondent 10 cell , è riserv caratt null . caratt \0 è import poic corrispond caratt valor zer codif asci . 	1
A3255	Q3133	C2	IT	L35	premett definizion funzion specif " inlin " , si espand ogni chiam funzion codic implement funzion stess . l' uso inlin permett elimin sovraccar dov gestion comun programm funzion . 	2
A3016	Q3043	C2	IT	L33	l' oper sizeof ( ) restitu numer tip int , dat restitu e' numer byte occup memor tip variabil inser com argoment funzion sizeof ( ) . 	1
A1996	Q2042	C2	IT	L25	modell von neumann macchin gest oper manier sequenzial (non poss esser esegu istruzion modal parallel non contemporan ) . oper , infatt , veng effettu mod sincr clock sistem gener intervall . ciascun quest intervall l' unit controll stabil funzion svolg . cpu , component perifer inoltr comunic attravers bus sistem . 	3
A2731	Q2715	C2	IT	L31	sì è possibil , è necessar defin l' array dichiar puntator element , esprim dimension funzion " malloc ( ) " , esemp : int *v ; v=malloc(10*sizeof(int ) ) ; compil riserv spaz memor atto conten array 10 element inter part dall' indic punt " v " . var dimension è necessar " rialloc " , ovver spost altra zon memor spaz sufficient conten (se rest dov' è scrivess cell sucess sporc memor ) , : v=realloc(v ,20*sizeof(int ) ) ; (+10 elem ) 	2
A2911	Q2870	C2	IT	L32	ogni caratt è rappresent rispett numer inter (codic asci ) . confront caratter è necessar confront i relat codic asci . esemp caratt '0 ' è identific codic 48 , mentr caratt '1 ' è identific codic 49 . confront poss dir 0<1 . 	1
A2789	Q2928	C2	IT	L32	si utilizz complement perc elimin problem dopp rappresent 0 necess circuiter specif gestion segn semplif calcoli.il più utilizz è complement 2 , dov rappresent numer si invert i valor ogni bit " risult " si aggiung 1 , elimin poi eventual rest .esist complement 1 , simil precedent , semplic si invert tutt i bit l' aggiunt .in metod per trov problem dopp rappresent 0 . 	1
A2193	Q2275	C2	IT	L27	principal tipolog istruzion : istruzion aritmet , istruzion controll istruzion trasfer dat . prim esegu nell' unit aritmetico-log registr cpu dedic . istruzion controll veng elabor principal nell' unit controll si occup prel , decodif dell' esecu dat . infin istruzion trasfer pass i dat registr all' memor cpu 	1
A3133	Q3139	C2	IT	L35	" sid effect " è camb programm può compromett funzion programm può modific variabil present funzion . tip sid effect si verif quand veng utilizz variabil global all' intern sottoprogramm funzion , esse sian defin all' intern dell' elenc variabil funzion . cas funzion , richiam , utilizz variabil global rend impreved comport funzion . 	2
A3282	Q3378	C2	IT	L36	access random si intend lettur l' utilizz variabil posizion casual . different l' access sequenzial è quest' l' access variabil avverr ordin , non mod casual . 	0
A1943	Q2041	C2	IT	L25	dop l' inser cert tip dat , different variabil tip int float , l' inser dat success tip caratt è necessar svuot prim buffer input . infatt , l' oper scanf potrebb esser ripet , essendoc buffer cert tip caratt , si ricorr error . far sì non accad , bisogn inser fflush (stdin ) prim scanf( " % c " , &car ) printf ( " car=% c \n " , car ) . 	0
A3318	Q3381	C2	IT	L36	instaur un' assoc fluss fil perifer è defin cos : fil *fopen (nomefil , modal ) indirizz struttur tip file.modal : ? r ? lettur modal test iniz fil , ? w ? scrittur modal test iniz fil , ?a ? scrittur modal test fil , ?rb ? lettur modal binar iniz fil , ?wb ? scrittur modal binarioiniz fil , ?ab ? scrittur modal binar fil .termin dell' assoc fluss fil perifer veng scritt dat memorizz buffer fil indirizz fp : int fclos (fil *fp ) . 	1
A2506	Q2571	C2	IT	L29	pot espress linguagg si manifest tip dat oper esprim , cio l' insiem istruzion previst esprim controll fluss esecuzione.l caratterist principal linguagg c seguent :l' elev pot espress (tip dat primit tip dat defin dall' utent ) , caratterist bass livell ,lo stil programm incoragg svilupp programm pass raffin success infin sint defin formal . 	2
A3440	Q2047	C2	IT	L25	approcc increment performanc computer consist nell' utilizz più processor , com architettur smp utilizz server workstation part anni '90 . i processor multi-cor consent potenzial moltipl performanc bas numer cor patt i programm sian " scritt " sfrutt quest potenzial : architettur multicor richied ottimizz part programm . cert compil c preved già support utilizz processor multicor . 	0
A1920	Q2047	C2	IT	L25	computer poss esser present più microprocessor . esemp 2 cpu separ , sald pezz silic , funzion separat . sicur condivid bus dat dovrann gir stess frequenz . l’esecu programm vien divis essi . esegu cert oper mentr l' oper . infin i dat converg tutt bus dat . 	3
A2158	Q2328	C2	IT	L27	aggett 32 64 bit intend dimension form standard variabil all' intern un' architettur hardw (un different gestion inform part cpu ) . second dell' architettur var dimension registr intern microprocessor . un' architettur 64bit può gest dat sar più efficient è " convenient " support bus dat indirizz , nonc memor ram , " adegu " all' architettur . 	0
A2175	Q2328	C2	IT	L27	different sta fondamental dimension bus dat : i processor 32 bit bus word (32 bit ) , mentr quell 64 doubleword (64 bit ) . un' altra different è version 64 bit support astratt 128gb memor ram mentr version 32 bit massim 4gb . sistem 64 bit gen offre prestazion miglior ; svantagg 64 bit è moltissim programm non scritt gir sistem 64 bit . 	1
A3175	Q3133	C2	IT	L35	risult funzion inlin e' simil funzion macr , controll tip . entramb i cas l' esecu e' piu' veloc funzion non inlin , quant non c' chiam funzion run-tim . funzion inlin piu' sicur funzion macr . codic funzion inlin , sar riprodott punt chiam ogni volt vien chiam funzion . funzion inlin contien poch righ codic non present loop . 	1
A2167	Q2201	C2	IT	L27	l' unit controll (uc ) gest sequenzializz ooper . ruol è prelev decodific istruzion . più precis fas fetc è uc spost istruzion registr indirizz (ar ) success spost i dat ricev memor registr istruzion istruzion corrent (cir ) ruol dell' uc è decodific l' istruzion , ossi tradurl termin alu (unit aritmet logic ) poss comprend esegu 	0
A2484	Q2443	C2	IT	L29	pseudocod si intend tip linguagg util rappresent algoritm , può affianc sostitu diagramm blocc . linguagg si inser descrizion linguagg natural dell' algoritm stesur programm linguagg alto livell . non è compil interpret macchin , serv rend l' ide sequenz istruzion programm dovr esegu . 	1
A2148	Q2284	C2	IT	L27	dram richied i dat veng period aggiorn esser manten memor , mentr sram conserv finc vien aliment corrent . consegu sram è più veloc consum men potenz dram . struttural sram necess più transistors conten cert quantit dat dram . dram è più econom è maggior utilizz . 	2
A3231	Q3153	C2	IT	L35	passagg valor si esegu si forn funzion , com variabil local , cop dat qual oper . si occup spaz memor termin esecu . cas passagg rifer (per indirizz ) si forn l' indirizz memor qual dat è alloc ovver puntator quel dat . sistem present evident vantagg (fra i più import esser l' unic possibil array , qual non è possibil l' assegn ) , men dell' utilizz " const " , rend possibil modif indesider valor . 	3
A2647	Q2655	C2	IT	L31	scanf ( ) legg caratter tastier singol parol non è possibil memorizz un' inter rig form più parol (non compr spaz ) . gets ( ) legg caratter standard input quand non incontr caratt newlin fil (eof ) inser com caratt caratt null ( ' \0 ' ) . convien utilizz gets memorizz inter righ , scanf, , singol parol . scanf ( ) inoltr ammett array tutt tipolog dat (purc all' intern dell' array sian present dat tip ) . 	0
A3100	Q3039	C2	IT	L33	linguagg programm c l' aliasing puntator consist nell' utilizz puntator different referenz stess variabil (quind stess posizion memor ) . cas si incorr risc compil poss gener error inattes oppur error run-tim . 	1
A2295	Q2270	C2	IT	L27	i fattor influenz velocitã processor . consist grandezz word (grupp bit 8-16-32-64 ) processor comun perifer , second consist frequenz , infatt quest rappresent velocitã veng emess word , ovvi capacitã gestion microprocessor aument cresc frequenz gradezz word , conclusion clock (ond quadr ) sincronizz oper cpu 	0
A1977	Q2041	C2	IT	L25	fflush (stdin ) serv imped error lettur input tastier variabil tip char . scrittur tip : scanf( " % c " , &dato1 ) ; scanf( " % c " , &dato2 ) ; non è funzional poic dop l' inser caratt pression tast " invi " sar interpret com input . scriv : scanf( " % c " , &dato1 ) ; fflush (stdin ) ; scanf( " % c " , &dato2 ) ; imped error pooic fflush (stdin ) elimin buffer caratt " invi " prim input 	2
A3398	Q3371	C2	IT	L36	i fluss veng apert all' iniz programm general standard input/output (< stdi .h> ) . standard input permett programm acquis fluss dat input tastier attravers oper lettur , standard output permett programm , attravers un' oper scrittur , gener output . com esemp si può prend consider l' oper cin , cout c++ 	1
A2792	Q2799	C2	IT	L32	virgol fiss veng diversific i bit indic part inter quell indic part decimale.s stabil dunqu virgol posizion fiss . virgol mobil part bit veng riserv rappresent cifr signif numer indipendent posizion virgol alcun veng riserv stabil dov posizion virgol . virgol mobil utilizz standard ieee-754 graz qual è possibil rappresent valor null infin nan , rend rappresent più esaust più complic 	0
A2659	Q2637	C2	IT	L31	array multidimensional (ò n-dimensional ) pratic array contenent n-element volt si present sottoform array . c mod si poss rappresent facil matric tabell i element apparteng tutt tip : int nomearray[ ] [ j ] inoltr pass array multidimensional funzion bast indic numer colonn dat i element memorizz ram rig rig : int f(int a[ ] [35 ] ) { .. } pertant l' eccess memor richiest si sconsigl l' utilizz array più 3 indic (ò dimension ) 	2
A3011	Q3100	C2	IT	L33	" typedef " permett assegn tip dat già esistent è principal utilizz " struct " , cre tip dat variabil eterogene (es . typedef struct{ ... } nuovonom ; ) . 	0
A3138	Q3237	C2	IT	L35	definizion funzion è compost test corp . test , chiam header , contien inform principal corrett funzion funzion . essa si defin domin , codomin (utilizz parametr formal ) funzion . corp (body ) è costitu blocc istruzion (cicl , istruzion condizional , struct qualsias tip com ) implement effett comp funzion svolg . 	2
A1854	Q2165	C2	IT	L25	perc inser = calcol ragion mod , fa ragion , paragon %d altra variabil risult non conform ciò vol raggiung . 	0
A2927	Q2904	C2	IT	L32	defin tip dat c si utilizz parol chiav typedef . quest esser segu tip dat dall' identif tip dat . esemp typedef int inter . dichiar variabil tip dat si usa sint nuovo_tipo_d nome_variabile.per esemp : inter numer typedef vien spess utilizz defin tip dat struct cos è sufficient , ogni qualvolt si intend dichiar variabil tal tip , utilizz tip dat riscriv inte struttur . 	1
A2995	Q3091	C2	IT	L33	l' assegn puntator variabil può esser sicur fatt spess è convenient 2 mot : question risparm memor fatt attravers l' assegn puntator si modific dirett cell originar . 	1
A3212	Q3256	C2	IT	L35	funzion occup memor soltant moment vien invoc fin esist comp termin non si può dir è consistent diminu dell' alloc memor . 	0
A3179	Q3282	C2	IT	L35	passagg vettor com parametr avvien tram passagg puntator solit bisogn pass numer element poic funzion altriment non capac conosc dimension vettor . esemp : void inseriscivettor (vettor v , int dim ) { ? ....... } . proced metod risult valid quand si consider matric . 	1
A2290	Q2328	C2	IT	L27	numer bit è rifer lunghezz variabil processor può gest ; processor istruzion 64bit è grad gest istruzion lunghezz dopp 32b,con 32bit sistem oper può gest 2^32bit memoria,mentr sistem 64 bit memor sal 2^64.il processor gest variabil più lung men oper ricostruzione/decostru inform dà alcun vantagg nell' utilizz memor grand dimension 64 bit sistem è men soggett overflow . 	0
A1998	Q2008	C2	IT	L25	assegn valor non inter variabil inter , com esemp 3.9 , programm inizializz variabil soltant part inter numer . esemp assegn valor 3.9 variabil " i " stamp vide , legg " i=3 " . infatt , variabil inter i=3.9 somm j=4 , com risult otterrem valor 7 , qual è esatt somm part inter valor . 	2
A2019	Q2012	C2	IT	L25	linguagg alto livell è linguagg programm più vicin logic linguagg natural , mod si rend programm più leggibil indipendent caratterist dell' hardw linguagg bass livell . 	1
A2832	Q2952	C2	IT	L32	dat numer binar 01010101 , calcol cos numer decimal corrispond : 1*2^6=64 0*2^5=0 1*2^4=16 0*2^3=0 1*2^2=4 0*2^1=0 1*2^0=1 somm i var risult otten numer decimal 85 . quant riguard segn bast ved prim cifr (da sinistr ) è 0 numer sar posit è 1 sar negat , cas è posit . utilizz complement 2 otten numer binar 10101011 (bisogn invert 0 1 vicevers , somm 1 ) , fac i calcol com prim otten numer decimal 171. 	3
A3309	Q3340	C2	IT	L36	i pass caratterizz l' algoritm merg sort : divid (dov sequenz element è divis sequenz n/2 element ) ; imper (che non è l' ordin sequenz mod ricors usand merg sort ) combin (la fusion sequenz ordin ) 	0
A3213	Q3284	C2	IT	L35	definizion funzion è compost : 1 ) test (o header ) , contien inform rilev fin uso corrett funzion cio : 1 ) tip risult (il codomin funzion ) ; 2 ) identif sottoprogramma;3 ) list dichiar argoment funzion (il domin funzion ) ; 2 ) blocc , dett corp (o body ) funzion ; corp funzion è compost : -un part dichiar , dett part dichiar local , contien variabil necessar esecu ; -un part programmat , istruzion corp . 	5
A3247	Q3146	C2	IT	L35	variabil global quell variabil veng dichiar all' iniz programm , fuor qualsias funzion . esse visibil tutt funzion present programm , cio poss esser utilizz modific tutt funzion . potrebb sembr vantagg uso non sempr è raccomand , poic è facil sian modific accidental (side-effect ) rend più difficil ricerc error . 	3
A3160	Q3140	C2	IT	L35	i sottoprogramm blocc istruzion permett semplific scrittur fas debugging relat programm . particol , tram l' utilizz sottoprogramm è possibil far rifer determin sequenz istruzion utilizz semplic l' identif assegnatogl , pass eventual variabil . inoltr , sottoprogramm può eventual esser utilizz div programm , evit cos programm necess dov scriv nuov . 	0
A2144	Q2329	C2	IT	L27	i linguagg compil , different quell interpret , veng scritt editor si occup controll correttezz codic poi compil , ovver , ogni istruzion vien trasform corrispondent codic linguagg macchin può esser esegu processor . mentr linguagg interpret veng elabor vol veng esegu istruzion cos com descritt codic sorgent controll error . 	1
A2452	Q2490	C2	IT	L29	linguagg c , array non è sequenz element posizion mod contigu memor . propr quest caratterist dell' array , poss not com strett colleg concett puntator : array non è puntator ser element . l' uso puntator è indispens qualsias oper atta gestion dell' array : l' ordin ,l ' ispezion qualsias algoritm oper array fa attravers i puntator element e\o utilizz l' aritmet puntator . 	1
A2289	Q2209	C2	IT	L27	l' espression restitu 0 qualsias copp (x ,y ) consider . si not termin not y and y restitu anch' esso sempr zer ; dat success oper and , risult final sarã ?â zer ogni copp qualsias l' espression parentes . 	1
A3034	Q2999	C2	IT	L33	break è com permett uscir costrutt , infatt cas switc cas cas foss l' entrat " cas " contenent seguent istruzion verrebb conclus tutt blocc compar ; inoltr è impost dir l' istruzion break permett uscir costrutt div (ad esemp i cicl ) . non includ break più " cas " fa si compar continu i cas success ; non è dett ciò mal , per progett programm risult decis più intric . 	1
A3435	Q2732	C2	IT	L31	array insiem variabil tip . singol variabil array dett element . ogni element è identific inter , dett indic . array dimension vien specific all' intern codic si chiam array static , dat dimension non camb durant l' esecu programm . are memor variabil consecut veng riserv moment dichiar dell' array , dimension non può esser più modific . 	0
A3399	Q3350	C2	IT	L36	ruol sistem oper gestion fil mediant linguagg c/c++ è assoc mod univoc posizion filesystem fil . non si può interag dirett fil pot attravers un' applic c/c++ , serv sistem oper assoc quel fil identif , non è variabil puntator tip particol far tram all' access fil . 	0
A1852	Q1964	C2	IT	L25	ricerc dicotom , ricerc binar , è usat quand si cerc determin dat grupp , magar numer , dat array memorizz (obbligator ordin ) si vuol ridurr i temp lung risult ricerc sequenzial . ricerc dicotom ,infatt , risult esser più veloc perc esegu men confront ,utilizz access casual dat , ricerc sequenzial dunqu , cas compil , permett esegu men oper . 	0
A2839	Q2806	C2	IT	L32	dat numer binar restitu rappresent bas decimal tal numer . trov l' algoritm risolut problem è necessar proced ser moltipl (2 ) elev valor dip posizion bit ?array , somm i div contrib leg bit ?array binar , poi stamp risult tal somm . riport segu esemp risolu : int n=8 ; int bin [8 ] ={1 ,0,0,0,0,0,1,1 } ; int i , dec=0 ; for (i=0;i<n ;i++ ) { dec = dec + numbin [n-1-i ] * exp(log(2 ) * i ) ) ; } 	2
A3117	Q3047	C2	IT	L33	pass dat non si fa alloc quantit memor stess dimension quell partenz cop l' inter conten . pass l' indirizz è possibil si evit passagg si lavor dirett variabil " original " salvaguard conten . metod richied men memor può esser pericol alcun cas quant si agisc dirett variabil original . 	0
A2994	Q3111	C2	IT	L33	3 istruzion non equivalent port 3 risult different . " * p=x " : 'p ' punt valor conten 'x' perc cell memor indirizz 'x ' . esemp : x=10 ; *p=x ; => 'p ' è conten " 10 " 'p ' punt cell indirizz 10 . " x=*p " : 'x' vien assegn valor conten cell punt 'p ' . esemp : *p=20 ; x=*p ; => 'x' vien assegn " 20 " . " x*=p " : l' istruzion equival " x=x*p " perc vien esegu moltipl valor 'x' valor 'p ' . esemp : x=20 ; p=10 ; => 'x' vien assegn 200. 	1
A3196	Q3274	C2	IT	L35	macchin dedic vien realizz all' invoc funzion . quest cre propr memor contenent variabil funzion , utilizz all' intern quest (local ) , i parametr (gest com variabil local , inizializz all' atto chiam ) risult funzion . memor vien distrutt termin funzion . esemp invoc funzion void f1 ( ) {printf ( " % d " , x ) ; } main ( ) {f1 ( ) ; } ; sar macchin dedic funzion void esegu istruzion pass macchin principal i parametr " cop " . 	2
A2079	Q2234	C2	IT	L27	legg de morgan formul equivalent permett riscriv un' oper " and " com un' oper " or " " not " , vicevers . quest formul utilizz , esemp , si vuol riscriv un' espression boolean utilizz " and " " or " . legg de morgan : and b = not( (not ) or (not b ) ) or b = not( (not ) and (not b ) ) 	2
A2192	Q2203	C2	IT	L27	l’oper or c vien scritt com | (pip ) è dett somm logic . quand vien effettu l’or bit , risult varr ver almen bit val ver . l’oper xor (or esclus ) c vien scritt com ^ (elev potenz ) è dett somm modul 2 . quand vien effettu l’xor bit , risult varr ver soltant bit val ver . 	0
A1824	Q1976	C2	IT	L25	computer rallent è dat fatt ogni process cors è sempr concorrent quantit risors (es : cpu memor ) alloc . front cert frequenz clock dat programm lavor memor ram , access costant , mot rallent è dat richiest spaz memor non dispon (cio quand ram è pien ) scars disponibil . 	2
A3047	Q3012	C2	IT	L33	" break " costrutt switc fa sì si esca dell' istruzion un' istruzion switc . si omett veng esegu tutt istruzion casist success . ciò può caus un' esecu divers quell previst programm , consc usat può dar vantagg com l' estension più casist . 	0
A3291	Q3371	C2	IT	L36	stdout , stderr stdin . i prim assoc vide terminal , l' tastier . stdin serv mand programm i dat input , stdout serv programm ritorn i dat output . stderr è fluss output è specif i messagg d' error . 	1
A2638	Q2766	C2	IT	L31	l' alloc dinam vettor permett non defin prior dimension .quest vien realizz attravers specif funzion (malloc sizeof ) l' utilizz puntator .se l' array cos cre per non vien inizializz potrebb port qualc problem quant memor utilizz alloc potrebb esser " sporc " . int *array ; (puntator inter ) int dim; (dimension dell' array ) array = (int* ) malloc(dim*sizeof(int ) ) ; (riserv memor dim " spaz " dimension int assegn puntator array posizion memor element ) 	1
A3232	Q3131	C2	IT	L35	funzion non può restitu array appunt definizion funzion , puo esser restitu valor com puo esser inter puntator non vettor valor com array . funzion esegu ser oper parametr attual tram parametr formal risult final esser valor . 	0
A2735	Q2627	C2	IT	L31	string è defin c com array caratter termin variabil '\0 ' . durant l' indicizz dobb consider array è conten termin andrà diminu spaz effett utilizz all' intern string . e' quest motiv quand necessit string n caratter dobb dichiar dimension n+1 . 	1
A2794	Q2830	C2	IT	L32	è necessar verific quant byte veng dedic variabil tip inter cognizion 'range' valor dispon poic oper sitem 64 32 bit avveng manier divers . 	0
A3057	Q3024	C2	IT	L33	si poss usar modific permanent cell array passagg indirizz nell' ambit funzion . iil valor assunt puntator è numer inter rappresent , byte , indirizz memor alcun programm ammett oper somm puntator valor inter (con risult puntator ) , oppur sottrazion puntator (con risult inter ) . 	0
A1976	Q2165	C2	IT	L25	inser caratter div caratter controll all' intern virgolett funzion scanf( " " ) provoc error lettur dell' input . utilizz notazion scanf( “ valore=% d ” , &valor ) non otten risult si otterrebb printf ( " valore= " ) scanf ( " % d " , &valor ) , variabil " valor " potrebb esser inser valor errat (qualsias l' input tastier ) . 	1
A2778	Q2920	C2	IT	L32	quand si parl struttur c si rifer costruzion defin programm poss conten n tip dat div tutt tipolog , mod eterogene (tip predefin , array , dat enum , ecc ) . not è tal costrutt poss esser utilizz tramm typedef defin mod comod veloc tip dat div quell predefin ; permett costru " struttur struttur " quant volt defin tip dat eterogene esso può esser utiliz com camp all' intern struttur grand . 	1
A2898	Q2800	C2	IT	L32	convert numer bas ottal bas esadecimal possibil soluzion (si potrebb utilizz trasform dirett utilizz per bas non decimal difficil applic ) : 1 . trasform bas ottal bas decimal success bas esadecimal es : 203( 8 ) -> (2*8^2+0*8^1+3*8^0 ) =131 (10 ) -> 83(16 ) 2 . trasform bas ottal bas binar success bas esadecimal . quest è inoltr procedur più usat calcol . es : 208( 8 ) ->10000011 (2 ) -> 83(16 ) 	4
A2179	Q2229	C2	IT	L27	ram è dett memor access casual quant permett l' access dirett qualsias indirizz memor brevissim , infatt è utilizz com memor central . è memor tip volatil poic necess aliment elettr manten propr intern inform , esemp spegn computer tutt inform memorizz all' intern essa veng cancell ; mot vien dett memor temporane . 	0
A1890	Q2057	C2	IT	L25	macchin von neuman fas d' elabor si sussegu mod sincr " orolog sistem " dett clock , scand cpu . funzional clock è gener tension produc segnal period . l' elettron macchin traduc oscill tension commut livell logic 0 1 (il funzion calcol è binar ) . numer commut è frequenz clock (espress hz ) . 	0
A3188	Q3135	C2	IT	L35	c funzion non può ritorn dirett array , modific array precedent dichiar , pass funzion indirizz non valor . pass valor funzion riusc modific local funzion chiamant (solit main ) non otterre alcun modif . non è necessar funzion ritorn dat perc modif già variabil dichiar funzion chiamant . tip funzion vien chiam procedur . far restitu array funzion dovre inser all' intern struttur . 	5
A2297	Q2203	C2	IT	L27	l' oper logic " xor " restitu com output " vero/1 " operand present valor " vero/1 " , ciã ? ? ã ?â² implic cas operand sian entramb " veri/1 " " falsi/0 " dar com output valor " falso/0 " ; " or " restitu output valor " vero/1 " almen operand ã ? ? ã ?â¨ " vero/1 " restitu valor " falso/0 " entramb operand valor " falso/0 " 	1
A2429	Q2568	C2	IT	L29	dichiar costant tram " # defin " preved i valor assegn costant veng sostitu fas compil . cas dichiar " const " , , valor assegn vien archiv zon memor . consegu l' uso " # defin " diminu l' occup memor rend più veloc programm , poic durant l' esecu , quand si utilizz tal costant , non è necessar ricerc i valor memor . 	0
A2607	Q2674	C2	IT	L31	cert si usa dichiar static array , perc que cas magar si sa già dimension massim serv mod non si utilizz ,appunt , l' alloc dinam risult po' più difficil (per neo-pragramm ) , cas tal memor alloc non veng dealloc programm si risc lasc inutilizz chè sarebb sprec . 	0
A3360	Q3400	C2	IT	L36	quand vien istanz fil (fil *f ; ) sistem oper cre " stream " , fluss , assoc fil . fluss permett appunt legg scriv fil . i fluss utilizz comunic perifer com l' output vide tastier . quand chiud fil sistem oper " dissoc " stream fil . fil vien chius manier automat quand programm termin l' esecu . durant chiusur i dat veng scritt fil . programm si arrest inaspettat è possibil alcun dat vad pers . 	0
A2407	Q2415	C2	IT	L29	funzion getc ( ) serv legg caratter tastier salv com inter all' intern variabil , all' occorrent stampabil attravers com putc ( ) . eof (end of files ) è special com (ctlr+z ) defin com un' inter fil 'stdi .h ' , non utilizz variabil tip char , risult util funzion getc ( ) dat i valor lett veng salv com inter . es : #includ <stdi .h> /* cop l' input nell' output termin ctrl+z*/ main ( ) { int c; whil ( ( c = getc ( ) ) != eof ) putc (c ) ; } 	1
A2164	Q2358	C2	IT	L27	bus sistem è canal permett colleg tutt i component all' intern sched madr calcol perifer estern essa , è gest gerarc master/slav , master è component detien controll bus quand vien esegu richiest , slav è rappresent tutt component implic cors richiest esegu l' istruzion , non deteng controll bus . 	2
A1868	Q2158	C2	IT	L25	variabil distint bas identif simbol . ogni identif è compost succession lett , cifr simbol underscor , post non mai cifr . linguagg c è cas sensit , bisogn attenzion all' utilizz maiuscol minuscol . e' viet utilizz identif più variabil variabil più identif . esist infin nom non si poss utilizz corrett lessical . 	3
A2847	Q2799	C2	IT	L32	rappresent virgol fiss non fa codific part inter ten cont segn part decimal separ virgol ; rappresent virgol mobil port tutt virgol codif part decimal , moltiplic poi esponent anch' esso codific . vien utilizz maggior codif virgol mobil perc ' utilizz spaz fiss riserv segn , esponent mantiss ( 1 segn , 8 l' esponent 23 mantiss ) . 	1
A1968	Q2067	C2	IT	L25	letteral " sistem ereditar " ovver sistema/appl (es . l' applic commercial cobol ) non recent invenzione/costru , per valor . cio sistem " dat " conserv valor all' intern mond continu evolu . sistem non facil modif sostitu od upgrad . julius k . baah donkor matricol : 167124 	1
A2895	Q2889	C2	IT	L32	i tip camp si poss inser all' intern struttur i seguent : -tip semplic (inter caratter ) ; -tip struttural (array , ... ) ; -tip predefin linguagg ; -tip implement programm . 	0
A2419	Q2485	C2	IT	L29	quand vien defin un' array si decid numer cell esso destin , ricord i valor numer prim cell è dedic valor 0 quell tip char l' ultim è dedic " \0 " . part fondamental è l' indic , consent individu var cell dell' array . 	0
A2467	Q2455	C2	IT	L29	linguagg c è med livell astrazion superior linguagg assembler . mot codic c esser compres esegu calcol bisogn esser " tradott " linguagg bassissim livell (quest è comp compil ) . implement codic c codic astrazion inferior (sintatt semant different ) non sarebb decifr compil , non riusc rend esegu . conseguent codic " mist " abbiam scritt rest inutilizz . 	0
A2084	Q2320	C2	IT	L27	clock è circu gener impuls forn processor scansion temporal l' esecu singol oper logic . rispost domand è . infatt , bisogn consider cpu è , insiem frequenz clock , numer istruzion clock . inoltr , esemp , l' architettur mult cor adott orma tutt cpu calcol modern consent aument potenz calcol aument frequenz clock . 	1
A1802	Q1973	C2	IT	L25	memor ram è memor volatil , different disposit memor mass memor persistent (es . hard disk ) ; memor differ tuttav un' aspett : ram (per l' appunt random access memory ) è più veloc memor mass quant d' access locazion memor caratterizz è indipendent dall' indirizz words . 	3
A2597	Q2782	C2	IT	L31	non sens parl " increment " precedent , espression , si può per modific natural ordin precedent oper l' uso parentes . 	1
A2111	Q2358	C2	IT	L27	modal master/slav nell' ambit funzion bus sistem , si intend facolt cpu controll mod unidirezional inform viagg bus sistem . 	0
A2590	Q2733	C2	IT	L31	sì perc inizializz array static bisogn specific numer element , chiunqu può ricav dimension legg l' inizializz . 	0
A1951	Q2052	C2	IT	L25	bus sistem bus estension . svolg principal funzion : - funzion bus dat , permett scamb informzaion bidirezional i component - funzion bus indirizz , dov indirizz invi mod unidirezional dic cpu dov svolg funzion richiest - funzion bus controll ,coordin oper sistem mod tal evi conflitt permett comun nuov perifer tram slot . 	0
A2475	Q2486	C2	IT	L29	si omett " break " controll pass blocc " cas " ?altr : moment foss già stat trov soluzion , assenz " break " , compil andrà verific tutt " cas " . sostanzial l' utilizz " break " molt permett evit dispend inutil risors . 	1
A2887	Q2883	C2	IT	L32	quand array vien pass funzion com parametr formal , l' indirizz bas dell' array vien pass " valor " funzion . fatt si realizz passagg parametr " indirizz " effett final apparent è l' array pass " rifer " . parametr formal dichiar test funzion vien tratt com puntator . suppon tipoarray defin com : typedef doubl tipoarray[maxnumelem ] un' intest corrett è esemp : doubl sum (doubl *a , int n ) dov n è dimension dell' array pass . 	5
A3139	Q3230	C2	IT	L35	tip dat " void " (vuot ) è usat funzion non necessit ritorn alcun valor , quest funzion non sar necessar utilizz com " return " . esemp tipic funzion è classific com void è funzion stamp , non ritorn nessun dat non stamp vide valor . 	3
A1926	Q1962	C2	IT	L25	quant contrar com " printf " , " scanf" salv valor è necessar attribu indirizz quel valor andrà salv ciò avvien utilizz l' oper " & " . 	0
A2141	Q2307	C2	IT	L27	registr interru è sistem utilizz var hardw segnal attiv processor . poic processor può ricev inform sol attravers ingress , quand hardw (intern estern pc ) richied oper cpu interromp attiv sta svolgent quest' ultim far si elabor rischiest dell' hardw question . 	2
A2354	Q2451	C2	IT	L29	cas costrutt else si rifer if (c2 ) poic compil .attribu if più vicin . 	0
A3256	Q3206	C2	IT	L35	funzion c ritorn valor dop averl otten ser oper mentr procedur non ritorn null m esegu oper esemp stamp vide ser parametr 	0
A3288	Q3372	C2	IT	L36	l util acced fil manier casual sta' fatt è possibil legg scriv i dat qualsias ordin . (con i fil sequenzial è sempr necessar part ?iniz fil proced ordin scansion attravers fil ) . 	0
A2093	Q2266	C2	IT	L27	" const int n=50 " è dichiar costant , assoc permanent valor identif , cas assoc variabil inter n valor 50 . " # defin n 50 " è dichiar variabil non riserv spaz memor sostitu valor costant post dell' identif vien esegu processor compil . 	0
A2719	Q2616	C2	IT	L31	si' , e' possibil inser blocc istruzion vuot costrutt if . non e' error sintatt , pero' sicur altern miglior svolg comp . poss dir codic e' corrett non efficient . 	2
A3325	Q3324	C2	IT	L36	i fil binar si corrispondent 1 1 garant sequenz byte , non si ottien i fil test , inoltr non occorr nessun traduzion . 	0
A3167	Q3159	C2	IT	L35	vien cre macchin dedic prim funzion alloc relat memor . memor è organizz pil l' ultim macchin cre è prim esser distrutt . quand prim funzion termin macchin dedic vien distrutt memor dealloc . stess accad second funzion . quand termin main macchin virtual vien distrutt memor dealloc perc anch' esso è funzion . regol pil è rispett , infatt macchin main vien cre prim distrutt ultim . 	3
A3357	Q3321	C2	IT	L36	fil normal inform rappresent com fluss caratter . particol non è per garant corrispondent input output . infatt alcun caratter poss esser tradott . fil binar non è fluss bytes ugual all' input . non è traduzion dell' inform corrispondent è garant . fil binar è per difficil consult , quant i bytes spess risult protett . 	0
A2553	Q2673	C2	IT	L31	associat si intend procedur assegn vers valut espression (da sinistr destr ) . divent fondamental quand valut oper grupp . 	0
A2004	Q2040	C2	IT	L25	codic asci è sistem codif 7 bit vien comun usat calcol . codic permett determin tabell codic fann rifer caratter . i prim 32 (0-31 ) 127 caratter non stampabil perc controll . i restant rappresent tutt i caratter stampabil . stat propost soluzion 8 bit permett raddopp i caratter per quell più comun utilizz è 7 bit . sistem approv iso 646 . 	4
A2817	Q2883	C2	IT	L32	pass array rifer funzion , ovver mod ogni modif funzion parametr veng visualizz fuor funzion , bast preced parametr simbol & . quand si pass array realt si pass l' indirizz element dell' array . parametr formal vien tratt com puntator element . element dell' array non veng cop parametr formal . 	2
A2513	Q2490	C2	IT	L29	graz puntator è possibil complet gestion array . oper esegu puntator defin aritmet . esemp : istruzion " p=&a [0 ] " , " p=a " (notazion equivalent ) , dov " p " è puntator " " array , è possibil punt element dell' array . increment poi puntator (p++ ) si andrà punt success element dell' array , mod sar possibil punt qualsias element . poi andrem esegu l' istruzion " x=*p " , assegn valor conten l' indirizz qual punt puntator . 	3
A3424	Q3321	C2	IT	L36	l' unic different fil normal binar e' mod codif 	0
A3262	Q3277	C2	IT	L35	parametr funzion sta main può differ parametr funzion stess . funzion sta all' intern main è indipendent main i parametr (argoment ) valor local funzion richiam . 	0
A3392	Q3401	C2	IT	L36	buffer sistem serv memorizz mod temporane i fil scrittur cos poi quest poss esser manipol . 	1
A2408	Q2439	C2	IT	L29	livell sintatt equivalent . ogni for può esser tradott whil essi equivalent livell linguagg macchin . tuttav whil è solit prefer quand condizion test è condizion logic non dirett leg numer iter esegu ; vicevers for è solit utilizz quand si vuol iter numer precis . quest , per , è question comod non obblig . esemp traduzion for -> whil for(inizializz ; test ; step ) { ... } = inizializz whil (test ) { ... step } 	1
A2356	Q2467	C2	IT	L29	l' error più difficil individu è l' omission simbol " & " quand si acquis tastier tram scanf. compil non ril com error , programm smett funzion moment incontr . bisogn sempr ricord prim posizion string corrispond valor 0 dell' indic , l' ultim valor n-1 : l' spaz serv infatt simbol " \0 " indic termin string . e' facil dimentic inser " \0 " string quand quest vien inizializz manual (ad esemp cicl for whil ) . 	0
A2971	Q3075	C2	IT	L33	different quest 3 costrutt non molt , dat intercamb (fann ) . i cicl " whil " " for " pratic ident , " for " offre per scrittur più ordin più facil lettur . cicl " do-whil " different è prefer gest l' input semplic fatt istruzion conten corp cicl sarann sicur esegu almen volt . 	0
A2105	Q2328	C2	IT	L27	prov scrittur ... 	0
A2637	Q2668	C2	IT	L31	l' error segment luog quand programm tent acced posizion memor qual non è permess acced , oppur tent acced manier impropr . error si verif spess linguagg c; esemp quand rifer puntator manier errat : char *s= " string " ; /*puntator string posizion segment sol lettur dell' esegu , quand si esegu programm sol s.o. mapp zon sol lettur , imped modifica*/ *s='a ' ;/*tent scriv memor sol lettur caus errore*/ 	3
A2266	Q2329	C2	IT	L27	termin " compil " si intend traduzion tutt programm linguagg . metod traduzion è più veloc puo' richied . " interpret " , , si intend traduzion line volt . metod l' esecu è più lent programm è maggior interatt . 	1
A2454	Q2521	C2	IT	L29	cicl for è indic oper si conosc numer ripetizion esegu . cicl whil è particolar util quand si ripet un' oper moltepl , non si conosc quant ; inoltr è consigl quand si modific esecu numer cicl esegu . infin cicl whil è possibil cre cicl for , mentr l' invers non è possibil . 	0
A3073	Q3071	C2	IT	L33	non esist different puntator dopp puntator , quant puntator puù punt qualsias variabil quest può esser puntator si cre puntator . i puntator singol veng utilizz l' assegn indirett valor variabil ciò puntator singol è variabil contien l' indirizz variabil semplic . i dopp puntator veng utilizz quand si usan funzion contenent string quant permett richiam var posizion string dover utilizz increment . 	1
A2727	Q2619	C2	IT	L31	metod più efficient scorr array numer elev element è costrutt cicl , più precis cicl for whil , graz qual è possibil scorr tutt element dell' array , increment l' indic ogni pass . tram cicl for è present scorr , visualizz tutt element dell' array , dand possibil blocc cicl volt vien raggiunt condizion . 	2
A2013	Q2052	C2	IT	L25	bus calcol serv far comunic i var component calcol (memor mass , perifer , memor central , cpu ) . funzion bus è quell colleg element , trasmett ricev . bus è costitu tip line : line controll , bus dat bus indirizz . 	0
A3191	Q3177	C2	IT	L35	e' più convenient usar passagg parametr valor indirizz , quand si effettu camb parametr procedur , perc quest camb non influenz i valor variabil programm principal , cio modif copp local non influenz parametr original , inoltr i valor variabil programm principal veng cop parametr procedur . infin passagg parametr valor è util isol ciò fa funzion rest programm . 	1
A2743	Q2664	C2	IT	L31	array non è possibil dat tip div ; caratterist dell' array è propr l' omogen . dichiar si determin tip dat l' array conten . esemp si può prend consider array char ; ogni cell occup memor 1 byte (8 bit ) . si voless prov inser valor tip int (2 byte ) cell dell' array incontr problem : dat tip int non sarebb soltant conten cell si vorrebb immagazzin cell seguent sarebb un' error . 	1
A2305	Q2286	C2	IT	L27	perchã¨ dichiar variabil vien valut defin quantitã memor destin conten i dat variabil si rifer . quantitã memor vien alloc dip tip variabil si dichiar . dichiar si specif tip variabil , mod compil poss verific eventual error semant present all' intern programm sintatt risult corrett (es . moltiplic variabil string variabil inter ) . non vien dichiar variabil compil si accorg dell' anomal error . 	4
A2422	Q2474	C2	IT	L29	cicl whil preved prim si pong condizion (espression boolean racchius parentes tond ) poi si specifichin istruzion parentes graffe.con cicl fintantoc ' condizion e' ver vien esegu l' istruzione.il costrutt do-whil fa segu parol chiav do l' istruzion parentes graff , whil condizione.con costrutt l' istruzion vien esegu almen volt ripet quand condizion divent fals .entramb i cicl port risult permett stesur piu' ordin codic . 	1
A1855	Q2032	C2	IT	L25	registr serv controll non insorg problem cpu durant oper . registr dat contien cop parol lette/d scriv mm ; esso serv pertant forn dat elabor perifer (oper scrittur ) prelev dat mess disposizion perifer (oper lettur ) . registr indirizz contien l' indirizz memor ram dalla/nell qual dat esser prelevato/inser . 	1
A2431	Q2464	C2	IT	L29	variabil semplic cio tip built-in(es int , char ecc ) disposizion spaz memor limit dipendent tip dat (es int dispon 16bit ) , è possibil salv dat .un variabil struttur com l' array permett disposizion più locazion memor (stabil nell' indic ) salv i dat (sempr dat cell memor ) .si utilizz variabil struttur quand si dev valorizz dat avent comun attinent (es nome-cognom person ) , si necess valor è prefer utilizz variabil built-in . 	2
A2599	Q2781	C2	IT	L31	mod principal programm defin tip è mediant dichiar tipo,c consist parol chiav " typedef " segu rappresent costruzion tip (oss specif com esso è costru part tip già esistent ) , dall' identif tip simbol " ; " chiud dichiar . c è possibil defin tip usar parol chiav " typedef " tuttav quest costruzion consent maggior uniform stil definizion tip assoc identif appropr . 	2
A3180	Q3159	C2	IT	L35	zon memor vien cre singol funzion vien dett " record attiv " . quand rich funzion , si cre memor record attiv contenent i relat parametr formal funzion relat variabil local programm . quand programm termin , i record attiv cre precedent veng cancell perc variabil dichiar non serv più si può liber memor . 	0
A2838	Q2799	C2	IT	L32	numer virgol mobil permett rappresent ampi insiem numer all' intern determin numer cifr (appunt è vantagg ) , graz rappresent scientif normalizz l' utilizz sistem binar (dunqu fattor scal è potenz 2 ) , virgol fiss non conced . 	1
A2970	Q3105	C2	IT	L33	siccom dot notation ( . ) precedent (* ) , necessar puntator , si usan dat struttur si avrebb scrittur estrem pesant complic sarebb esemp : (v* ) .prov , , com si not , richied l' utilizz parentes sistem precedent . compil c/c++ aiut inser unic oper sintetizz entramb oper ( . ) (* ) . oper è appunt freccett ( -> ) , qual non richied l' utilizz parentes particolar attenzion . 	0
A2977	Q3082	C2	IT	L33	si,l variabil tip array è puntator , dell' array infatt è puntator indirizz element dell' array . sap è poi possibil acced valor conten singol cell dayt struttur usand oper defernz operzion puntator ; è possibil sap cell dat tip sempr tutt consecut . (esemp ( [i ] coincid * (a+ ) ia[ ] ) n.b. matric divent pò più compless perc puntator è si necess muov entramb direzion (rig colonn ) . 	5
A2892	Q2793	C2	IT	L32	quant l' oper uguagl (== ) relazion variabil poss differ quant variabil float contien numer real virgol mentr variabil doubl identif numer real virgol different float può conten numer più compless lung 	0
A2762	Q2904	C2	IT	L32	è necessar inizializz tip user-defined fuor main.c success dichiar . esemp cas struttur bisogn inizializz " struct " ogni part , singol variabil , poi si dichiar all' intern main.c . 	0
A2555	Q2612	C2	IT	L31	quest istruzion non provoc error . prim element dell' array assegn element compres parentes graff , mentr element non è assegn è valor qualsias era già conten all' intern cell memor alloc element . 	1
A3339	Q3316	C2	IT	L36	funzion ricors è funzion richiam sè stess (ricorsion dirett ) richiam funzion volt richiam (ricorsion indirett ) . 	0
A1935	Q1997	C2	IT	L25	parametr argc signif " argument count " contien numer string inser dall' utent line com , mentr argv signif " argument vector " è parametr contien array string . ogni argoment dell' array è puntator caratt . 	0
A3097	Q3063	C2	IT	L33	codic sens , vantag è non scriv * ogni volt , per si tip dat non si cap dichiar puntator men . sarebb defin p_a . defin tip dat sar puntator intern si può omett * sar sufficent scriv b; equivalent scriv int* b; visualizz conten cell punt b è sufficent porr * davant b tratt com " punt b " . cas punt b (*b ) è tip inter printf ( ) bast usar %i stamp . printf ( " punt b : %i " , *b ) ; 	4
A2280	Q2320	C2	IT	L27	velocitã clock , frequenz , ã¨ numer commutiz riesc comp tr i livell logic " 0 " " 1 " . piã¹ frequenz ã¨ elev piã¹ commut riesc comp , tuttav frequenz dev' esser calcol mod tal ogni circu riesc complet propr oper . frequenz ã¨ tropp elev i circu non riesc complet i calcol cpu non ã¨ piã¹ perform . 	0
A2208	Q2259	C2	IT	L27	fas esecu cpu principal : fas fetc , fas interpret quell esecu . prim fas l’unit controll trasfer l’istruzion registr istruzion (cir ) . second uc decodif l’istruzion cir nell’ultim fas uc gener i segnal controll esegu l’istruzion . 	0
A1939	Q2097	C2	IT	L25	macchin fisic non è l' insiem component elettron necessar funzion calcol , mentr macchin virtual è softw grad simul funzion macchin fisic tram un' interfacc grafic . 	1
A2474	Q2475	C2	IT	L29	programm è sequenz fin istruzion risolv problem oper struttur dat alto livell , memor fisic . i programm , inoltr , ricev valor ingress , produc valor uscit , chiar , non ambigu esegu termin numer fin pass . scritt linguagg programm comprens calcol 	1
A1995	Q2137	C2	IT	L25	linguagg compil part assembler alto livell tram tools (compil ) si pass compil linguagg macchin specif quel calcol quel tip sistem oper qual verr ' poi esegu . different linguagg interpret sta fatt compil non traduc linguagg macchin simul programm ambient virtual . rend possibil esegu programm calcol s.o. different . 	1
A1913	Q2162	C2	IT	L25	i tip primit float doubl rappresent i numer virgol mobil , rappresent l' insiem numer real . different i tip è numer bit riserv memorizz variabil , si riflett rang numer numer cifr dop virgol si poss memorizz ; i float usan 32 bit , rappresent numer 10^ ( -45 ) 10^ ( -38 ) circ ; i doubl (dopp precision ) usan 64 bit , descriv i numer 10^ ( -324 ) 10^ (308 ) circ . 	0
A3295	Q3291	C2	IT	L36	tip struttur fil è sequenz , lunghezz non prefiss , valor tip (byte caratter ) contien : -camp modal utilizz : lettur , scrittur lettur scrittur ; -un camp posizion corrent : punt prossim byte legg scriv fil ; -un camp indic error (per lettur e/o scrittur ) ; -un camp contenent indic end-of-fil (eof ) ; -dichiar variabil punt fil c : fil *pf ; 	4
A3161	Q3186	C2	IT	L35	funzion " void " , gia ' dispon linguagg c , non ritorn alcun tip dat , vien inizializz mod : void nomefunzion ( ) ; esemp utilizz e' funzion " stamp " , implement bas necessita' programm , non svolg oper variabil dat precedent defin , azion ritorn risult . 	0
A2442	Q2560	C2	IT	L29	puntator è variabil memorizz l' indirizz locazion memor , cio l' indirizz variabil . puntator esser dichiar com qualsias altra variabil , quant anch' esso è variabil . esemp : int *p ; dichiar specif variabil tip : puntator inter . l' introdu caratt * davant variabil indic si tratt puntator tip dichiar . 	0
A2189	Q2203	C2	IT	L27	l’oper or c vien scritt com | (pip ) è dett somm logic . quand vien effettu l’or bit , risult varr ver almen bit val ver . l’oper xor (or esclus ) c vien scritt com ^ (elev potenz ) è dett somm modul 2 . quand vien effettu l’xor bit , risult varr ver soltant bit val ver . 	0
A1886	Q1984	C2	IT	L25	l' uc è l' unit controll coordin tutt azion necessar l' esecu più istruzion cpu ; conseguent è coinvolt gestion dell' alu attravers azion dett micro-istru . l' alu è tipolog processor digital grad svolg oper logic aritmet . sintes poss dir l' uc gest l' alu svolg oper . 	2
A2718	Q2641	C2	IT	L31	iniz dic domand è valid funzion , perc procedur non poss restitu null . inizializz array funzion è necessar pass com parametr puntator punt element dell' array . sfrutt puntator poss usar effett l' array semplic cicl for inizializz com sempr , all' intern funzion . funzion dovr restitu puntator main . 	2
A2185	Q2209	C2	IT	L27	moment confront y oppost (not y ) utilizz l' oper logic " and " si cre contraddizion risult sempr fals . avend and second part dell' espression poic risult parzial è sempr 0 , consegu risult final 0 , cio l' espression sar fals ogni circost . 	1
A3017	Q3043	C2	IT	L33	l' oper sizeof ( ) restitu numer tip int , dat restitu e' numer byte occup memor tip variabil inser com argoment funzion sizeof ( ) . 	1
A2551	Q2630	C2	IT	L31	quest cilc permett esegu più porzion codic , piuttost com com scanf ( ) . different principal cicl for whil , mentr cicl for codic vien esegu numer predefin dall' utent (es . for(i=0;i<n ;i++ ) ) cicl whil esegu corp cicl fintant condizion è verific (es . whil (i<n ) ) . do whil , com cicl whil , esegu corp cicl numer non predefin , prim esegu corp cicl poi verif condizion . (es . do { } whil (i<n ) ) . 	2
A3013	Q3044	C2	IT	L33	perc p è array " punt " element dell' array ... second oper aument p posizion facc punt terz posizion 	0
A2376	Q2478	C2	IT	L29	informat termin macchin astratt indic modell teoric hardw softw , grad esegu oper , memorizz risult segu fluss dell' algoritm . attravers l' uso macchin astratt è possibil calcol quantit risors necessar esegu determin oper , dover costru sistem real . più famos esemp macchin astratt è macchin turing . 	3
A1834	Q2132	C2	IT	L25	riloc , all' atto caric process , mett corrispondent " indirizz virtual " , " indirizz fisic " dov present risors necessar process . 	0
A2250	Q2348	C2	IT	L27	pes computazional and b è inferior not ( ( not ) or (not b ) ) . realizz prim richied sol port logic , mentr second 4 . port maggior calcol par 3 ritard port (consider ritard port port and or not ) 1 ritard port and b , maggior consum energ caus maggior numer component utilizz . 	0
A2125	Q2271	C2	IT	L27	codif ca2 serv rappresent i numer negat sistem binar , tal sistem si bit inizial (più sinistr ) numer , segnal negat (1 ) posit (0 ) , consent inoltr sol rappresent 0 richied circu somm sottrazion 	2
A2405	Q2486	C2	IT	L29	break è part costrutt switc qual fa si dop aver trov caso/risult adatt all' espression inser , cicl termin continu controll inutil i cas success . esemp : switc (espression ) { cas val1 : blocc istruzion 1; break ; cas val2 : blocc istruzion 2 ; break ; default : ... } l' espression equival val1 , dop aver esegu blocc istruzion 1 , break termin cicl switc . non foss present , cicl andrebb controll l' espression equival val2 . 	1
A2852	Q2800	C2	IT	L32	convert num base8 b16 si può proced utilizz b2 cm pern passagg cifr sistem ottal (0 ..7 ) espress sistem binar max sar compost 3 cifr (0 ..111 ) ogni cifr b8 andrò riserv 3 post b2 3 b6 ->011 b2 es 3 4 1 b8 011 100 001 b2 341 b8 ->011100001 b2 num b16 sar dat raggrupp 4 a4 part dx cifr num binar esprim valor (tra 0-15 ) corrispondent simbol bas esadec : 1110 b2 ->14 b10 -> b16 1110 0001 b2 1 b16 341 b8 = e1 b16 	1
A3417	Q3421	C2	IT	L36	quest funzion serv : fwrit serv scriv blocc dat binar prelev zon memor indirizz ptr. restitu numer element effett lett è defin intfwrit (void*ptr , dimelement , numelement , fil *fp ) fread serv legg blocc dat maggior byte memorizz zon memor indirizz ptr . restitu numer element effett lett . è defin int fread(void *ptr , dimelement , numelement , fil *fp ) int può camb second vogl esemp float ,int ecc . 	0
A2613	Q2778	C2	IT	L31	array è raccoglitor raggrupp determin numer variabil , indic divers . variabil conten nell' array dev esser tutt tip , esemp dichiar array 20 element tip inter otteng 19 variabil (la ventesim è " \0 " ) tutt tip inter . 	0
A2304	Q2348	C2	IT	L27	prim espression ã¨ piã¹ facil comput perchã© corrispond tavol veritã piã¹ semplic legger different second combin calcol molt piã¹ . 	0
A2507	Q2568	C2	IT	L29	" # defin 20 " è com si dà prim main , precompil , valor "20 " vien fisic sostitu codic dov comp " " . cas si tratt variabil vien sostitu all' occorent , fas ottimizz , ultim fas compil . 	0
A3078	Q3034	C2	IT	L33	attravers l' uso puntator è possibil pass l' indirizz variabil anzic valor stess risparm memor ; infatt pass rifer variabil (ovver l' indirizz ) funzion acced manier più rapid memor può modific i valor interess . è import chiam funzion attravers indirizz non pass valor variabil poic utilizz quest?ultim metod può avven scamb conten are casual memor , provoc dann possibil ?inter sistem non programm . 	0
A2882	Q2825	C2	IT	L32	struttur c sostanzial permett l' aggreg , non necessar ordin omogene , più variabil (anc , , tip divers ) . funzion " typedef " , , vien utilizz defin tip dat . infin l' uso " typedef " può esser combin " struct " ciò permett cre tip dat compless . 	0
A2678	Q2698	C2	IT	L31	quand lavor valor un' unic variabil poss sostitu if ( ) switc ( ) . infatt scriv if (a=3 ) { printf ( " a=3 " ) ; } ; else if (a=4 ) { printf ( " a=4 " ) } ; qiest cas si esegu istruzion specific second valor variabil , avrebb più sens , esemp , ver fals . blocc if è equivalent seguent switc ( ) { cas 3 : printf ( " a=3 " ) ; cas 4 : printf ( " a=4 " ) ; break; } . cas avevam possibil , switc può risult comod quand numer numer cas aument . 	0
A3249	Q3146	C2	IT	L35	variabil global chiam cos perc definizion avvien fuor qualsias funzion (compres main ) l' utilizz tip variabil è comod abbiam bisogn far lavor funzion dat vogl quest non veng cancell funzion (risult simil si pass i dat funz ) i possibil side-effects : consum memor elev (le variabil veng cancell programm ) limit riusabil codic (le funzion funzion presenz variabil global ) 	0
A3225	Q3136	C2	IT	L35	variabil automat c c++ è sinonim variabil local . essa viv punt vien defin blocc " } " . memor vien riserv tram instruzion definizion com <tipo> <nomevariabile> ; dov <tipo> è tip variabil (int char float... ) variabil è sequenz caratter attravers sar possibil acced all' are memor riserv . esemp codic : ...{ int a=0 ; //definizion variabil local automat a++ ; //oper ... } //fin blocc : memor riserv vien dealloc ... 	3
A2259	Q2348	C2	IT	L27	legg de morgan puã ?â² esser facil verific via teoric tram tavol veritã ?â . macchin risolv espression consist problem matemat , vien svolt alcun different . punt vist pratic spess si vorrã ?â predilig espression mot semplicitã ?â (a and b ã ?â¨ piã ?â¹ intuit ) oppur , elettron , bas material si disposizion . 	0
A1894	Q2082	C2	IT	L25	computer bisogn memor non volatil (rom ) perc aver possibil manten sempr salv i programm sistem funzion . mentr ram è stat cret salv process continu camb . stat cre sched memor divers . 	0
A2740	Q2673	C2	IT	L31	associat si intend valut più espression oper bolean , ovver cas different , com esemp valut numer è compres intervall . 	0
A1901	Q2162	C2	IT	L25	variabil tip float contien numer real mentr variabil doubl contien anch' essa numer real " " different variabil doubl numer bit riservatiall rappresent numer maggior quell variabil float . specif fariabil float 32 bit mentr variabil doubl 64 bit . 	1
A3297	Q3387	C2	IT	L36	cas bas rappresent class istanz sufficient piccol (=semplic ) poter esser risolt manier diretta(=sent ricorsion ) . cas indutt ,cio class istanz rimanent , si prest esser risolt mediant seguent proced : si estragg dall' istanz pres consider più istanz problem più piccol quell partenz , poi si suppon risolv dirett istanz (in realt è proced ricors ) infin compong var soluzion mod form soluzion quell partenz . 	0
A2768	Q2813	C2	IT	L32	risult conversion è 365 bas 22 . convert numer inter decimal un' altra bas bisogn divid tal numer bas conserv rest divid bas risult null . i rest otten part dall' propr cifr rappresent nuov bas numer decimal partenz . 	1
A2598	Q2688	C2	IT	L31	puntator e' tip dat , variabil contien l' indirizz memor un' altra variabil . si poss puntator qualsias tip variabil . puntator contrar array struct è variabil , è facil utilizz all' intern linguagg programm . general si può dir i puntator facilit scrittur . 	2
A2398	Q2445	C2	IT	L29	strong typing vin utilizz c++ jav signif variabil dev esser dichiar non poss camb . loos typing vien utilizz linguagg javascript . quest termin veng utilizz critic esalt linguagg , classific bas ala sicurezz . 	0
A3022	Q3091	C2	IT	L33	" assegn puntator variabil " si intend puntator può assum valor variabil si : c=3 *a=&c era giust cas variabil assum valor punt puntator 	0
A2310	Q2228	C2	IT	L27	e' possibil tipic , miglior prestazion pc , vien install memor piccol veloc tip sram dirett cpu (o vicin ) dov veng salv indirizz part ram vien utilizz piu' frequent cos acceler oper .la cach e' tip memor poter esser utilizz frequent , buon accessibil conten poch dat . 	1
A2497	Q2533	C2	IT	L29	if (espression ) { istruzione_1 ; } else{istruzione_2 ; } esegu l' istruzion un' unic volt , volt valut l' espression , quest risult ver . altriment , vien esegu l' istruzione_2 , present . mancanz { } , if innest , part else vien abbin sempr all' ultim if post blocc . whil (espression ) { istruzion ; } rip l' istruzion fintant l' espression non risult fals . 	1
A2286	Q2215	C2	IT	L27	esist var registr cpu , qual : pc , ir , sr , ar , mar , mdr , gpr . funzion è quell ospit inform corrett . 	0
A2771	Q2889	C2	IT	L32	all' intern struttur si poss defin variabil , dett camp , aggreg inform eterogene . tal variabil poss esser qualsias tip (int , char , float array ) . l' access singol camp struttur avvien tram " dot notation " (ad esemp : nomestruttura.campo1 ) . 	1
A2030	Q2082	C2	IT	L25	necess port differenz stat : -il bisogn otten memor qual acced veloc riusc cos implement maggior numer oper cpu nell' unit (volatil ) ; -un memor grad manten inform quand non vien aliment , cio capac salv permanent i dat (non volatil ) . port formazion unit separ , comp div , calcol . 	1
A3202	Q3153	C2	IT	L35	quand si utilizz passagg valor , esemp funzion , vien pass cop dell' argoment , mentr quand si pass valor indirizz vien pass appunt l' indirizz locazion memor dell' argoment . different i metod sta fatt passagg valor fa cop (e utilizz più memor ) variabil ; contrar passagg indirizz occup men memor perc appunt si pass l' indirizz cell punt . 	0
A3315	Q3357	C2	IT	L36	linguagg c preved ogni programm dispong , mod predefin , fluss fil già costitu : standard input , standard output standard error . è predispost lettur norm è colleg tastier ; consent scrittur colleg normal scherm . 	0
A3438	Q2573	C2	IT	L29	ser if-els qual vogl confront singol valor inter div valor costant altern può esser realizz mediant com condizional " più vie" switc . l' enunc switc si può usar circost limit . i valor i qual si può confront selettor dev esser costant tip inter , char enumer : non si può usar switc esemp selettor tip doubl string . quand è lec , non i cas è opportun l' istruzion switc sostitu l' istruzion if-els (esemp rang valor int ) 	0
A2122	Q2271	C2	IT	L27	codif ca2 permett rappresent numer inter negat risult util ambient informat perc calcol non controll segn numer rappresent sap usar l' addizion sottrazion semplic svolg sol oper , ovver l' addizion velocizz tutt . 	0
A3329	Q3291	C2	IT	L36	insiem fil . 	0
A3260	Q3185	C2	IT	L35	funzion 1 pass valor variabil b mentr funzion 2 pass rifer variabil . funzion star attent non modific valor variabil b , quel cas valor main camb . main cas pass variabil pass l' indirizz 	1
A2128	Q2275	C2	IT	L27	categor principal istruzion esegu processor : 1 ) istruzion aritmet (per esemp somme,sottr ,moltipl division ) 2 ) istruzion controll (per esemp condizional chiam sottoprogramm ) 3 ) istruzion trasfer dat (da registr all' registr vers memor vicevers ) esemp istruzion aritmet potrebb esser : esegu l' oper a=b+c 	2
A3222	Q3146	C2	IT	L35	variabil global quell variabil dichiar fuor sottoprogramm , valid visibil tutt progett . l' utilizz variabil global non comport fort risc bisogn star attent non dichiar variabil local ugual quell global , perc potrebb port conflitt . 	1
A3299	Q3308	C2	IT	L36	si ricorsion dirett quand sottoprogramm p chiam , durant esecu , . si ricorsion indirett quand sottoprogramm p chiam , durant esecu , sottoprogramm q volt chiam sottoprogramm r. success r chiam nuov p. 	2
A2508	Q2514	C2	IT	L29	non previst oper inter array ; pertant è necessar realizz programm mediant cicl permett iter tutt i singol element array consider . 	2
A3132	Q3163	C2	IT	L35	test funzion contien contien tip dat funzion ritorn (void , int , float... ) , funzion , parentes i parametr formal ovver i valor utilizz funzion . l' header andrà poi scritt prim main fil .h 	0
A3015	Q3103	C2	IT	L33	utilizz puntator scorr i caratter string si agir conten cell dell' array caratter punt quel moment ; è necessar cop puntator element string altriment scorr , puntator punt are memor success non si potrebb più acced tal are memor . 	0
A2918	Q2903	C2	IT	L32	conversion b10 b16 si verif numer b10 è maggior 16 , cos è si divid 16 prend rest si moltipl 16 otten numer 0 9 lett g,dov a=10,b=11 , c=12,d=13 ,e=14 ,f=15 , g=16.di segu numer inter rimast division si effettu proced non si numer inferiore/ugual 16 si assegn rispett termin : es : (4321 ) b10 = -> 4321/16 = 270 + resto1 . 270/16 = 16 resto . 16/16 = g. (4321 ) b10 = (ge1 ) b16 . verif si not : (g * 16^2 ) + (e*16^1 ) + (1*16^0 ) =4321 	0
A2634	Q2715	C2	IT	L31	si , è possibil var dimension array dop averl defin . ciò è necessar defin array tram variabil puntator . mod è possibil var dimension dell' array durant programm semplic gest puntator assegn all' array . 	1
A3314	Q3295	C2	IT	L36	funzion ricors gest memor manier dinam , più propr " costru " pil dat : ovver funzion , part cas compless , calcol risult parzial parchegg memor risolv problem sar pò più semplic ... cos via cas bas funzion riesc trov soluzion utilizz risolv " soluzion parzial " otten . 	3
A1807	Q2008	C2	IT	L25	succed assegn valor non inter variabil tip inter è compil sar capac legg part real valor conseguent non legger cifr dop virgol . risult somm 3.9 4 sar 7 . 	0
A3148	Q3183	C2	IT	L35	variabil global poss esser usat tutt dur programm , veng alloc fas compil dichiar fuor main (sub dop librer ) . esse vist tutt part programm , cio main var funzion . quest poss caus sprec memor different variabil local veng vist part codic inser delimit oper { } . permett liber memor non farl satur . 	0
A1979	Q1976	C2	IT	L25	frequenz impuls gener clock – dipendent cpu – veloc sistem può esser influenz quantit memor dispon . diminu quantit memor disposizion , infatt , diminu numer dat istruzion potrann esser conten essa conseguent esegu un’un , indipendent impuls gener dall’orolog intern . contribu ridurr veloc sistem . 	2
A1825	Q2038	C2	IT	L25	variabil tip caratt poss atteibu valor non numer , valor rappresent caratter tip asci , identific tip <char> . 	0
A1917	Q2129	C2	IT	L25	trov sol part inter numer assegn variabil . esemp : assegn valor 5.77 variabil tip integer , trov valor 5 assegn suddett variabil , (in parol pov , numer vien semplic tronc (non arrotond ! ! ) ) . 	3
A3081	Q3067	C2	IT	L33	restitu array part funzion può esser dat 4 metod : -returnstring ritorn un' istanz class string librer standard ; -returnarray ritorn puntator array alloc dinam heap(un volt l' array non serv più esser elimin evit sprec memor ) ; -setarray prend l' indirizz array qual andrà scriv i dat (array già predispost evit sprec memor ) ; -returnstruct ritorn conten struttur defin (richied trasfer tutt i caratter ritorn funzion ) 	0
A2662	Q2625	C2	IT	L31	signif semplic distingu lett maiuscol minuscol : int x ; int x ; si può , perc x x variabil distint ! 	0
A2804	Q2899	C2	IT	L32	numer virgol mobil è possibil rappresent ampi insiem valor , maggior virgol fiss parit memor . tuttav i numer virgol fiss utilizz dov serv maggior precision ; perc virgol mobil si riscontr problem arrotond , assorb valor (esemp 10^15 + 1 = 10^15 ) impossibil rappresent . esemp valor 0.1 è imposs i numer virgol mobil manier esatt non arrotond . alcun settor qual finanziar si dev evit più possibil quest error . 	1
A1997	Q2040	C2	IT	L25	asci si intend codic standard usat codif caratter . codic " extended asci " ogni caratt vien riserv byte corrispond , , sequenz 8 bit . 	0
A2007	Q2162	C2	IT	L25	variabil tip doubl variabil tip float poss conten valor appartenent all' insiem numer real . semplic l' utilizz variabil tip doubl permett numer cifr maggior dop virgol (fin 15-16 cifr ) . variabil tip float riserv infatt memor 4 byte mentr tip doubl riserv 8 . 	1
A2197	Q2253	C2	IT	L27	i regisr dr ar comand uc esegu istruzion . ar veng scritt indirizz cell memor oper . volt raggiunt quest cell , si caric dat dr si esegu oper necessar . dr c' è dat lett scriv cell indirizz ar . word 16 bit può conen dat 0 65535 , convert binar . 	1
A2380	Q2474	C2	IT	L29	quand utilizz cilc whil compil può non esegu mai istruzion conten cicl condizion non si verif mai (è sempr fals ) , mentr quand utilizz cicl do - whil compil esegu sempr , almen volt , istruzion conten cicl (finc condizion divent fals ) . esemp : condizion è sempr fals cicl whil istruzion non veng mai esegu , mentr cicl do - whil istruzion veng esegu volt . 	1
A2116	Q2278	C2	IT	L27	-cpu scriv indirizz locazion conten interess registr indirizz -att segnal controll read giung ram -ram ricerc locazion (indirizz indic registr indirizz ) cop conten registr dat access cpu -cpu scriv indirizz locazion interess registr indirizz -inser dat scriv registr dat -att segnal controll writ giung ram -ram prend dat conten registr dat memorizz locazion (indirizz indic registr indirizz ) 	0
A2277	Q2320	C2	IT	L27	veloc clock , frequenz , è numer commutiz riesc comp i livell logic " 0 " " 1 " . più frequenz è elev più commut riesc comp , tuttav frequenz dev' esser calcol mod tal ogni circu riesc complet propr oper . frequenz è tropp elev i circu non riesc complet i calcol cpu non è più perform . 	1
A2296	Q2270	C2	IT	L27	i fattor influenz velocitã processor . consist grandezz word (grupp bit 8-16-32-64 ) processor comun perifer , second consist frequenz , infatt quest rappresent velocitã veng emess word , ovvi capacitã gestion microprocessor aument cresc frequenz gradezz word , conclusion clock (ond quadr ) sincronizz oper cpu 	3
A2247	Q2228	C2	IT	L27	memor central , ram random access memory , e' utilizz memorizz i dat programm util funzion compil . ram puo' esser tip : static (sram ) dinam (dram ) . sram si adatt esser utilizz com memor cach , quant consent memorizz dat richiest frequent ; dram consent conten maggior quant ' dat e' men veloc sram . prestazion pc miglior aument capac ' ram . 	2
A2875	Q2958	C2	IT	L32	different codic asci 7 bit 8 bit consist puo' conten massim 128 unit ' lett maiuscol minuscol , numer (0 127 ) , alcun simbol , codic asci 8 bit contien massim 256 unit ' aggiunt all' elenc precedent lett accent simbol eran 7 bit . 	0
A3286	Q3374	C2	IT	L36	quand apriam fil , far sì fluss dat vogl inser veng scritt ,è necessar chiud tram appos com " fclos ( ) " oppur automat termin programm (fin main exit ) .se programm qualc mot dovess interromp inaspettat fil non verrebb chius fluss dat non è dett verrebb scritt intern conseguent potr perd dat . 	2
A1938	Q1997	C2	IT	L25	parametr argc , dichiar com int (int argc ) , argv , dichiar com array puntator char (char*argv[ ] ) serv pass programm i parametr inser line com (command tail ) moment si richied sistem oper mand esecu programm . 	2
A2791	Q2873	C2	IT	L32	codif virgol mobil è mod rappresent i numer frazionar caratterist è quell riserv part bit rappresent cifr signif (m ) altra part stabil posizion virgol . standard codific numer virgol mobil 32 bit è seguent : bit segn , i success 8 l' esponent " " ca2 , serv spost virgol , i success 23 bit mantiss " m " segn valor inferior 1 . numer verr codific com +-m*2^e . 	1
A2201	Q2223	C2	IT	L27	numer bit costitu indirizz memor influenz quantit memor è possibil alloc poic indirizz memor occup bit memor stess . conseguent influ , diminu , quantit memor effett cell . tuttav è possibil alloc più memor espand ulterior memor . 	0
A2709	Q2733	C2	IT	L31	e' possibil conosc lunghezz , tuttav si present div scenar : (i ) l' array static è inizializz , sar defin numer element , si può otten dimension legg l' inizializz . (ii ) l' array è array char si può conosc lunghezz string scorr cont element caratt null \0 . (ii ) defin array è possibil calcol dimension attravers funzion sizeof (< nomearray> ) semplic elebor valor restitu . funzion restitu spaz byte utilizz memor . 	3
A2496	Q2441	C2	IT	L29	array è più semplic tip dat struttur , consist ser continu cell consecut omogene . quand si dichar , esemp , array a[10 ] , compil identif spaz 10 cell (dall posizion 0 9 ) utilizz dal' utent , mentr numer 10 è riserv sistem inseris codic '\0 ' defin . array poss esser utilizz com " contenitor " moltissim impieg , esemp organiz tutt i vot student , com foss cartell contien tutt i valor poss esser " lett " success . 	2
A2587	Q2670	C2	IT	L31	array n caratter può esser usat memorizz string più cort . cas , cell k-esim (k essend lunghezz string ) concettual vuot : pratic inutilizz conteng valor casual . array tip caratt esser sempr racchius virgolett semplic , esemp : ?a ? . array numer inter real , poss defin array caratteri; esemp : char s[ ]={ ' c ' , 'i ' , 'a ' , 'o ' } dov s è array caratter form 4 element : s[0 ] = 'c ' ; s[1 ] = 'i ' ; s[2 ] = 'a ' ; s[3 ] = 'o ' ; 	0
A2831	Q2914	C2	IT	L32	tip dat astratt (adt ) è tip dat segu modell matemat includ oper defin esso . si differenz tip dat perc un' alloc dinam memor , un' efficient maggior memorizz (veng riserv spaz memor dat effett utilizz ) . 	0
A2982	Q3063	C2	IT	L33	eh non ricord ben 	0
A3195	Q3186	C2	IT	L35	quand si dichiar funzion procedur (ess non ritorn nessun valor ) , tip void (cio vuot ) , poss utilizz esemp quand vogl modific valor alcun variabil implement funzion stamp : void stampa(int x ) { printf ( " x=% d " , x ) ; } ogni cas quand non interess funzion ritorn " qualcos " . 	2
A3067	Q3126	C2	IT	L33	dichiar puntator esmpi int si cre variabil può conten l' indirizz cell memor può conten l' indirizz cell memor può conten variabil tip int. dereferenz sol volt si ottien indirizz , mentr dereferenz si ottien int. 	1
A3182	Q3199	C2	IT	L35	passagg indirizz avvien cop zon memor anness funzion puntator variabil interess . process è util quant si maggior leggerezz programm , riduc i dat cop istanz all' altra . svantagg è per modif dirett variabil gioc , bisogn prest estrem attenzion quand usarl non modific valor dovrebber rest fiss . 	0
A3407	Q3387	C2	IT	L36	cas bas è quand cert problem può esser risolt dirett ricorsion , mentr cas indutt è quand si bisogn ser passagg arriv soluzion problem . risolv metod indutt si divid problem problem più piccol (suppon sap risolv ) poi tram calcol si arriv soluzion problem principal . 	1
A3186	Q3206	C2	IT	L35	comp funzion è restitu valor chiamant , com cas funzion matemat . procedur svolg comp chiamant non restitu valor specif , restitu void . 	1
A3369	Q3341	C2	IT	L36	lettur fil binar avvien tram funzion fread . è possibil esegu l' oper lettur dat modal binar fil non scritt modal binar , dat vien interpret erron si legg sbagl . 	1
A2104	Q2215	C2	IT	L27	registr dat : usat memorizz dat . registr indirizz : acced memor . registr gener : contien dat indirizz . registr floating-point : memorizz numer virgol mobil . registr costant : conteng dat sol lettur . registr special : conteng dat intern cpu , tip program counter , clock , ecc ... registr istruzion : contien l' istruzion corrent . registr indic : camb l' indirizz operand . 	1
A3122	Q2997	C2	IT	L33	sint propost : - l' oper unar * indic si sta dichiar puntator , ovver variabil memorizz indirizz memor corrispondent un' altra variabil ; - puntator indic l' identif variabil tip puntator dichiar ; - tipod indic tipolog dat assoc variabil punt puntator , ovver corrispondent all' indirizz memor puntator fa rifer . 	3
A3099	Q3111	C2	IT	L33	scrittur non equivalent . scrittur *p=x indic puntator (*p ) punt all' indirizz ugual x , mentr x=*p assoc x l' indirizz punt *p . terz scrittur risult esser moltipl : x*=p equival x=x*p . es . *p=x ; x=23 -> l' indirizz punt è 23 ; x=*p ; *p=4 -> l' indirizz punt risult esser 4 ; x=3 ; x*=4 -> x=3*4=12 ; 	0
A2008	Q2163	C2	IT	L25	linguagg c (com qualunqu ) consent realizz programm serv dell' utilizz " keywords " (parol chi ) . i comand " scanf" " printf " non fann rigor part linguagg c , bens librer standard ; usufru quest bisogn includ librer <stdi .h> . 	0
A3187	Q3135	C2	IT	L35	camb conten array utilizz i parametr indirizz tram oper differenz , oper indirizz costruttor puntator . ciò consent ritorn più risult chiamant . avrem funzion procedur . 	0
A2403	Q2418	C2	IT	L29	scrittur programm è essenzial analizz problem progett l ?algoritm funzional poi verr tradott programm computer . è import funzional dat programm super-efficient ritorn risult tropp approssim non serv è import l ?ottimizz , perc programm corrett non funzion non serv . line massim si ottimizz già sed scrittur . è possibil comunqu ottimizz ulterior programm volt è funzion . 	1
A2747	Q2642	C2	IT	L31	array è insiem omogene element colloc memor central mod adiacent , l' indirizz part l' array è inser nell' identif , val dir abbiam int a[10 ] , 'a ' corrispond prim cell dell' array ovver a[0 ] . l' array si comport com puntator , val dir vogl punt element dereferenz 2 cell poss scriv * (a +2 ) . c tant tip array quant i tip c,import è element present essi sian omogene . 	0
A2820	Q2790	C2	IT	L32	convert numer binar decimal si moltipl ciascun cifr numer binar potenz 2 esponent aument 1 proced destr sinistr , quant esso e' relazion posizion cifr numer ; infin si somm i risult otten . es . 0011=(0x8 + 0x4 + 1x2 + 1x1 ) = (2+1 ) =3 . convert numer decimal binar si oper success division 2 numer decimal ; risult e' sequenz 0 1 otten consider nell' ordin , cifr men signif quell piu' signif i rest division . es.14=1101 . 	3
A3301	Q3336	C2	IT	L36	strem è un' astrazion mett disposizion dell' utent c un' interfacc consistent gestion oper input output ugual indipenddent perifer fisic usat . esso puo esser binar (sequenz byte ) test (sequenz caratter ) . 	1
A2016	Q2012	C2	IT	L25	linguagg alto livell si intend linguagg permett livell astrazion tal poter esser compres programm , riconosc intern struttur bas , compil , programm potr convert linguagg comprens calcol . 	2
A2646	Q2658	C2	IT	L31	array può esser inizializz fas dichiar seguent mod (nell' esemp array inter ) : int array[5 ] ={1 ,-4 ,6,5,0 } ; mod ciò consist nell' utilizz cicl for , oppur whil , magar funzion rand ( ) assoc var element costituent l' array numer casual : int i; srand(time(0 ) ) ; for (i=0;i<5 ;i++ ) { array [i ] =rand ( ) ; } 	1
A1953	Q2052	C2	IT	L25	bus sistem bus estension . svolg principal funzion : - funzion bus dat , permett scamb informzaion bidirezional i component - funzion bus indirizz , dov indirizz invi mod unidirezional dic cpu dov svolg funzion richiest - funzion bus controll ,coordin oper sistem mod tal evi conflitt permett comun nuov perifer tram slot . 	0
A2679	Q2658	C2	IT	L31	array può esser inizializz mod : esplicit durant creazion tram costant inizializz dat , oppur durant l' esecu programm tram assegn inser dat all' intern dell' array . 	0
A2639	Q2611	C2	IT	L31	comporr istruzion condizional nidific è men leggibil part dell' oper , struttur vien elabor esegu più veloc . un' istruzion nidific è esemp : if ( ... ) { ... } else if ( ... ) { ... } un' istruzion condizional incolonn è struttur più leggibil (e più semplic scriv ispezion manual ) , più lent nell' esecu . esemp struttur incolonn è : if ( ... ) { ... } if ( ... ) { ... } 	3
A1919	Q2029	C2	IT	L25	top-down è proced preved affront problem part dall' ultim fas : l' obiett (top ) , affront man man i sottoproblem qual può esser scompost (down ) . proced risult fondamental affront soltant problem dirett colleg final , quant l' obiett riman sempr focalizz . com ricett cucin , si part piatt final poi scomporl ingredient necessar non vicevers . 	2
A2445	Q2523	C2	IT	L29	valut pigr è strateg valut ritard valut un' espression fintantoc valor non è richiest evit esegu più volt stess valut , diminu cos esecu . 	1
A3053	Q3071	C2	IT	L33	i puntator fondamental variabil l ?unic different consist fatt essi non conteng valor numer puntator (oss indirizz ) locazion memor dov è memorizz cert valore,in parol puntator contien l' indirizz memor un' altra variabile.tal valor può esser intero,real caratt .invec puntator serv punt puntator punt indirizz . esemp puntator è int* x esemp puntator è int** x c consent esegu oper somm sottrazion 	2
A2653	Q2715	C2	IT	L31	volt defin array , è sempr possibil modific dimension , esser costant inter , maggior zer , racchius all' intern copp parentes quadr , scritt immediat destr dell' identif dell' array . infatt , moment dichiar tal array , var dimension bast semplic modific valor costant racchius parentes quadr ; esemp , array 20 element , array[20 ] , ridurr propr dimension 10 element , trov scritt array[10 ] . 	0
A1983	Q2003	C2	IT	L25	macchin von neumann si intend modell hardw modern calcol cpu,l memor perifer comunic attravers bus sistem . fas elabor istruzion part cpu scand clock cu stabil funzion svolg . macchin lavor manier sequenzial . macchin c è un' astrazion prim permett memorizz esegu programm c attravers l' uso struttur dat algoritm . 	1
A2397	Q2523	C2	IT	L29	durant valut condizion programm (legg sx vers dx ) ritien condizion appen lett risult verific conclud valut consider rest poic riten superflu . es : x=5 ; if (x<10 || x=1 ) { .... } cas prim condizion è ver non occorr analizz second . 	1
A2899	Q2899	C2	IT	L32	codif virgol fiss rappresent numer (ad esemp ) 8 bit 4 bit riserv part inter 4 bit part frazionar . codif virgol mobil rappresent numer (ad esemp ) 32 bit notazion +-m*2^e . bit più signif indic segn (+ - ) , i success 8 codific l' esponent " " complement i restant 23 rappresent mantiss (m ) . sostanz mantiss rappresent tutt cifr numer mentr l' esponent indic posizion virgol . 	3
A2441	Q2561	C2	IT	L29	più semplic dat struttur è l' arrey . esso è raccoglitor tant variabil si distingu indic indic parentes . volt dichiar compil riserv memor spaz sufficient memorizz variabil 	0
A2522	Q2416	C2	IT	L29	fas principal nell' esecu programm " fas fetc " , qual mediant registr " program counter " si individu l' indirizz dell' istruzion vien post bus indirizz attravers bus dat l' istruzion individu vien port registr istruzion ; " fas interpret " qual l' unit controll (uc ) decodif l' istruzion registr istruzion corrent (cir ) ; infin " fas esecu " uc gener sequenz segnal esegu l' istruzion . 	1
A2099	Q2323	C2	IT	L27	gestion perifer sistem ã ?â¨ comp design so ; tal gestion vien effetu tram cosidett interrupt ; interrupt : richiest d' attenzion part perifer cpu ; si " interrompe/freeze/sospes momentan " cosã ?â¬ process esecu , vien " interrog " perifer oper conclus si ritorn all' esecu precedent . 	0
A2306	Q2253	C2	IT	L27	l' acquisizion un' inform e' res possibil funzion registr indirizz (ar ) registr dat (dr ) .il permett all' elabor selezion particol cell memor avval " indirizz " (posizion ) , rend possibil oper lettur scrittur . durant " lettur " conten cell memor e' cop dr (load ) , durant scrittur e' conten dr esser cop cell (stor ) . registr indirizz e' 16bit , , veng indirizz 2^16 cell i indirizz vann 0 2^16-1 . 	2
A2565	Q2611	C2	IT	L31	cas bisogn star attent non veng introdott variabil istruzion potrebber modific signific istruzion condizional , second opzion si preved men dispersion istruzion men possibil error , inoltr si manifest error , ricerc risult più semplic immed . 	1
A2199	Q2295	C2	IT	L27	l` algebr bool è bas oper logic fondamental ! ? not (es not ) op. unar , & ? and (es and b ) op. binar , || or (es or b ) op. binar si applic operand poss assum i valor binar ver fals . contraddizion si intend un' espression è sempr fals esemp and (not ) . tautolog si intend un' espression è sempr ver esemp or (not ) . 	0
A3226	Q3237	C2	IT	L35	definizion funzion si avval nozion : quell test (o header ) quell corp (o body ) . l' header funzion contien : tip risult " codomin " (es . int , float , ecc ... ) , l' identif sottoprogramm (nom " chiam " funzion ) dichiar argoment " domin " (es . int x , int y ... ) . corp funzion è compost : part dichiar local (contien variabil necessar all' esecu ) part programmat (contien istruzion l' esecu funzion , es . cicl for , whil tutt oper ) . 	3
A2510	Q2460	C2	IT	L29	fas svilupp programm c : -la fas editing ,ovver scrittur codic , attravers l' editor vien cre programm memorizz sull' hard disk ; -la fas preprocessing cio fas preelabor codic ; -la fas compil dov compil cre codic oggett memorizz disc ; -la fas colleg si colleg codic oggett librer ; -la fas caric qual vien caric programm memor ; -la fas esecu ,l ' ultim fas cpu prel ciascun istruzion memor esegu 	1
A2469	Q2432	C2	IT	L29	linguagg assembler e' piu' vicin linguagg macchin scop general consent programm ignor form binar linguagg macchin . ogni codic oper linguagg macchin vien sostitu , linguagg assembler , sequenz caratter rappresent form mnemon (simbol ) . 	1
A3135	Q3192	C2	IT	L35	innanzitutt occorr chiar funzione/procedur può restitu valor ; mot non può restitur nemmen array n-dimensional (quind matric ) ; 2 mod pass array funzion : 1 ) pass l' indirizz bas dell' array : procedur agisc dirett sull' array originar (guadagn veloc risparm memor cop l' inter struttur contenent l' array spaz memor riserv funzion com cas success ) 2 ) inglob l' array struttur pass l' inter struttur 	1
A1811	Q1969	C2	IT	L25	com fflush (stdin ) serv cancell ciò c' è all' intern dell' input buffer .vol acquis tastier valor assoc variabil tip inter si dig prim dat numer dop si prem tast invi . valor digit vien inser nell' indirizz variabil mentr nell' input buffer riman valor par tast invio.s vien poi valorizz varibil tip char quest vien assoc invi quant valor valid quel tip variabil . 	4
A2434	Q2476	C2	IT	L29	variabil è valor memorizz " locazion memor " variabil , mentr puntator dic qual qual " locazion memor " è scritt valor variabil . 	0
A3130	Q3129	C2	IT	L35	funzion è ricors quand intern c' è invoc stess . funzion ricors veng impieg quand è necessar comp ser oper tutt ident . 	1
A1940	Q1971	C2	IT	L25	tipic problem può insorg quand si effettu oper variabil tip divers (float int ) . e' necessar anteporr " ( float ) " (senz virgolett ) all' identif variabil tip int desider invoc , specific cos intend tratt com float . inoltr i valor numer inter dev termin .0 (es . 3.0 , 7.0 ) . es : int = 6 ; float f; f= (float ) / 3.0 ; // f val 2 quest oper è dett typecasting . 	0
A3174	Q3177	C2	IT	L35	normal passagg indirizz è più convenient , non seguent cas : -pass array dat : semplic puntator non è grad farl . -gest dat abbast piccol : non convien prend l' indirizz . -modific i dat pass : far ciò è più semplic pass parametr . -struttur disordin : general è più complic oper puntator dat sint men logic . 	2
A1821	Q1976	C2	IT	L25	clock permett alte veloc elabor i dat arriv lent calcol sar lent quant elabor i dat mod veloc quand ricev . sarann veloc fas elabor segu lent fas attes .esemp : paragon fluss dat d' acqua corrent tub strozzatur (ram... ) ; lev strozzatur non otten null poic rimang . velocizz fluss si dev ridurr tutt strozzatur . 	0
A2387	Q2429	C2	IT	L29	different i 2 oper è x++ prim val variabil x poi increment valor , mentr l' oper ++x prim increment variabil poi val . esemp " printf ( " % d " , x++ ) " verr stamp valor " 3 " poi verr increment variabil mentr " printf ( " % d " , ++x ) " verr stamp valor già increment " 4 " . 	0
A2711	Q2637	C2	IT	L31	ambient c si prim tutt pens array dimension e' array monodimensional i element volt array . premess ciò , array multimensional si poss utilizz costru matric grigl . esemp a[2 ] [3 ] defin array bidimensional 2x3 vien organizz com rettangol : a[0 ] [0 ] a[0 ] [1 ] a[0 ] [2 ] a[1 ] [0 ] a[1 ] [1 ] a[1 ] [2 ] vien util ricord c conserv n cell righ comunqu numer 0 n-1 . 	0
A2096	Q2259	C2	IT	L27	processor esegu un' istruzion quest fas - caric prim istruzion contator program counter - fetc : l' unitã controll uc spost l' istruzion registr indirizz ar , prelev dat registr dat dr . poi l' uc spost dat registr d' istruzion corrent cir . - interpret : l' uc decodif l' istruzion registr cir - esecu : l' uc esegu l' istruzion mediant i registr l' alu . - increment pc prossim istruzion 	3
A2499	Q2521	C2	IT	L29	cicl whil rip ser comand finc condizion inizial risult ver . utilizz cicl programm non conosc numer iter total , nè men sap tal cicl sar esegu volt . cicl for rip ser comand numer precis bisogn già conosc tutt quest dat . userem whil preved infin error part utent inser valor rispett determin condizion , mentr userem for programm qualcos precis com array . 	2
A2682	Q2781	C2	IT	L31	dichiar tip consist parol chiav typedef , segu rappresent costruzion tip , dall' identif tip simbol " ; " chiud dichiar . signif tip può esser defin semplic dand tip già esistent . 	0
A3290	Q3374	C2	IT	L36	quand programm termin inaspettat non vien esegu l' oper " fclos " , salv fil i dat present buffer termin l' assoc fluss dat perifer , i dat rimast buffer vann persi; poss comunqu verific effett collateral addirittur perd fil . 	4
A3005	Q3123	C2	IT	L33	i puntator identif serv legg scriv indirizz memor , veng memorizz 'stack ' , memor static gest pil . i puntator veng utilizz richiam cell 'heap' , memor dinam cell non si assegn identif , poss esser punt puntator memor stack . quest gestion memor serv non alloc tropp cell memor variabil array , vann occup inter are memor , poi ven utilizz . 	5
A2366	Q2448	C2	IT	L29	e' tecnic consist defin strateg risolu problem general attravers livell dettagl sempr più precis , scompon problem sottoproblem particolar . procedur programm top-down god seguent vantagg : 1 . nett semplif problem codic graz possibil suddivid più (ognun propr task ) ; 2 . facil manutenzion codic ; 3 . problem è chiar tutt quand part programm . vien usat quand si risolv problem sempr più compless . 	0
A2399	Q2470	C2	IT	L29	signif linguagg riconosc lett minuscol quell maiuscol , cio cas dichiar variabil " letter " " letter " compil c non dar error avrà alloc momor spaz variabil " letter " un' spaz variabil " letter " . 	1
A3345	Q3316	C2	IT	L36	funzion ricors è funzion richiam sè stess (ricorsion dirett ) richiam funzion volt richiam (ricorsion indirett ) . 	1
A2117	Q2233	C2	IT	L27	spaz indirizz è defin numer parol indirizz dip esclus numer bit dell’indirizz non numer parol memor effett dispon : n è numer bit costitu l’indirizz memor spaz indirizz è 2^n . dat tutt i byte dev esser indirizz dimension effett memor è sempr minor ugual spaz indirizz . 	1
A2470	Q2529	C2	IT	L29	different oper increment x++ ++x sta valut valor x prim dop l' increment . val i oper decrement . " x++/x -- " signif " val x poi incrementa/decrement valor " . " ++x/--x " signif " incrementa/decrement x poi valutan valor " . 	1
A3355	Q3378	C2	IT	L36	premess domand non è pertinent all' argoment , access casual si indic caratterist poter acced element arbitrar sequenz costant indipendent dimension sequenz stess . esemp struttur consent l' access random è l' array . concett oppost è access sequenzial , l' access element richied più men second posizion . esemp struttur consent l' access sequenzial list concaten . 	0
A2564	Q2672	C2	IT	L31	quand vien dichiar array compil riserv memor ser cell consecut bas numer element dichiar assegn prim cell , indic 0 , puntator (il dell' array ) . mod tutt l' array verr richiam compil utilizz l' indirizz salv puntator acced prim cell si spost poi quell success second dell' element dovr oper . 	1
A2170	Q2306	C2	IT	L27	long short qualif tip inter condizion spaz alloc compil variabil ; quand vien esegu programm val seguent regol : spaz alloc (short int) < =spazio(int ) < =spazio(long int ) . tipic i long utilizz 32 bit , i short 16 int 16-32 bit . 	0
A2864	Q2920	C2	IT	L32	struttur è particol tip user-defined permett raggrupp variabil eterogene (integer , char , ecc ) . struttur poss conten quant dat si vogl , ovvi evit cad overflow . inoltr è possibil defin struttur struttur . ciò permett organizz defin struttur ordin alcun inform (com poss esser voc agend ) bisogn più voc esser rappresent . var camp struttur si acced tram dot-notation . 	0
A3162	Q3183	C2	IT	L35	variabil global si dichiar fuor funzion compres funzion 'main' , veng vist poss esser richiam tutt . variabil local , , dichiar all' intern funzion : esse nasc quand si acced funzion si distrugg all' uscit . general programm si tend usar poch variabil global quant si può incorr facil error . 	3
A2514	Q2429	C2	IT	L29	different i oper somm sta fatt scriv x++ , valor x vien increment dop l' utilizz variabil x , mentr form prefiss ++x , x vien increment valor x vien denot dop l' increment . mod scrittur printf , vien stamp valor assegn x prim x veng increment . cas ciò vien stamp è valor x dop esso l' increment . 	0
A2378	Q2570	C2	IT	L29	part presuppost scriv whil ( ) compil dar error ,dat whil parentes necess condizion (altr è error ) ; comunqu , parentes mett costant !=0 cicl whil cicl all' infin dat quell condizion è sempr ver , mett parentes whil 0 , uscir immediat cicl dat c 0 equival fals tutt rest ver . cicl whil termin non appen val condizion com fals , esemp int a=5;b=3 ; whil (a=b ) {blocc istruzion } . 	0
A1978	Q2158	C2	IT	L25	defin variabil signif assegn scelt dell' utent locazion memor . esegu quest oper bisogn segu regol : -è obbligator defin tip dat conterr variabil (int,float,c , ... ) ; -po si defin scelt dell' utent (è consigl scegl richiam signific dat vien inser ) . esemp : int altezz ; float lat ; 	2
A3048	Q3013	C2	IT	L33	i puntator innanzitutt variabil conteng memor l' indirizz un' altra variabil poss esser qualsias tip . l' utilizz puntator è l' unic mod esprim alcun oper produc codic più compatt efficac . l' utilizz dell' oper * si ottien conten dell' oggett punt puntator mentr otten l' indirizz memor si utilizz l' oper & 	1
A2853	Q2806	C2	IT	L32	l' algoritm conversion numer binar decimal è descritt sequenz d' istruzion logic costitu quest 6 passagg : 1 ) porr zer variabil cont n=0 n=0 . 2 ) posizion destr numer . 3 ) legg caratt seguent sinistr . 4 ) caratt è vuot , ferm ( cifr fin ) . 5 ) somm n valor 2n moltiplic cifr posizion n increment n 1 . 6 ) torn pass 3 ripet istruzion success . 	0
A1924	Q1999	C2	IT	L25	, perc caratt variabil non può esser numer , esser letter . 	0
A2482	Q2485	C2	IT	L29	line teoric array può occup tutt memor disposizion ram , esser funzional conten numer limit element (non i 100 ) . moment dichiar è indispens indic quant cell sar compost numer costant defin prim main . bisogn ricord tuttav cas array caratter (string ) l' ultim cell dovr esser riserv caratt null '\0 ' indic string ; inoltr cell veng numer indic part 0 non 1 . 	3
A1881	Q2039	C2	IT	L25	visualizz vide string inser %s printf . 	0
A3311	Q3431	C2	IT	L36	ricorsion permett utilizz più efficient memor dunqu richied uso spess minor . infatt ricorsion si utilizz memor memor stack più memor heap è dinam dunqu non alloc mod permanent variabil possibil programm utilizz men cell memor esser dunqu più veloc nell' esecu . 	0
A2602	Q2715	C2	IT	L31	l' array trov spaz memor esecu non compil , spaz dimension anch?ess not durant l' esecu , si può modific l' indic dell' array dichiar inizial .bast sostitu valor d' array parentes quadr . 	1
A2160	Q2332	C2	IT	L27	più process veng svolt parallel singol cpu , esemp process process b , cpu svolg brevissim lass process (non sta svolg process ) poi svolg process b brevissim lass (ovv cpu non sta svolg process ) , poi torn cos via . mod riesc esegu process parallel singol cpu . 	0
A2423	Q2561	C2	IT	L29	si può defin struttur attravers tip struct . mod è possibil incapsul grupp variabil correl , raggrupp quell apparteng logic oggett . programm guadagn leggibil , sfrutt rappresent gerarc dat . e' util quand si gest inform (anc eterogene ) caratterizz per dat . cos è possibil assegn (o pass a/da funzion ) tutt part aggreg unic dat . 	1
A3208	Q3158	C2	IT	L35	c++ , different c , è lec (o più ) funzion , ammess per list parametr formal different , quest sian forn ordin divers (cos fondamental poic permett compil distingu ) . quand ciò succed , com mostr nell' esemp , si verif cosiddett " sovraccaric " (overloading ) funzion . funzion sovraccaric veng utilizz esatt com funzion normal è comp compil decid qual version " nomefunz" utilizz , bas parametr forn . 	1
A2760	Q2887	C2	IT	L32	l' array non si prest rappresent oggett astratt conteng variabil tip divers , struct permett defin variabil struttur aggreg inform eterogene , contrast all' array . 	0
A3244	Q3131	C2	IT	L35	funzion tratt ogni singol element manier separ analizz singolar ! siccom array ser variabil memorizz spaz non conosc , funzion può restitu sol puntator singol cell dell' array ! 	0
A3237	Q3274	C2	IT	L35	termin " macchin dedic " si intend ambient dedic comp determin oper . quest macchin dedic veng realizz quand , esemp , si vuol invoc funzion ; tal funzion vien invoc tram void . 	0
A2694	Q2744	C2	IT	L31	prim " scrittur " è prefer second perc utilizz if-els nidific , opportun utilizz parentes , permett otten " scrittur " più semplic leggibil parit risult . 	1
A3173	Q3243	C2	IT	L35	test colloc funzion .h è tip tipodatoritorn nomefunzion (input ) ; body colloc funzion .cpp è tip tipodatoritorn nomefunzion (input ) { azionedellafunzion } 	0
A1994	Q2137	C2	IT	L25	linguagg compil part assembler alto livell tram tools (compil ) si pass compil linguagg macchin specif quel calcol quel tip sistem oper qual verr ' poi esegu . different linguagg interpret sta fatt compil non traduc linguagg macchin simul programm ambient virtual . rend possibil esegu programm calcol s.o. different . 	0
A3193	Q3199	C2	IT	L35	passagg dat indirizz funzion avvien utilizz l' oper dereferenz (* ) variabil vien pass com puntator ; simbol & chiam funzion main affinc pass l' indirizz * corp funzion modific valor variabil punt . 	0
A2202	Q2241	C2	IT	L27	rappresent più vantagg è quell virgol mobil (floating point ) utilizz notazion esponenzial ; i vantagg riguard possibil rappresent poch cifr numer grand oppur rappresent precision numer piccol . sostanz rappresent virgol mobil estend l’intervall numer rappresent , parit cifr , notazion virgol fiss . 	0
A2293	Q2275	C2	IT	L27	processor è l' unit principal personal computer funzion principal è l' elabor dat dell' inter macchin . 	0
A3158	Q3256	C2	IT	L35	! funzion serv ten codic pul applic programm top-down . si pass più 2 3 parametr anzic ' scriv registr si scriv ram . 	1
A3185	Q3140	C2	IT	L35	i sottoprogramm programm " asserv " programm principal si suddivid funzion , cio restitu valor chiamant , procedur , cio non restitu specif valor (restitu void ) . i vantagg sottoprogramm : astrazion , cio si può far rifer mod sintet oper compless , riusabil , infatt consent scriv sol volt codic usarl più . i sottoprogramm infatt consist righ codic più men compless , volt scritt poss esser riutilizz semplic invoc main . 	4
A3356	Q3324	C2	IT	L36	fil tip test si codif dat tram sequenz caratter , dov general non è garant corrispondent fil scritt lett quell memorizz perifer . fil tip binar , , è form sequenz bytes , i qual corrispond perifer . all' intern non c' è ver propr traduzion dell' inform quant i numer byte lett scritt stess memorizz perifer . è più vantagg gest fil binar tip test perc lettur più rapid . 	2
A2216	Q2234	C2	IT	L27	legg de morgan dimostr utilizz dopp negazion l' oper oppost risult formul non camb . esemp and b = not ( ( not ) or (not b ) ) oppur or b = not ( ( not ) and ( not b ) ) 	0
A2001	Q2008	C2	IT	L25	si assegn valor non inter variabil tip int (variabil tip inter ) , variabil assum valor corrispondent sol part inter numer assegn . cas veng assegn valor 3.9 variabil tip int , essa assum valor 3 , pertant somm numer 4 risult otten sar 7 . 	1
A3350	Q3316	C2	IT	L36	funzion ricors è funzion richiam sè stess (ricorsion dirett ) richiam funzion volt richiam (ricorsion indirett ) . 	0
A2780	Q2899	C2	IT	L32	codif virgol fiss numer vien divis part , part inter part decimal , abbiam 8 bit disposizion , i prim 4 rappresent part inter mentr part decimal . es . (0101.0011 ) bin-> ( 5 .1875 ) dec conversion virgol mobil (floating point ) numer occup 32 bit , suddivis manier specif . bit sinistr (msb ) rappresent segn , atri 8 l' esponent 23 mantiss . codific numer decimal otten numer è dat formul : x=±m*2^e m<1 . 	0
A2761	Q2921	C2	IT	L32	veng esegu oper element tip eterogene (com int float ) , variabil tip inferior esser convert temporan tip superior seguent gerarc : int<long<unsigned<unsigned long<float<double<long doubl cas oper int float variabil int vien convert temporan float . risult dell' oper sar tip superior , cas float . 	1
A2795	Q2817	C2	IT	L32	dichiar tip variabil è requis fondamental quant defin l' insiem valor variabil può assum , oper essa poss esser applic 	0
A2967	Q3105	C2	IT	L33	e' util cas dovessim acced tram puntator element struct . infatt suppon dover acced ipotet camp " * person .altezz " , seguent scrittur compil non sarebb grad cap dereferenz . dett ciò esist tip notazion : " ( *person ) .altezz " oppur quell più utilizz " persona->altezz " .dunqu compil interpret " person " com puntator . 	1
A2254	Q2323	C2	IT	L27	gestion perifer e' caric sistem oper , puo' gest metod : polling interrupt . cas , processor continu verific dat e' arriv perifer mentr , processor vien notific dell' arriv dat ; notif interromp processor stav fac . gestion polling e' semplic , svantagg ten processor sospes cicl attes dat . 	3
A2264	Q2275	C2	IT	L27	istruzion esegu processor poss esser classific categor principal : -> istruzion aritmet : * somm , sottrazion , moltipl , division , shift ecc . -> istruzion controll * incondizion , condizional , salt , chiam sottoprogramm ->istruzion trasfer dat : * registr all' * registr memor vicevers 	0
A2571	Q2667	C2	IT	L31	perc l' indic array part numer 0 n-1 poi l' ultim cell dell' array è riserv caratt string è not " \0 " 	0
A3397	Q3315	C2	IT	L36	f indic funzion oper camp fil , l' output non sar più scherm fil (solit test ) . different : - int fputc (int , file* stream ) apre stream fil , prend ingress char " " scriv fil caratt - int fputs (char* s , file* stream ) apre stream fil , prend ingress puntator char " s " , scriv fil tutt i caratter string quand non trov caratt controll /0 . 	1
A3246	Q3131	C2	IT	L35	funzion è grad restitu valor puntator principal problem relat alloc static memor necessar c . c++ , dat possibil alloc dinam memor , si possibil estrarra array mediant funzion . 	1
A2075	Q2348	C2	IT	L27	l' espression and b è più rapid comput quant esegu cicl macchin : veloc comput dip infatt numer oper calcol esegu , 1 sol and b , not ( ( not ) or (not b ) ) 	1
A3330	Q3378	C2	IT	L36	------------2 modalita' access fil ----------- -- 1 ) random : permett acced costant qualsias part fil indipendent dimension quest' ; 2 ) sequenzial : richiest acced inform fil vien condizion posizion all' intern . n.b. -in fil access casual è possibil legg scriv i dat qualsias ordin . -ne fil sequenzial è sempr necessar part ?iniz fil proced ordin scansion dat conseguent perd . 	1
A1897	Q1961	C2	IT	L25	algoritm è proced risolv determin problem attravers numer precis fin oper , comprens dall' esecutor . propriet : correttezz perc l' algoritm perven soluzion problem salt nessun pass ; efficient perc l' algoritm arriv super ques minor numer oper possibil . ambedu quest propriet dev coesist corrett riusc programm . 	0
A2819	Q2813	C2	IT	L32	convert qualsias numer bas decimal altra bas bisogn divid numer dat bas dobb convert scriv i rest . volt otten i rest si scriv numer bas desider part dall' rest otten . prend esam conversion 1589 bas 22 si divid numer 22 si otteng i rest (5 ,6,3 ) . invert posizion rest , prim cifr corrispond all' rest , si ottien numer bas 22 : (365 ) i n bas 22 . 	1
A2227	Q2201	C2	IT	L27	uc attravers segnal controll spost conten pc registr indirizzi( ) ; tram segnal vien lett dato.il dat vien spost registr dat (dr ) segu all' arriv segnal mfc (memory function completed ) cu spost dat registr istruzion corrent (cir ) .infin uc decodif l' istruzion segu gener sequenz segnal necessar all' esecu dell' istruzion , utilizz registr com quell operand 	1
A3086	Q3072	C2	IT	L33	framment codic stamp vide numer " 15 " . array vien alloc memor ser spaz adiacent l' all' indirizz sequenzial . assegnam " p " l' indirizz 35° element dell' array " q " assegnam l' indirizz 20° , tram sottrazion "p -q " otterrem esatt distanz posizion i element dell' array . 	1
A2312	Q2266	C2	IT	L27	#defin , essend istruzion preprocessor , compil esegu semplic sostitu testual tutt occorrent all' intern compil prim compil , pratic può , minim part , rend po' più veloc l' esecu . const , costant vien elabor sol volt vien alloc spaz conten stack , compil esegu controll valid â costant (short , word , etc ... ) . const vien richiam sorgent indirizz . 	0
A2774	Q2812	C2	IT	L32	perc codif virgol mobil è possibil codific rang più elev valor (molt piccol e/o grand ) andand lavor non numer limit bit part inter part decimal (virgol fiss ) , lavor segn , mantiss (oss cifr signif numer ) esponent , dic qual posizion spost virgol . 	0
A2471	Q2485	C2	IT	L29	int list [20 ] ; list è array 20 element omogene tip ciascun element è int. i 20 element ordin access graz valor indic precis posizion dell' element si desider consider . variabil verr usat com indic indic l' element dell' array esser tip integral;l' indic var 0 valor racchius [ ]-1 . array dimension fiss , infatt dimension dell' array esser costant inter , estrem variabil indic dell' array non poss camb durant l' esecu programm . 	0
A2363	Q2570	C2	IT	L29	linguagg programm c , ogni cicl whil è costitu whil (condizion ) parentes graff istruzion esegu . non inser nessun condizion , whil ( ) , compil dar error sint non potr esegu programm (è errat dir dar cicl infin ) . e' possibil cre cicl infin inser parentes condizion sempr ver oppur qualsias valor purc divers 0 (es . whil (a>a-1 ) oppur whil (1 ) ) . whil (0 ) , , programm consider condizion errat non entrer mai cicl . 	1
A2502	Q2485	C2	IT	L29	numer massim cell array e' indic dall' utent e' defin all' iniz programm , cio ' comport l' impossibil ' modific success . cas array caratter numer element conten e' n+1 . tip struttur compless esser sempr inclus caratt special null . 	0
A2226	Q2201	C2	IT	L27	uc attravers segnal controll spost conten pc registr indirizzi( ) ; tram segnal vien lett dato.il dat vien spost registr dat (dr ) segu all' arriv segnal mfc (memory function completed ) cu spost dat registr istruzion corrent (cir ) .infin uc decodif l' istruzion segu gener sequenz segnal necessar all' esecu dell' istruzion , utilizz registr com quell operand 	0
A2869	Q2873	C2	IT	L32	codif " virgol mobil " tecnic rappresent i numer part frazionar . codif virgol mobil si divid i bit utilizz part : maggior bit riserv rappresent cifr signif numer alcun bit serv stabil dov posizion virgol . standard present numer frazionar virgol mobil 32 bit è seguent : -il bit codif segn -i sucess 8 codific l' esponent ca2 -gli ultim 23 codific mantiss m (senz segn ) . 	1
A2358	Q2476	C2	IT	L29	mentr variabil contien valor , potrebb esser tip char , int , doubl , float etc ... puntator contien l' indirizz variabil contenent determin valor . 	0
A1793	Q1969	C2	IT	L25	quand si inser valor tastier si prem invi , vien salv fil chim " stdin " . esemp si inser prim variabil tip inter (int ) success caratt (char ) , quest' non è possibil inser dat valor caratt vien pres fil " stdin " . prim scriv com " scanf( " % c " , &i ) ; " è necessar svuot buffer stdin com " fflush (stdin ) " . 	0
A2826	Q2814	C2	IT	L32	i tip predefin c veng raggrupp insiem , identific caratterist comun : -integral , raggrupp i tip rappresent memor com inter , rappresent numer discret valor compres nell' insiem numer natural (fann dunqu part grupp i tip predefin int char , i qualif tip : unsigned-signed , short-long ) ; -floating , raggrupp i tip rappresent memor numer real , preved numer grand valor numer , fann part : float (long ) doubl . 	4
A2146	Q2223	C2	IT	L27	memor può esser consider com sequenz fin cell , ognun contenent sequenz bit . spaz fisic memor può esser immagin com ser posizion qual veng assoc bit . valor tipic numer bit poss esser memorizz 8 , 16 , 32 64 . quest variazion numer bit coinvolt non signif aument memor , camb nell' architettur processor 	1
A3085	Q3062	C2	IT	L33	precedent scrittur quand puntator vien dichiar prim rig " int *a ; " non sta punt null . poter esser utilizz puntator punt qualcos . l' error commess consist non aver assegn indirizz memor puntator prim usarl . infatt scrittur : " int *a ; *a=20 ; " gener error (crash programm ) . scrittur corrett è esemp : int *a ; int x ; a=&x ; *a=20 ; 	3
A3190	Q3153	C2	IT	L35	passagg parametr valor cop l' inter valor variabil question , passagg indirizz cop sol l' indirizz quest variabil (ovver l' indirizz cell memor ) , risparm memor calcol . bisogn ricord per si perd l' indirizz variabil non cop non saràpiù possibil recuper , mentr pass valor bast ricord l' identif assegn . 	0
A3306	Q3350	C2	IT	L36	sistem oper (so ) gest struttur dat memorizz i fil attual utilizz programm esecu .quand programm vuol aprir fil (fopen ) , apre stream indic so intenzion aprir fil . so : -cre element vettor fil apert content tutt i dat necessar gestion fil ; -restitu variabil puntator tip fil l' indirizz struttur descriv fil question . i camp conten struttur : modal utilizz , posizion corrent fil , indic error eof 	1
A1981	Q2052	C2	IT	L25	i bus present calcol : bus dat , bus indirizz bus controll . bus dat serv trasfer i dat dall' unit master all' unit slav vicevers ; bus indirizz serv trasmett conten registr indirizz memor central ; infin , bus controll serv trasfer codic inform esegu dall' unit central all' unit slav , inform avven comp dell' oper richiest dall' unit slav all' unit master . 	3
A2867	Q2928	C2	IT	L32	rappresent complement è metod più diffus rappresent numer segn informat . aspett più import è dat fatt i circu addizion sottrazion non dev esamin segn numer rappresent determin qual oper necessar si utilizz circu , sommator , l' addizion sottrazion . inoltr consent un' unic rappresent zer (quand tutt i bit zer ) oper addizion sottrazion sempr avend bit indic segn . 	2
A2251	Q2335	C2	IT	L27	l' unit controll analizz conten registr istruzion corrent decodif istruzion present '' linguagg astratt ' ' '' linguagg macchin ' ' rend possibil l' esecu istruzion . esemp vien individu tip oper i operand : registr general oppur cell memor . cas , sar necessar almen access memor reper l' oper . 	1
A2165	Q2237	C2	IT	L27	serv un' architettur 64 bit memor volatil superior 4096 mb perc 32 bit si arriv 4096 mb , non si riesc andar . 	1
A2500	Q2434	C2	IT	L29	c programm possibil ' usar costrutt struct defin struttur dat divers tip . com struct inser part dichiar , cioe' part prim main . inoltr dat variabil tip struct , l' access camp , avvien mediant " dot notation " , " chiav " acced inform specif eterogene e' compost . 	1
A3362	Q3317	C2	IT	L36	ricorsion è strument concettual present camp part matemat linguagg programm . e' util eleg strument realizz formul algoritm . 	0
A2178	Q2229	C2	IT	L27	ram è dett memor access casual quant permett l' access dirett qualsias indirizz memor brevissim , infatt è utilizz com memor central . è memor tip volatil poic necess aliment elettr manten propr intern inform , esemp spegn computer tutt inform memorizz all' intern essa veng cancell ; mot vien dett memor temporane . 	0
A2529	Q2499	C2	IT	L29	l' algoritm bubbl sort scamb posizion element dell' array adiacent non ordin quand non si trov più element ordin . merg sort l' array (se contien più element ) vien suddivis sub-array lunghezz è met inizial , quest veng ordin mod ricors (cio semplific volt volt ) success si fond (merg ) unic array ordin . bubbl sort l' efficient diminu all' aument quantit dat ordin , contrar merg sort mantien l' efficient costant . 	3
A1804	Q2069	C2	IT	L25	convert numer decimal binar è necessar divid numer decimal divisor 2 , cas calcol dia rest si segn 1 vicevers si segn 0 . 25|1 12|0 06|0 03|1 01|1 destr line vertical è numer binar 25 esser lett bass vers l' alto . 25 (10 ) = 11001 (2 ) (10 ) = valor decimal (2 ) = valor binar 	0
A3109	Q3002	C2	IT	L33	1 ) si può alloc heap , run-tim . 2 ) l' alloc static avvien dat segment , compile-tim . 3 ) mod alloc static variabil : - defin fuor qualsias funzion , main ( ) compres ; - anteporr definizion parol riserv static; 	1
A3040	Q3043	C2	IT	L33	l ?oper sizeof produc numer byte occup ciascun element array array compless . restitu integer 	0
A1965	Q2050	C2	IT	L25	com casting convert tip variabil tip , è necessar usarl quand si vuol comp oper ,us tip variabil dichiar , risult errat approssim . com casting è denot parentes tond ( ) inter è scritt tip variabil convert variabil . esemp casting utilizz division numer inter risult è numer real , convert variabil inter real . 	3
A2453	Q2441	C2	IT	L29	array è tip dat struttur , sort raccoglitor programm includ insiem variabil tip comun . ogni variabil si distingu indic tram qual è possibil l' access ogni element . dichiar tal struttur avvien mediant specif tip dat includ , dell' array numer element , corrispond numer cell memor compil riserv . ricord vien defin array n element ,l ' indic quest andrann 0 n-1 . 	0
A2204	Q2306	C2	IT	L27	dichiar variabil tip int defin l’insiem valor quest può assumere. calcol preved i tip dat abbi dimension memor fortement dipendent dall' hardw ,esist poi qualif permett aument diminu .short utilizz valor compres -32767 32767 ( 2^15 ) mentr long -2147483647 2147483647 ( 2^31 ) .int assum valor max min bas calcol (16bit->2^15 32bit->2^31 ) . short<=int<=long 	0
A2309	Q2328	C2	IT	L27	dat calcol 64 bit memorizz i dat unit ' medesim dimension , esso avra ' access quantit indirizz potenzial memor ram piu' ampi version 32 bit , picc teoric 2^64 indirizz i 2^32 second -corrispondent limit circ 4gb ram sistem . livell softw , ogni architettur necessiter ' propr set drivers rend programm architettur different non sempr retrocompat . 	0
A2581	Q2626	C2	IT	L31	costrutt if possibil ' controll sol condizion costrutt if-els possibil verific condizion . nell' if-els verific condizion postagl si andra ' esegu com normal if , non verific essa si andra ' esegu codic else permett implement if-els nidific esso , mod tal riusc ricopr n condizion . 	0
A2303	Q2201	C2	IT	L27	l' unit ' ã ?â controll (uc ) mand segnal controll affinc ' conten pc spost registr indirizz , memor legg dat post all' indirizz . dat lett vien res dispon registr dat ,dop l' arriv segnal mfc ,la uc mand segnal controll affinc ' conten dr spost registr istruzion corrent ,cir . infin decodif l' istruzion cir gener sequenz segnal controll necessar esegu l' istruzion . registr : contator ,interruzioni,d ,dat ,indirizz . 	2
A2450	Q2459	C2	IT	L29	" stdi .h " , signif " standard input-output header " , è l' header fil librer standard c contien definizion macr , costant dichiar funzion tip usat var oper input/output . 	0
A2854	Q2887	C2	IT	L32	i costr.d tip consent defin tip dat struttur ovver dat costitu dall' aggreg div component .utilizz l' array si defin sequenz cell memor consecut omogene conteng dat uniform (stess tip ) e' possibil acced attravers indic . es.int list [10 ] typedef implic .struct permett aggreg inform eterogene struttur contien tip dat div .si acced ogni singol element dot notation.d sol si dichiar form esplic typedef struct . 	1
A3045	Q3106	C2	IT	L33	dot notation si usa c acced singol camp struttur : si scriv l' identif struttur segu punt dall' identif camp desider . 	1
A3319	Q3373	C2	IT	L36	funzion remov vien utilizz quand si vuol cancell determin fil . nell' implement codic , funzion pass fil (es . int renam ( nome_fil ) ) si vuol cancell . funzion renam serv poter rinomin determin fil . funzion vann pass original fil si vuol modific (es . int renam ( nome_original , nuovo_nom ) ) . entramb funzion restitu 0 oper avveng success , altriment restitu valor divers 0 . 	0
A2654	Q2772	C2	IT	L31	quest form è dett array multidimensional . esemp array bidimensional si può pens com tabell bidimensional element tip . esemp vogl cre matric n x m poss dichiar : int matric [3 ] [6 ] ; quest dichiar ved array 6 element ciascun qual contien volt array 3 element (le 3 righ divis 6 colonn ) acced element " matric " poss scriv : " matric [n ] [ m ] " dov " n " corrispond rig " m " colonn . esemp : matric [2 ] [3 ] =element terz rig ,quart colonn . 	4
A3023	Q3091	C2	IT	L33	assegn si intend puntator può assum valor punt puntator si : c=3 *a=&c 	0
A2526	Q2503	C2	IT	L29	codif virgol mobil vien esegu 32 bit , msb(bit più signif ) rappresent segn numer , i success 8 bit rappresent valor dell' esponent ( part rappresent segn ) , i restanti23 bit rappresent mantiss ) . vantagg utilizz quest decodif è è possibil rappresent insiem numer real più grand virgol fiss . 	2
A3217	Q3238	C2	IT	L35	inanz tutt bisogn dir non è obbligator , infatt poss defin funzion , cosiddett prototip . vantagg farl consist fatt codic divent più leggibil facil interpret dall' uom , permett compil c controll sint chiam funzion . 	0
A2777	Q2914	C2	IT	L32	i tip dat astratt var tip general determin , com interpret insiem bit memor , quant memor riserv variabil funzion tip permett trov " error tip " fas compil . esist 4 tip tip : -semplic (int , float , char ) ; -struttur (array , matric ) ; -predefin linguagg programm usat ; -defin programm attravers azion typedef strcut (per linguagg c ) . 	1
A2582	Q2652	C2	IT	L31	gets legg tutt i valor present rig finc non trov /n (a cap ) /0 (termin rig ) . sicur tutt i dat abbiam inser , veng trasport nell' array . scanf innanzitutt analizz form dat inser , poi cattur ciò riguard form ; non c' è certezz tutt i datiinser , veng immess nell' array . 	1
A2101	Q2203	C2	IT	L27	l' oper logic or restitu 1 almen element è 1 , mentr restitu 0 cas . l' oper xor , restitu 1 numer operand ugual 1 è dispar , mentr restitu 0 tutt cas . 	0
A2593	Q2685	C2	IT	L31	denot n (in cas 10 ) dimension dell' array , numer cell disposizion memorizz string n+1 , 11 . nell' ultim cell è present caratt termin \0 permett tratt string conosc prior dimension indic quand string termin . 	0
A2213	Q2320	C2	IT	L27	si , è poic clock frequenz maggior riesc esegu stess istruzion period minor (rispett clock frequenz minor ) . 	0
A1970	Q2057	C2	IT	L25	clock l' orolog intern sistem , è util scand qualsias oper computer . general sincronizz funzion tutt i disposit dell' oper . e' comunqu sempr clock impon determin frequenz veloc cpu (si misur hertz ) . 	0
A3181	Q3262	C2	IT	L35	passagg matric funzion è sempr necessar specific dimension rig [c ] , [r ] non è davver necessar . pass array mod indic riesc calcol l' indirizz qualsias element array (bast infatt somm all' indirizz multipl dimension tip ) . si può pens array bidimensional com array i element righ ; mot è necessar conosc lunghezz righ [nc ] . 	0
A3120	Q3106	C2	IT	L33	" dot notation " è schem sintatt tipic linguagg c vien utilizz attravers l' uso punt acced conten memor denot cert oggett . 	2
A2649	Q2677	C2	IT	L31	funzion enum serv defin tip variabil poss assum numer fin valor , veng denomin costant . funzion enum vien usat quand si vogl cre quest costant . quest costant veng enunc , programm , esemp , mod : " enum days {sat , sun , mon , , wed , thu , fri } ; " . 	0
A2846	Q2831	C2	IT	L32	è metod più diffus rappresent numer segn informat . enorm diffusion è dat fatt i circu addizion sottrazion non dev esamin segn numer rappresent sistem determin qual oper necessar , permett tecnolog più semplic maggior precision . bit inizial numer pes negat (1 ) posit (0 ) . prend complement aggiung 1 numer binar risult si può cos otten valor assol numer binar negat . 	1
A3142	Q3262	C2	IT	L35	pass semplic vettor (quind compost list element raggrupp un' unic rig ) , calcol bast scorr element quest rig bast sap posizion inizial element ; pass matric (quind element raggrupp più righ ) calcol oper somm offset dopp puntator sap dimension massim righ colonn è compost matric 	0
A2203	Q2223	C2	IT	L27	numer bit costitu indirizz memor influenz quantit memor è possibil alloc poic indirizz memor occup bit memor stess conseguent influ , diminu , quantit memor effett cell . tuttav è possibil alloc più memor espand memor . 	0
A2888	Q2830	C2	IT	L32	siccom second dell' architettur macchin (hardw ) è possibil divers numer bits , giorn d' oggi si utilizz pc architettur 64 bits signif i numer poss " fisic " rappresent compres 0 2*10^64-1 (senz segn ! ! ) , mentr macchin 32 bits i valor var 0 2*10^32-1 (senz segn ) . entramb architettur (64 32 bits ) è possibil stess cos (a discap veloc ) , esemp tram soluzion softw poss rappresent numer più grand 2*10^32-1 architettur 32 bits . 	3
A1872	Q2047	C2	IT	L25	si , computer può 2 più processor oper parallel . l’esecu programm sistem elabor più microprocessor utilizz calcol parallel rend l’esecu programm più rapid , perc vien svolt più element contemporane . pratic , è spess difficil suddivid programm mod divers unit elabor poss svolg ciascun propr part interfer l’altr . 	0
A2386	Q2470	C2	IT	L29	caratterist c è esser " cas sensit " , ciò signif lett maiuscol minuscol import . esemp dichiar variabil com " val " è divers " val " " val " . 	0
A2632	Q2677	C2	IT	L31	" enum " è costruttor tip , variabil dichiar costruttor può assum i valor specific parentes graff . dichiar variabil quest caratterist si usa quest notazion : enum {valore1 , valore2 , ecc } nomevar ; i valor indic all' intern parentes graff rappresent valor tip inter (non rappresent string ) . esemp inizializz enum {lun , mar , mer , gio , ven , sab , dom } giorn ; giorno=m ; stamp valor giorn compil stamp 1 . 	2
A2187	Q2201	C2	IT	L27	l' unit ' controll esegu fas : prel , decodif mand esecu . fas esecu uc gener sequenz segnal controll necessar esegu l’istruzion mediant registr operand . i registr veng chiam caus durant quest fas : b principal . 	0
A2739	Q2614	C2	IT	L31	array static veng inizializz valor fiss ; quell dinam . vantagg array dinam static è è più flessibil . 	0
A3106	Q3018	C2	IT	L33	perc ' cas debb svolg oper assegn incomb nell' error incompatibil ' tip div dat . percu avend inter (int ) puntator inter (int *p ) quand andro ' l' assegn (p=&a ) non incomber ' nell' error incompatibil ' tip div dat . 	0
A2414	Q2486	C2	IT	L29	costrutt switc macchin valut l' espression dop parol switc . valor appartien insiem costant specific mediant clausol cas , macchin esegu sequenz istruzion riport dop l' insiem costant quell ram cas success . evit " fenomen casc " mod istruzion assoc all' insiem valor costant selezion sian esegu , si posizion un' istruzion break , l' effett far salt istruzion success ram cas . 	1
A2606	Q2729	C2	IT	L31	no; array c definizion è insiem più dat omogene insiem dat tip . infatt definizion array linguagg programm [per esemp " int array[n ] " ] si necess primis scriv l' unic tip dat l' array può conten . ovvi è possibil array tutt i tip dat bas non ; quell " cre " programm , i qual volt poss esser non omogene conten dat tip different (ved typedef ) . l' array rest comunqu omogen perc a[0 ] ,a [1 ] , ecc tutt ugual . 	1
A2260	Q2241	C2	IT	L27	sicur rappresent virgol mobil , quant permett scriv numer com " notazion scientif " , riduc quantit memor necessar memorizz . 	0
A2457	Q2563	C2	IT	L29	codif asci si differenz ?unicod fatt ultim 128 caratter (de 256 rappresent 8 bit ) si differenz lingu applic divers , mentr l ?unicod mir includ tutt i caratter unic codif , seppur più bit . standard unicod super l' asci com codif web propr quest maggior capac espress comod codif standard tutt . rest fatt part 8 bit ?unicod (utf-8 ) ripr miglior schem asci . 	0
A3420	Q3317	C2	IT	L36	ricorsion vantagg fondamental : permett scriv poch line codic risolv problem compless . tuttav , essa enorm svantagg poic ricorsion occup stack numer istanz par chiam funzion è necessar effettu risolv problem . pertant , prestazion obiett principal programm non si dispon sufficient memor , è utilizz funzion non ricors . 	3
A3253	Q3139	C2	IT	L35	effett collateral vien fatt rifer quell si manifest inizializz variabil ambient global , ossi estern tutt funzion ; si inizializz " int a; " ambient global , essa può esser usat più funzion ...ma modific , può var signific assum all' intern divers funzion . è l' effett collateral . e' perc sconsigl l' utilizz variabil global . 	1
A3441	Q2372	C2	IT	L27	termin macchin virtual indic softw , attravers process virtualizz , cre ambient virtual emul tipic comport macchin fisic graz all' assegn risors hardw (porzion disc rigid , ram risors process ) alcun applic poss esser esegu com interag tal macchin . fatt si offre contemporan efficient più utent , div ambient oper separ , ciascun attiv effett richiest , sporc sistem fisic real partizion . 	0
A2589	Q2733	C2	IT	L31	sì perc inizializz array static bisogn specific numer element , chiunqu può ricav dimension legg l' inizializz . 	0
A2437	Q2451	C2	IT	L29	costrutt if-els annid , com nell' esemp , l' else si rifer all' if più vicin (in cas if (c2 ) ) , moment non parentes graff modific l' appartenent dell' else if (per esemp if (c1 ) ) . 	2
A2131	Q2347	C2	IT	L27	element principal macchin von neumann : processore=eseg i programm ; memor centrale=memorizz dat istruzion ; memor massa=memorizz grand quantit dat ; perifer i/o=consent interfacc l' estern ; bus sistema=colleg tutt element . 	0
A3396	Q3354	C2	IT	L36	ricorsion è eleg strument concettual , util situazion richied soluzion indutt , ovver quand soluzion può esser ridott risolt problem simil più piccol . c.bas : istanz semplic , risolv mod dirett ricorsion . c.indutt : istanz non risolv dirett attravers cert proced . e' dirett sott.programm chiam durant l' esecu , indirett vien chiam apert precedent . vantagg gestion dinam pil , elabor non sempr utilizz . 	1
A2592	Q2772	C2	IT	L31	poss otten l ?oggett richiest ques utilizz variabil tip array 2 dimension , oppur attravers 1 costruttor tip ?typedef struct ? . cas variabil array 2 dimension 3 x 2 , poss utilizz 2 indic . esemp dichiaram matric int <nome> [3 ] [2 ] . poi poss acced singol element specific rig interess l ?altr colonn . esemp assegn variabil variabil = matric [1 ] [0 ] ; 	1
A2088	Q2235	C2	IT	L27	rom (read only memory ) com esprim è memor si distingu gemell ram fatt è memor permanent , sens different ram , quand vien tolt l' aliment i dat permang essa ; rom risied esemp bios programmi/d serv all' avvi dell' os ; perc è indispens computer . 	0
A2627	Q2673	C2	IT	L31	associat si intend direzion bisogn valut oper (da destr sinistr sinistr destr ) . divent import quand bisogn valut un' espression contenent div oper (+ ,& , ! ,++,etc ... ) . esemp l' oper assegn (= ) è right-assoc cio assegn valor dell' espression destr c' è sinistr (right to left ) . oper left-assoc (left to right ) com oper + ,> , || , valut si effettu part sinistr . 	0
A2022	Q2166	C2	IT	L25	si , esist massim variabil si poss dichiar , si tratt numer grand . var second tip variabil veng utilizz (int,float,char... ) second disponibil memor ram dov quest verrann memorizz . second tip variabil perc sapp ben ogni tip si distingu spaz occup memor . inoltr second quantit dispon memor ram perc è quest memor veng memorizz . 	2
A2716	Q2614	C2	IT	L31	quand si dichiar array static (es : int coef[20 ] ; ) e' già not compil spaz necessar memorizz l' array . definizion dinam (es : char c[len ] ; ) l' array trov spaz memor esecu non compil . vantagg utilizz array dinam è aggiung notevol flessibil ' linguagg . 	1
A1801	Q2039	C2	IT	L25	letter segu % dip tip variabil si assegn : %d variabil inter %f variabil float / doubl %e decimal notazion esponenzial %c variabil tip caratt ( char ) 	0
A2860	Q2886	C2	IT	L32	è util assoc tip defin un' enumer non dover ripet ogni volt l' elenc valor . esemp : typedef enum {lun , mar , mer , gio , ven , sab , dom } giornoimpegn ; giornoimpegn giornoiniz ; giornoimpegn giornofin ; 	0
A2443	Q2571	C2	IT	L29	c vien consider linguagg alto livell , ovver più vicin linguagg uman , più capibil , esso permett programm " bass livell " , esemp usand i puntator poss gest memor piac , più bass livell . oggi c vien utilizz , perc softw cre è snell . 	1
A2027	Q2041	C2	IT	L25	funzion fflush utilizz quand , prim acquis variabil caratt , lett variabil tip . perc buffer scanf rimang memorizz caratter (ad esemp i caratter invi ) non valid variabil numer rimang finc non vien inser variabil char . 	2
A3304	Q3400	C2	IT	L36	sistem oper gest tram tabell fil apert variabil punt fil ; fluss standard , quand vien istanz fil , sistem oper instaur un' assoc fluss fil perifer ; mod quand fil vien chius , si termin l' assoc fluss fil perifer . 	1
A2127	Q2200	C2	IT	L27	i principal oper logic not , and , or . quest si ric segu variant neg and , or (nand or ) . combin piu' element si ric oper exor exnor . oper cit ordin prior ' , ovver not , poi and infin or . esemp : !ab+c e' mod sintet scriv [ (! ) * b ] +c . 	0
A2068	Q2332	C2	IT	L27	gestion process è comp più import processor . quand cpu è chiam esegu più process , sicur soluzion miglior sarebb quell esegu contemporan . cas cpu singl cor non è possibil . cpu ricev i process mod sequenzial esegu . siccom processor esegu un' istruzion dell' ordin grandezz milionesim l' utent avrà l' impression mult tasking . 	2
A2276	Q2372	C2	IT	L27	termin macchin virtual indic softw , attravers process virtualizz , cre ambient virtual emul tipic comport macchin fisic graz riserv risors hardw (porzion hd , ram risors process ) alcun applic poss esser esegu com interag tal macchin . cas dovess andar fuor uso sistem oper macchin virtual sistem oper bas non risent . 	2
A1936	Q2166	C2	IT	L25	numer variabil è possibil dichiar non è limit var bas caratterist tecnic computer si sta impieg fas programm . 	0
A2690	Q2733	C2	IT	L31	l' array è array char (quind string ) è possibil otten dimension string stess attravers cicl whil scorr element string finc non si incontr caratt " \0 " . l' array è form esemp numer inter , calcol dimension dell' array si può usar com sizeof( ) dov è vettor vogl conosc dimension . 	0
A2476	Q2473	C2	IT	L29	quand si usa funzion scanf, variabil string esser indic l ?oper indirizz & , quant , string (ed general array ) denot già indirizz (l ?indirizz element ) . 	1
A2355	Q2427	C2	IT	L29	l' identif main vien defin " int " poic ' puo' restitu codic numer error sistem oper . argc arggv argoment line com . int argc contien numer string inser ?utent line com char *argv[ ] e' l ?array contien string inser ?utent line com (ogn element ?array è puntator caratt ) . 	1
A2730	Q2612	C2	IT	L31	, l' istruzion è corrett verr esegu error . tuttav essa vien dichiar array 3 element , i prim inizializz . mot , mentr a[0 ] sar = 1 a[1 ] = 2 , a[3 ] rimarr valor apparent casual , ovver conten cell memor dedic tal variabil . 	2
A2858	Q2903	C2	IT	L32	conversion si prend numer binar si divid 16 quand possibil . scriv numer esadecimal si prend i risult division i numer 0 9 vann scritt cos com , i risult 10 15 vann scritt lett f, i risult 16 25 vann scritt i numer 10 19, poi si ripet lett numer davant . 	0
A3143	Q3282	C2	IT	L35	si , è possibil . si pass puntator (indirizz ) prim zon memor alloc vettor matric . dopodic variabil puntator si preoccup effettu tutt oper funzion svolg vettor matric . header funzion , i parametr ingress , vien usat sint : tipod vett[ ] . stess matric si fa : tipod mat[ ] [ ] . 	0
A2074	Q2348	C2	IT	L27	l' espression and b e' piu' rapid comput quant esegu cicl macchin : veloc ' comput dip infatt numer oper calcol esegu , 1 sol and b , not ( ( not ) or (not b ) ) . 	0
A2138	Q2241	C2	IT	L27	rappresent piu' vantagg e' quell virgol mobil (floating point ) utilizz notazion esponenzial : i vantagg riguard possibil ' rappresent poch cifr numer grand oppur rappresent precision numer piccol ; sostanz , rappresent virgol mobil estend l' intervall numer rappresent , par ' cifr , notazion virgol fiss . 	0
A3127	Q3253	C2	IT	L35	variabil è dett automat (o dinam ) , cess esist non appen fluss programm esce funzion variabil è defin . variabil è dett static " vit " coincid l' inter dur programm : quand fluss programm torn funzion è defin variabil static , ritrov variabil com l' lasc (cio valor ) . esist , variabil automat , specif aut , è inutil quant default (pu esser usat miglior leggibil programm ) . 	1
A2618	Q2672	C2	IT	L31	quand vien dichiar array compil riserv memor spaz sufficient memorizz n variabil sar compost l' array (nel cas l' array static ) . quest cell sarann consecut prim avrà indic 0 (per acced sar sufficient richiam dell' array fa puntator , esemp : a[0 ] ) mentr l' ultim n-1 . cas l' array dinam compil trov spaz dimension (n ,not ) durant l' esecu . 	3
A2314	Q2355	C2	IT	L27	propriet ' oper boolean : 1 ) propriet ' commut 2 ) propriet ' distribut vers l' . esemp propriet ' commut : or b = b or . esemp propriet ' distribut vers l' : or (b and c ) = (a or b ) and (a or c ) 	2
A2572	Q2619	C2	IT	L31	numer inter è not , è opportun usar cicl for , consist inizializz variabil indic , condizion increment . altriment è consigl l' applic cicl whil . 	1
A3147	Q3186	C2	IT	L35	quand funzion non restitu nessun dat programm principal (main ) , scherm vien stamp funzion non vien memorizz main . 	1
A1969	Q2029	C2	IT	L25	scrittur algoritm proced top-down consist nell' aggiung sotto-algoritm (funzion ) specific un' istruzion dell' algoritm principal cas risult ambigu non abbast precis . mod si realizz algoritm livell superior chiar sintet si appogg algoritm livell inferior esegu mod estes istruzion più dettagl . 	1
A2278	Q2320	C2	IT	L27	velocitã clock , frequenz , ã¨ numer commutiz riesc comp tr i livell logic " 0 " " 1 " . piã¹ frequenz ã¨ elev piã¹ commut riesc comp , tuttav frequenz dev' esser calcol mod tal ogni circu riesc complet propr oper . frequenz ã¨ tropp elev i circu non riesc complet i calcol cpu non ã¨ piã¹ perform . 	0
A2547	Q2733	C2	IT	L31	sì , è possibil conosc lunghezz array attravers funzion " sizeof ( ) " . quest funzion restitu dimension byte occup dall' oggett funzion , gen si utilizz l' esperession " dimensione=sizeof(array ) / sizeof(array[0 ] ) ; " mod otten l' esatt numer " slot " contien l' array . 	0
A2548	Q2733	C2	IT	L31	si , è possibil conosc dimension array attravers funzion 'sizeof ( ) ' . quest funzion restitu dimension byte porzion memor occup dall' oggett funzion , gen si utilizz l' espression dimensione=sizeof(array ) / sizeof(array[0 ] ) ; conosc numer " slot " dell' array . 	0
A2750	Q2918	C2	IT	L32	conversion ottale-decimal è trasform numer bas ( sistem ottal ) numer bas diec ( sistem decimal ) . essend sistem numer posizional convert numer ottal numer decimal è sufficient moltiplic ogni cifr numer (d ) potenz 8 corrispondent (n ) , somm i risult . 	0
A3320	Q3332	C2	IT	L36	innanzitutt ricord algoritm iter ricors punt vist computazional equivalent (cio teor convert ) . si not version ricors (per definizion matemat ) è più eleg compatt , risult men efficient quell iter poic occup stack numer istanz par chiam funzion , utilizz gross quantit spaz memor rallent notevol esecu processor . dunqu prestazion l' obiett principal programm si prefer l' iter . 	3
A3144	Q3262	C2	IT	L35	pass semplic vettor (quind compost list element raggrupp un' unic rig ) , calcol bast scorr element quest rig bast sap posizion inizial element ; pass matric (quind element raggrupp più righ ) calcol oper somm offset dopp puntator sap dimension massim righ colonn è compost matric 	1
A2315	Q2278	C2	IT	L27	cpu legg i dat present ram , attravers bus sistem , manier casual (random access memory ) , veloc regol defin . scriv , inoltr , i dat ram , attravers bus sistem , alloc indirizz defin . 	0
A2619	Q2640	C2	IT	L31	quand si assegn array string , non si utilizz l' oper & , quant , string (ed general array ) denot già indirizz (l' indirizz element ) . caratt & si utilizz , com scanf, assegn indirizz funzion . 	2
A2495	Q2546	C2	IT	L29	i cicl simil different cicl " do-whil " esegu sempr almen volt corp cicl (le istruzion ) . infatt , condizion è fals , cicl " whil " non esegu mai istruzion , cicl " do-whil " esegu volt . inoltr cicl " do-whil " è più util quand numer iter è not . cicl whil : contator = valore_inizial ; whil (contator <= valore_final ) { istruzion contatore++ ; } cicl do-whil : contator = valore_inizial ; do { istruzion contatore++ ; } whil (contator <= valore_final ) ; 	0
A3157	Q3169	C2	IT	L35	i parametr formal quell dichiar tip , numer ordin definizion funzione.in pratic argoment funzion elenc nell' header. parametr attual quell veng pass funzion ?att chiam .all ?att ?invoc funzion infatt , i parametr formal veng inizializz i valor parametr attual .import è coerenz tip numer parametr formal parametr attual , trasfer valor parametr attual parametr formal poss esser effettu conversion implic . 	1
A2379	Q2436	C2	IT	L29	cas vien " gener " qualcos è " dirett " usabil (esegu ) processor ; cas c' è mezz programm (l' interpr ) fa sì codic (tipic test ... cas vm è " linguagg macchin virtual " necess comunqu interpr ) facc effett qualcos . 	0
A2915	Q2885	C2	IT	L32	rappresent : complement l' altra complement . complement consist nell' invert zer vicevers ; complement funzion simil complement l' unic different calcol aggiung . 	0
A2081	Q2210	C2	IT	L27	i component form l' architettur calcol : - cpu (o processor ) -> " esegu " i programm - memor central -> memorizz dat istruzion - memor mass -> memorizz grand quantit dat - perifer (monitor , tast , sched ret ... ) comunic tutt mediant bus sistem . modell hardw è dett " macchin von neumann " 	0
A2684	Q2658	C2	IT	L31	inizializz array signif assegn ciascun element valor . tal oper è effettu moment l' array vien dichiar , esemp tram l' istruzion : '' int array[4 ] = {3 ,9,1,7 } '' . oppur è effettu all' intern programm tram l' ausil cicl com whil for. esemp è : int array [6 ] ; int i; for(i=0 ; i<6 ; i++ ) { array [i ] = rand ( ) % ( max-min+1 ) + min } esemp assegn valor casual , compres valor massim (max ) minim (min ) , ogni element dell' array . 	1
A2876	Q2903	C2	IT	L32	si divid numer 16 si consider risult rest , success si divid risult precedent trov 16 (sempr consider rest ) , si proced cos finc risult divison è zer (con rest ) . infin si consider i rest trov ordin invers : è numer partenz bas esadecimal . es : (35 ) base10-> 35/16= 2 (rest 3 ) , 2/16 = 0 (rest 2 ) , (35 ) base10 -> (23 ) base16 ovver numer cerc sequenz rest contrar . 	0
A2752	Q2918	C2	IT	L32	convert numer ottal decimal , dobb scriv numer dat com somm prodott cifr numer potenz decrescent dell' 8 . 	1
A2136	Q2286	C2	IT	L27	compil riserv memor spaz necessar all' inizializz ciascun variabil . bisogn ten present variabil non vien inizializz , spaz memor assegnatol potrebb conten già valor . 	0
A1937	Q2008	C2	IT	L25	i numer inter , rappresent tip int , quell “senz virgol ” . svolg qualsias oper non verr consider part decimal . assegn valor non inter , esemp 3.9 valor visualizz consol sar soltant part inter (3 ) , mentr stamp mantiss bisogn dichiar variabil tip float . somm 4 numer 3.9 , risult mostr scherm 7,quind part inter , omett i numer dop virgol . 	1
A2284	Q2347	C2	IT	L27	macchin von neumann esegu un' istruzion volta,ed è compost : -memor central : accogl dat programm i qual oper calcol , è compost cell ognun qual contien parol access specific l' indirizz ; -cpu : è l' unit calcol si occup elabor i programm ; -memor mass : è più lent mem . central memorizz manier persistent i dat ; -perifer ; -bus : è via comun scamb dat . 	1
A1973	Q1962	C2	IT	L25	funzion dell' " & " sint funzion " scanf" verr tratt nell' argoment riquard i puntator . signific è comunqu assegn valor inser variabil dichiar altriment compil non cap dov salv dat inser . l' " & " è defin puntator propr mot segnal compil variabil predispost accogl valor dichiar . 	2
A2091	Q2250	C2	IT	L27	l' intr è registr contenent inform relat all’operat perifer funzion è strett leg interrupts c . i codic conteng inform gest interrupts salv memor , posizion fiss relat indirizz bas tram offset memoria.quest offset è conten propr registr interrupt quand perifer invi interrupt , l’intr si aggiorn bas posizion offset corrispondent . 	1
A1934	Q1962	C2	IT	L25	& commercial è necessar quant restitu com scanf l' indirizz dell' oper allocare/assegn valor input . moment non foss & commercial , com esemp : scanf( " % d " , ) ; " " verr vist com oper , ossi com " valor " , scanf non sar grad assegn valor input quand non ved l' indirizz , " & " vien pass com indirizz " " . 	2
A2219	Q2358	C2	IT	L27	modal master/slav si indic particol sistem connession disposit interfacc comun bus sistem . fattispec disposit verr indic com master avrà priorit esecut disposit indic com slav funzion quest' dipend disposit master . 	0
A2078	Q2210	C2	IT	L27	i component form l' architettur calcol : -la cpu (o processor ) -> " esegu " i programm -la memor central -> memorizz dat istruzion -la memor mass -> memorizz grand quantit dat programm -le perifer (monitor , tast , sched ret . . ) comunic tram bus sistem . modell hardw è dett " macchin von neumann . " 	1
A2425	Q2521	C2	IT	L29	cicl whil vien utilizz ripet l' esecu blocc istruzion ogni qual volt condizion risult esser ver . cicl for preved l' inizializz variabil dipend tutt cicl segu condizion dall' increment (sempr variabil ) .vi è poi blocc istruzion dev esser esegu tutt condizion risult esser ver . cicl for è consigl quand è già not numer ripetizion necessar cicl , mentr whil si usa quand ripetizion dipend valor non not . 	0
A3079	Q3024	C2	IT	L33	7 tip oper : 1 ) p=&x ; assegn p l' indirizz x . '& ' indic indirizz . 2 ) * p=x ; '* ' è simbol unar de-referenz (dereferenc ) ; indic conten variabil punt p assegn valor x . 3 ) p=q; assegn puntator p valor puntator q. 4 ) null , valor special rend indefin valor puntator . 5 ) oper confront (== ,< , ... ) 6 ) aritmet puntator somm sottrazion indirizzi.l sottrazion array dà numer element . 7 ) alloc dinam memor . 	4
A2999	Q3044	C2	IT	L33	*p indic cell memor indirizz è conten p. p[3 ] : fa rifer 3 cell dell' array . *p : punt " p " +3 , terz cell dell' array . different sostanzial è risult più semplice-compatt più pratic utilizz . 	1
A2279	Q2320	C2	IT	L27	velocitã clock , frequenz , ã¨ numer commutiz riesc comp tr i livell logic " 0 " " 1 " . piã¹ frequenz ã¨ elev piã¹ commut riesc comp , tuttav frequenz dev' esser calcol mod tal ogni circu riesc complet propr oper . frequenz ã¨ tropp elev i circu non riesc complet i calcol cpu non ã¨ piã¹ perform . 	0
A3348	Q3316	C2	IT	L36	funzion ricors è funzion richiam sè stess (ricorsion dirett ) richiam funzion volt richiam (ricorsion indirett ) . 	0
A1989	Q2038	C2	IT	L25	variabil char poss attribu qualsias caratt defin stand asci . poss dunqu attribu letter maiuscol minuscol . tip char identif caratt necessar 8 bit rappresent . 	1
A3403	Q3408	C2	IT	L36	all' intern tip fil vien struttur camp " end of fil " , assum valor " tru " quand vien raggiunt . 	1
A2868	Q2803	C2	IT	L32	defin tip dat può esser util cas avessim molt variabil defin tip : cos com int inizializz variabil inter , si poss inizializz variabil conteng intern struct . esemp , vogl defin tip dat struct contenent variabil tip inter dovr scriv prim main : typedef struct { int pes ; int altezz ; int eta } identikit; poi main dovrem inizializz : indentikit a; mod , variabil sar tip dat identikit sar gest com struct 3 variabil . 	0
A3336	Q3391	C2	IT	L36	algoritm ricors consist , funzion richiam stess , infatt scop scomporr problem problem più piccol non si arriv soluzion bas , different inter sta propr , non poss farl . 	1
A2512	Q2418	C2	IT	L29	sicur l' ottimizz è import , quant consent utilizz risors miglior mod ; per , caus dell' elev funzional richiest , non è possibil effettu buon ottimizz poic grav funzional ; rispost univoc non esist , poic dip esigent vien cre quel programm . l' ottimizz vien fatt fas dipendent filosof dall' abitudin programm ; personal ottimizz già fas scrittur , spess termin scrittur riesc miglior ulterior programm . 	1
A3140	Q3163	C2	IT	L35	test " header " , e' part definizion funzion , contien inform piu' rilev l' uso corrett funzion . test e' costitu : 1-tip risult (che costitu codomin funzion ) ; 2-dall' identif sottoprogramm ; 3-dall list parametr funzion vien applic relat tip (la list parametr costitu domin funzion ) . esemp test ' : int cas ( int bas , int x ) dov int= tip parametr ritorn ; casa=identif funzion ( int bas , int x ) =parametr formal . 	4
A2881	Q2799	C2	IT	L32	rappresent virgol fiss , non si fa convert binar part inter decimal , poi si unisc i , virgol mobil si usa notazion scientif , ovver si fa conversion numer mantiss esponent . più vantagg è virgol mobil perc utilizz memor . 	0
A3308	Q3431	C2	IT	L36	ricorsion gener massicc occup stack , quant ogni chiam funzion è necessar risolu problem produc risult vien memorizz . ricorsion impegn fortement processor , popol distrugg stack . conseguent , funzion implement ricors , potrebber dar problem termin esecu . 	2
A2473	Q2433	C2	IT	L29	linguagg c vien utilizz perc efficac efficient . livell med astrazion è possibil gest memor manier dirett . rientr linguagg compil (di tip strong typing ) è utilizz svilupp sistem oper modern è inoltr portabil macchin real all' altra . linguagg c è implement c++che offre librer più ampi programm oggett . inoltr è prefer , nell' industr nell' accadem , possibil realizz progett compless . 	1
A2191	Q2203	C2	IT	L27	l’oper or c vien scritt com | (pip ) è dett somm logic . quand vien effettu l’or bit , risult varr ver almen bit val ver . l’oper xor (or esclus ) c vien scritt com ^ (elev potenz ) è dett somm modul 2 . quand vien effettu l’xor bit , risult varr ver soltant bit val ver . 	0
A2368	Q2525	C2	IT	L29	variabil global util quand più funzion utilizz stess dat , svantagg impieg memor tutt dur programm non quand è necessar . l' uso variabil global dov potrebb esser usat local rend funzion men general perc funzion implic conoscent element estern funzion . inoltr usand molt variabil global si risc perd controll ciò può port error dov effett collateral indesider imprev . 	4
A2190	Q2203	C2	IT	L27	l’oper or c vien scritt com | (pip ) è dett somm logic . quand vien effettu l’or bit , risult varr ver almen bit val ver . l’oper xor (or esclus ) c vien scritt com ^ (elev potenz ) è dett somm modul 2 . quand vien effettu l’xor bit , risult varr ver soltant bit val ver . 	1
A3145	Q3262	C2	IT	L35	pass semplic vettor (quind compost list element raggrupp un' unic rig ) , calcol bast scorr element quest rig bast sap posizion inizial element ; pass matric (quind element raggrupp più righ ) calcol oper somm offset dopp puntator sap dimension massim righ colonn è compost matric . 	1
A1808	Q2067	C2	IT	L25	sistem 'legacy' si rifer softw hardw , pur essend dat , continu esser utilizz funzional mancanz altern valid . 	2
A2796	Q2889	C2	IT	L32	struttur vien defin costrutt struct , oppur altern si poss implement costruttor tip typedef struct , è possibil cre insiem variabil correl poss esser tutt i tip prevvist linguagg c tip alfanumer numer , inoltr è possibil aggiung com 'typedef enum' valor particolar parol , miglior leggibil programm . 	0
A3394	Q3408	C2	IT	L36	all' intern tip struttur fil flag eof (end-of-fil ) funzion restitu variabil tru quand si è arriv fond fil . esemp lettura/scrittur caratter string funzion putc ( ) , fputc ( ) , *fputs quand si è raggiunt fil funzion ce segnal restitu variabil eof tru . e' possibil utilizz flag com condizion uscit cicl whil qual scorr fil dall' iniz . 	2
A3039	Q3114	C2	IT	L33	cre struttur controll poss utilizz *sequenz istruzion *cicl : for whil *selezion : if , if-els , do-whil , switc ... teorem bj if-els whil compl , ossi sufficient codific qualsias algoritm . 	3
A2924	Q2873	C2	IT	L32	rappresent virgol mobil utilizz notazion esponenzial codif numer real . esemp standard ieee 754-1985 rappresent 32 bit , ciascun numer real vien rappresent bit segn , 8 bit caratterist 23 bit mantiss . caratterist è numer usat com esponent mentr mantiss è numer compres 0 1 . quest codif è possibil rappresent caratter special com risult oper non ammess com division zer , i valor più infin men infin . 	3
A3332	Q3315	C2	IT	L36	funzion fputs ( ) fputc ( ) differ mod oper : prim scriv line (string char termin newlin ) fil specific com parametr ingress , mentr second scriv com prossim caratt fil caratt specific i parametr ingress . prim ricev input puntator fil string inser , second ricev input caratt puntator fil ; prim restitu 0 l' oper è riusc , valor divers 0 cas contrar , second restitu (com inter ) caratt inserito.l f indic fil . 	0
A1851	Q2041	C2	IT	L25	funzion fflush (stdin ) utilizz dop scanf pul buffer tastier ogni caratt rimast “non vol ” . 	0
A3434	Q2870	C2	IT	L32	calcol è grad rappresent i caratter alfabet , numer i simbol special punteggiatur ogni divers caratt vien assegn , convenzional , codic numer corrispondent programm c lavor sempr i codic numer . inoltr lett maiuscol tutt consecut , ordin alfabet com pur lett minuscol tutt consecut , ordin alfabet (le lett maiuscol veng ?prim ? minuscol ) , cifr numer tutt consecut , ordin 0 9 . confront avvien numer . 	0
A2630	Q2670	C2	IT	L31	array caratter (char ) puo' esser utilizz rappresent string , cioe' succession caratter , com es . " world " ; tip array e' caratterizz dall' esistent vincol consistent fatt l' ultim posizion dell' array conten valor special null ( " \0 " ) . tal valor serv var funzion manipol string cap dov fin string . numer caratter necessar memorizz string n caratter e' n+1 ; es . memorizz string " world " (5 caratter ) si inizializz array 6 caratter (5+null ) . 	1
A3340	Q3316	C2	IT	L36	funzion ricors è funzion richiam sè stess (ricorsion dirett ) richiam funzion volt richiam (ricorsion indirett ) . 	0
A3093	Q3002	C2	IT	L33	1 ) l' heap è zon memor macchin astratt contien variabil cre dinam . 2 ) " stack " è zon ,invec , contien variabil dichiar var funzion variabil local . 3 ) possibil tip alloc , avveng zon precedent menzion : -l' alloc static " stack " : esemp " int a; " -l' alloc dinam nell' " heap " : esemp " a=malloc(sizeof(int ) ) ; " . 	0
A2390	Q2533	C2	IT	L29	if val condizion qual , soddisfatt , svolg comp assegn sol volt mentr whil continu svolg finc condizion assegn non è più ver . esemp assegn condizion i<10 i=5 l' istruzion if svolg comp sol volt (o mai i>10 ) mentr whil continu farl all' infin men valor i non camb assum valor maggior 10 (o com if non svolg nessun comp i>10 già partenz ) . 	0
A3150	Q3282	C2	IT	L35	si , è possibil . si pass puntator (indirizz ) prim zon memor alloc vettor matric . dopodic variabil puntator si preoccup effettu tutt oper funzion svolg vettor matric . header funzion , i parametr ingress , vien usat sint : tipod vett[ ] . stess matric si fa : tipod mat[ ] [ ] . 	1
A2481	Q2445	C2	IT	L29	" strong typing " si intend linguagg programm i tip variabil dev esser dichiar non poss camb , contrar linguagg programm " loos typing " permett camb tip variabil . esemp linguagg loos typing è possibil camb tip risult division integer , qual sarebb anch' esso integer , variabil tip float semplic attravers l' oper " cast float " . quest oper " casting " non sarebb possibil linguagg strongly typed . 	1
A2523	Q2460	C2	IT	L29	fas svilupp programm c : edit,preprocess,compilation ,link ,load ,exec . nell' edit programm vien cre nell' editor salv , preprocess veng inclus fil (es : librer standard ) sostitu simbol special segu particolar dirett ,nell fas compil vien tradott programm linguagg macchina,nel linking si risolu rifer funzion variabil defin altrov (es . librer standard ) , loading si caric memor codic esegu , mentr programm vien esegu fas exec . 	1
A3080	Q3103	C2	IT	L33	quand inizializz esemp struttur attravers l inizializz classic programm attu modif cop struttur dat programm main , è inizializz attravers puntator programm effettu modif all' intern struttur stess . 	0
A3363	Q3290	C2	IT	L36	semplic è mod poter cap numer vien scritt fil . chiar è util cas sian utilizz valor boolena , quant è scomod lettur sequenz valor com 00011101 qual non si cap nient ! 	3
A3402	Q3404	C2	IT	L36	funzion fscanf funzion esatt com scanf, oper fil ; restitu numer camp lett success , cas error , 0 eof . funzion fgets necess , specif string dov deposit rig lett , quantit massim caratter legg canal attravers qual effettu lettur ; funzion legg fil numer caratter specific newlin , vien incontr prim . non si può infatt conosc l ?esatt lunghezz dat conten camp cos si utilizz newlin com delimit . 	0
A1874	Q2058	C2	IT	L25	rispond esemp pratic , scriv c programm : #includ <stdi .h> #includ <stdlib.h> int main(int argc , char *argv[ ] ) { int a; printf ( " valor = %a\n " , ) ; system ( " paus " ) ; return 0 ; } compil esegu . com puo ved valor non è dichiar programm mostr vide conten cell è occup sistem . 	0
A2726	Q2668	C2	IT	L31	error segment luog quand programm tent acced posizion memor qual non è permess accedere,quest può accad spess cas array l' error può verific c . 	0
A2186	Q2253	C2	IT	L27	l' oper lettur effettu cop dat conten cell memor all' intern registr dat . tal cell e' indirizz attravers registr indirizz . l' oper scrittur provoc cop conten registr dat all' intern cell memor , qual e' indirizz registr indirizz . cas registr indirizz 16 bit , e' possibil indirizz 65536 word . l' indirizz minim word risulter ' 0 mentr massim 65535 . 	0
A1908	Q2162	C2	IT	L25	entramb utilizz dichiar variabil numer reali(es . numer virgol ) . l' unic different sta fatt variabil tip doubl può mantiss (cifr destr virgol ) più lung più precis quell variabil dichiar tip float . parol doubl più bit dedic memorizz (64 bit ) contrar float , men (32 bit ) . 	2
A2584	Q2625	C2	IT	L31	linguagg c è " cas sensit " , cio veng distint i caratter maiuscol quell minuscol . conseguent parol caratter minuscol (o rispett maiuscol ) avrann signific different quell caratt maiuscol ( rispett minuscol ) , pur avend medesim lett . 	0
A2371	Q2451	C2	IT	L29	part else è annid struttur if (c1 ) , si rifer struttur if (c2 ) . condizion if (c2 ) non è verific nemmen quell else , esclusion si verific condizion if (c1 ) 	0
A2992	Q3018	C2	IT	L33	rispond esemp : tip doubl si rappresent 8 byte ; defin p com doubl *p , (p puntator doubl ) . l' aritmet puntator , (p+3 ) è l' indirizz element sequenz punt p. , dat ogni real occup byte , valor numer p+3 è valor numer p più 3*8 . valor p camb , , camb tip dat punt (per rappresent int , float , char doubl non occorr stess quantit memor , var tip dat tip dat ) . l' import indic tip dat punt ! 	3
A2871	Q2886	C2	IT	L32	può esser util assoc tip defin enumer non dover ripet l' elenc ogni volt variabil quel tip vien defin . esemp : typedef enum{giall , verd , ross , blu , viol , ros } coloriarcobalen ; coloriarcobalen color ; color = giall ; // stamp valor color ( cas giall ) printf ( " % d ", color ) ; 	1
A3390	Q3357	C2	IT	L36	esist fluss standard si apron automat l' esecu programm : stdin ,stdout stderr . quest fluss assoc fil rappresent vide tastier . funzion ingress uscit utilizz printf scanf. 	0
A2993	Q3072	C2	IT	L33	verr stamp numer 15 , perc è numer puntator tip int a[35 ] a[20 ] . 35-20 = 15 . andassim stamp indirizz p q vedr 60 byte different . dat puntator inter 4 byte , abbiam 60/4 = 15 . 	1
A2214	Q2307	C2	IT	L27	registr interru intr serv indic all' unit elabor verific event estern . 	1
A2622	Q2611	C2	IT	L31	un' istruzion condizional consent esegu divers sequenz istruzion bas valor verit condizion . e' costitu if , segu blocc istruzion cas ver , else , cas fals (che può manc ) . si più istruzion incolonn , si avra ' if segu else , ecc . si istruzion nidific , prim ram else prim istruzion pon un' altra istruzion condizional . 	1
A3294	Q3391	C2	IT	L36	informat vien dett algoritm ricors algoritm espress termin , ovver l' esecu dell' algoritm insiem dat comport semplif suddivision dell' insiem dat l' applic algoritm insiem dat semplific . algoritm iter è tipolog algoritm costitu sequenz azion vien ripet fin . 	3
A2560	Q2698	C2	IT	L31	com switc vien utilizz quand si ristrett rang possibil soluzion . mentr if si verif condizion è ver fals , switc si val condizion funzion risult otten veng esegu determin istruzion . switc inoltr contien com break , inser blocc istruzion . utilizz fa avanz oper success , altriment torn valut cas si è possibil impost switc . cas switc si può inser com default inglob rest 	0
A2725	Q2641	C2	IT	L31	inizializz array tram funzion è necessar realizz funzion gener valor casual , general chiam " random " chiam all' intern cicl for analizz ogni singol cell dell' array . cos fac l' array si riemp valor casual . 	0
A2478	Q2459	C2	IT	L29	signif si poss utilizz all' intern programm funzion dichiar librer standard c stdi .h , sta " standard input-output header ", contien definizion macr (insiem comand ) , costant dichiar funzion tip usat var oper input/output . 	2
A3177	Q3253	C2	IT	L35	variabil " static " (o " automat " ) veng inizializz all' iniz programm blocc programm quand blocc si chiud , esse veng distrutt automat . variabil " dinam " veng inizializz distrutt tram appos istruzion (new , del ) indipendent struttur programm , contrar variabil " static " , dimension può var durant l' esecu programm . zon memor dedic variabil dinam è chiam " heap " l' access è effettu tram puntator . 	1
A2249	Q2284	C2	IT	L27	principal different dram sram ã ? ? ã ?â¨ dram , tip ram immagazzin bit ogni divers condes , conten " rinfresc " period . inoltr , quand cess l' aliment condes perd caric , l' inform vien pers . sram , contrar non necess refresh puã ? ? ã ?â² manten inform teoric infin . inoltr bass temp lettur bass consum . 	0
A2586	Q2616	C2	IT	L31	cert è possibil ! esemp , codic sottost riport com esemp : int x ; x = 0 ; printf ( " x = " ) ; scanf( " % d " , &x ) ; if (x >= 10 ) { } else { printf ( " x < 10 ! \n " ) ; } inser x<10 verr esegu l' istruzion " printf " conten nell' else mentr , inser x>=10 programm entrer nell' if non esegu alcun istruzion perc vuot . cas compil non segnal alcun error , infatt , programm non è errat ; è semplic efficient potrebb esser implement . 	1
A3376	Q3431	C2	IT	L36	ricorsion , sebben port vantagg scrittur codic , prestazion vantagg . essa gener un' enorm quantit dat occup gran part memor . infatt i dat veng richiam funzion occup stack processor vien richiam caus ogni qual volt è modif esso . 	0
A2697	Q2652	C2	IT	L31	nell' acquisizion tastier string è prefer utilizz com " gets ( ) " quant esso permett l' acquisizion string includent spazi(blank spac ) l' caratt indic string è " invi " ( enter key ) . " scanf ( ) " caratt indic string può esser " invi " oppur " spaz ", conseguent non si poss memorizz string contenent blank spac . 	0
A2477	Q2563	C2	IT	L29	asci e' codic standard americ scamb inform può esser standard (7 bit = 128 combin ) oppur estes (8 bit = 256 combin ) . unicod è codif permess rappresent ogni simbol esistent var lingu mond attravers codic 2 byte (16 bit = 65535 combin ) . unicod pres sopravvent ambit web asci perc ' e' possibil utilizz piu' caratter divers codif utilizz fann rifer grand tabell unicod . 	2
A3268	Q3244	C2	IT	L35	passagg rifer conten memor quell variabil non vien semplic cop utilizz funzion , vien propr fatt rifer posizion memor conten memor vien modific , non accad passagg valor dov conten memor quell variabil non vien modific . non avrebb sens pass rifer parametr non si vuol veng modific memor . 	1
A2815	Q2812	C2	IT	L32	mod rappresent valor tip real è normal rappresent decimal , dett virgol fiss . quest rappresent divent dispend , termin capac memor rappresent grafic valor grand piccol . è prefer codif virgol mobil poic permett rappresent poch cifr numer grand oppur rappresent precision numer piccol , attravers mantiss esponent . 	0
A2658	Q2783	C2	IT	L31	int a[17 ] ; int n = sizeof( ) ; essend int 4 byte n sar ugual 68 . 	0
A1963	Q2137	C2	IT	L25	linguagg è compil quand codic vien tradott dirett compil linguagg macchin . cas è compil inser programm compil tutt compless caratterizz struttur intern programm , andand caric dirett memor rend immediat esegu . linguagg è interpret quand è interpr estern compil tradurr codic linguagg macchin moment dell' esecu . 	0
A3126	Q3136	C2	IT	L35	variabil automat è variabil dichiar all' intern funzion (o perlomen dichiar " blocc " racchius parentes graff ) ; pratic vien alloc part memor manier dinam esemp : void main(void ) { int x = 1; printf ( " % d , %d " ,x ) ; } dov x è variabil automat 	0
A2118	Q2271	C2	IT	L27	codif ca2 complement i numer inter serv trov valor decimal numer inter segn part numer binar vicevers . infatt bit più signif (msb ) , ovver più sinistr è 0 numer decimal sar sicur posit , contrar l' msb è 1 numer sar negat . codif ca2 n bit è possibil rappresent i valor -2^ (n-1 ) 2^ (n-1 ) -1 . 	3
A3205	Q3153	C2	IT	L35	quand passagg parametr avvien valor , funzion vien effett pass cop ?argoment . graz meccan valor variabil programm chiamant non vien modific . passagg parametr rifer , funzion vien pass l ?indirizz non valor ?argoment . 	0
A2361	Q2473	C2	IT	L29	string è un' array char . com not un' array è identific l' indirizz cell memor element dell' array . variabil s inizializz array char funzion stregu puntator punt cell memor . si può conferm andand far inizializz compil array char (ex char s[ ]= " prov " poi fac print " printf ( " % d ", s ) " si può not com numer programm restitu non i valor salv string bens l' indirizz prim cell dell' array (& s [0 ] ) . 	2
A2969	Q3067	C2	IT	L33	funzion non può restitu array quant l' invoc provoc l' alloc nuov memor dov sarann cop i parametr pass qual andrà agir .pass array funzion verr cre cop sar poi modific . problem sta ritorn l' array com risult funzion : essa ritorn puntator zon memor dell' array (cop ) non l' array modific si trov nell' are memor sar dealloc termin funzion perd conten . ciò si pass l' array rifer (puntator ) . 	0
A2788	Q2825	C2	IT	L32	i costrutt svolg funzion simil , different : -se dichiar struct potr assegn variabil , dovr dop dichiar struttur . -se dichiar typedef (costruttor tip ) potr dichiar quant variabil vorr segu dichiar tip , non possibil semplic struttur . typedef struct { int nmatricol ; char [20 ] ; } student ; mod si potrann cre array tip : student student [100 ] ; 	1
A3381	Q3421	C2	IT	L36	defin com segu : int fread (void* punt , int dim_element , int n_element , file* pf ) ; int fwrit (void* punt , int dim_element , int n_element , file* pf ) ; fread ( ) legg n_element dim_element byte ciascun &#64257 ;le indic pf . tal element veng cop memor part dall' indirizz punt . risult è numer element lett . fwrit ( ) scriv n_element , dim_element byte ciascun , &#64257 ;le indic pf , prelev memor par punt . funzion restitu numer element scritt . 	1
A2799	Q2813	C2	IT	L32	1589/22=72 rest 5 72/22=3 rest 6 3/22= 0 rest 3 1589 bas 10 quival 365 bas 22 	0
A2880	Q2799	C2	IT	L32	rappresent virgol fiss veng divis prior i bit design rappresent part inter quell part frazionar . rappresent virgol mobil , , bit riserv cifr signif numer (mantiss ) veng deput l' indic dov porr virgol . modal più vantagg è second , moment tal mod può esser ponder spaz part inter part frazionar second esigent , non avend determin prior . 	0
A2198	Q2295	C2	IT	L27	l` algebr bool è bas oper logic fondamental ! ? not (es not ) op. unar , & ? and (es and b ) op. binar , || or (es or b ) op. binar si applic operand poss assum i valor binar ver fals . contraddizion si intend un' espression è sempr fals esemp and (not ) . tautolog si intend un' espression è sempr ver esemp or (not ) . 	0
A2923	Q2899	C2	IT	L32	codif virgol fiss , i bit veng divis manier costant part inter part frazionar mentr codif part mobil i bit veng frazion quell rappresent cifr signif quell volt stabil posizion avrà virgol . 	0
A2732	Q2649	C2	IT	L31	array e' insiem cell omogene consecut , n element dell' array indic indic e' compres nell' intervall 0 n-1 . array c poss esser tip : static dinam . array dinam preved definizion dimension durant l' esecu . array dinam consent linguagg piu' flessibil ' inoltr permett programm deleg gestion memor . 	2
A2265	Q2275	C2	IT	L27	istruzion esegu processor poss esser classific categor principal : â ? -> istruzion aritmet : â ? ¢ somm , sottrazion , moltipl , division , shift ecc . â ? -> istruzion controll â ? ¢ incondizion , condizional , salt , chiam sottoprogramm ->istruzion trasfer dat : â ? ¢ registr allâ ? ? â ? ¢ registr memor vicevers 	0
A3307	Q3434	C2	IT	L36	funzion fopen ( ) si utilizz cas si vuol aprir fil , lettur scrittur : esemp scriv file* fin; fin=fopen(nomefil , " r " ) ; si vuol aprir fil ( " nomefil " indic appunt fil ) sol lettur ( " read " ) ; mentr si vuol aprir fil sol scrittur : fin=fopen(nomefil , " w " ) ; modal support : " r " : lettur test - iniz fil " w " : scrittur test " " : scrittur modal test - fil " rb " : lettur modal binar " wb " : scrittur modal binar " ab " : scrittur modal binar 	0
A2842	Q2830	C2	IT	L32	occorr sap mod vien codific variabil tip int perc , second dell' architettur sistem oper destin , valor massim assegn variabil potrebb camb potrebb esser necessar effettu modif adatt . 	0
A2848	Q2953	C2	IT	L32	variabil tip enumer può assum valor (un volt ) predetermin moment dichiar . particol , quest valor sol etichett , ciascun qual vien automat assoc numer progress part 0 . tip variabil è util quand oper numer fin cas possibil , esemp valor boolean (fals ver ) , giorn settiman , mes dell' anno , ogni cas list fin . 	3
A2156	Q2223	C2	IT	L27	processor , influenz memor dov e' possibil alloc " word " mod numer bit potenz 2 cell memor var 0 2^bit - 1 . esemp : 2^10 = 1024 cell 0 1023 mod aument memor calcol e' camb fisic cioe' estrarl sostitu second esigent utent . 	0
A2588	Q2670	C2	IT	L31	array n caratter può esser usat memorizz string più cort . cas , cell k-esim (k essend lunghezz string ) concettual vuot : pratic inutilizz conteng valor casual . array tip caratt esser sempr racchius virgolett semplic , esemp : ?a ? . array numer inter real , poss defin array caratteri; esemp : char s[ ]={ ' c ' , 'i ' , 'a ' , 'o ' } dov s è array caratter form 4 element : s[0 ] = 'c ' ; s[1 ] = 'i ' ; s[2 ] = 'a ' ; s[3 ] = 'o ' ; 	0
A2162	Q2332	C2	IT	L27	più process veng svolt parallel singol cpu , esemp process process b , cpu svolg brevissim lass process (non sta svolg process ) poi svolg process b brevissim lass (ovv cpu non sta svolg process ) , poi torn cos via . mod riesc esegu process parallel singol cpu . 	0
A2968	Q3044	C2	IT	L33	quest scrittur è possibil poic c , relazion puntator vettor è cosi' strett consent traduzion simultane . ovver , p[3 ] defin vettor p ampiezz 3 , mentr * (p+3 ) punt 3° element valor punt p. 	0
A2012	Q1961	C2	IT	L25	algoritm è sequenz precis oper , comprens esecutor defin sequenz fin pass port realizz comp , (in informat esser scritt linguagg programm comprens calcol codif è dett programm ) . propriet : correttezz : l' algoritm esser corrett port soluzion problem ; efficient : l' algoritm ottien risolu problem usand risors minim . 	3
A2566	Q2629	C2	IT	L31	matric è sottocas array ; array è vettor può più dimension ; array 2 dimension corrispond propr matric . 	0
A2608	Q2625	C2	IT	L31	si dic cas sensit ogni oper analis test distingu parol ugual bas all' uso lett maiuscol minuscol . linguagg c riesc identific divers lett maiuscol minuscol . risult import , esemp , cas password , res sensibil affinc più difficil risal tentat 	1
A2433	Q2476	C2	IT	L29	variabil è valor memorizz " locazion memor " variabil , mentr puntator dic qual qual " locazion memor " è scritt valor variabil . 	0
A3051	Q3039	C2	IT	L33	aliasing si intend problem leg fatt oggett veng identific mod div . esemp : *pi= 1 *qi= 2 pi=q cas *pi=2 assegn valor *qi= 7 succed automat valor veng assegn *pi comport assegn esplic variabil punt qi determin assegn nascost variabil punt pi . 	4
A1863	Q2137	C2	IT	L25	i linguagg compil linguagg com c c++ dov esegu programm esser prim compil . caric programm calcol ricompilarlo. linguagg interpret , com jav , non pass attravers compilatore,m funzion macchin virtual esegu dirett codic . essi funzion ogni macchin dirett . svantagg , i linguagg interpret per veloc esecu inferior compil . 	1
A2268	Q2229	C2	IT	L27	memor ram (random access memory ) e' dett memor access casual perc ' nell' istant processor estrarr dat essa , si bas indirizz cell memor acced inform memorizz , non acced dunqu manier sequenzial . e' mot access e' ridott . e' inoltr dett memor volatil perc ' l' interru corrent elettr (spegn pc guast ) tutt i dat conten essa veng pers . 	2
A2879	Q2792	C2	IT	L32	conversion binar ottal si può semplic passagg convert binar decimal poi decimal binar . metod non vist lezion più pratic è seguent . bas tabell conversion 0 000 1 001 2 010 3 011 4 100 5 101 6 110 7 111 conversion si fa semplic isol 3 3 i numer binar , convert tram tabell poi rimett tutt insiem . esemp 10101011.1111-> (10 ) ( 101 ) ( 011 ) . (111 ) ( 11 ) -> (010 ) ( 101 ) ( 011 ) . (111 ) ( 110 ) -> ( 2 ) ( 5 ) ( 3 ) . (7 ) ( 6 ) ->253.76 	1
A2865	Q2904	C2	IT	L32	possibil proced defin tip dat user defin può esser definizion mediant l' oper " typedef " struttur " struct " defin programm assegn tip dat scelt programm qual all' intern programm serv defin variabil tip " struct " . 	0
A2412	Q2533	C2	IT	L29	entramb costrutt controll fluss programm , utilizz esegu sottoprogramm verific determin condizion . costrutt " if " preved l' esecu sottoprogramm esso assoc sol volt mett disposizion " second scelt " , ovver sottoprogramm esegu cas condizion dell' " if " non veng rispett . costrutt " whil " , , implement cicl consent esegu sottoprogramm assoc piu' segu , quand condizion ingress cicl vien rispett . 	2
A2135	Q2241	C2	IT	L27	e' sicur più vantagg rappresent virgol mobil qual permett esprim numer grand poch cifr precision numer piccol . rappresent virgol mobil si utilizz notazion esponenzial 32 bit dov 1 bit indic segn , 8 bit l' esponent , dett caratterist , indic posizion virgol infin 23 bit mantiss rappresent cifr più rappresent numer . 	2
A2862	Q2803	C2	IT	L32	funzion permett gener tip dat avval quell standard com (int , char , float ) è chiam " typedef " . quest funzion consent programm defin piac i nom propr dat com esemp i tip dat built-in quell struttural . semplic esemp tip dat potrebb esser : typedef int numer ; numer var; 	0
A2577	Q2655	C2	IT	L31	funzion gets è utlizzz legg strig tip char contenet caratter . è usat poi funzion gets legg tutt i caratter caratt " \0 " conten string , altriment scanf interromp lettur string quand inser esemp "a -cap " . convien utilizz com gets string tip char funzion scanf string numer . 	0
A2896	Q2873	C2	IT	L32	codif virgol mobil è mod rappresent mod opportun i numer frazionar (con virgol appunt ) . pratic , bit necessar rappresent tal numer , grand part vien dedic cifr signif (mantiss ) , bit post all' iniz determin numer è posit negat (segn ) , piccol ser bit stabil posizion virgol numer (esponent ) . 2 metod risolu : - l' esponent determin spost virgol - l' esponent esser elev numer 2 tutt moltiplic mantiss . 	0
A2440	Q2418	C2	IT	L29	non so cap domand , rispond ciò compres . si ottimizz già sed scrittur inizial , è possibil , risparm . si accorg , dop aver scritt programm , esist altern più ottimal , si , si proced l' ottimizz . chiar funzional è import , tuttav , com tutt cos , ciò si vuol men cost men risors , è . 	0
A2573	Q2640	C2	IT	L31	l' oper scanf string non richied l' utilizz caratt '& ' , poic string puntator . cas caratt '& ' serv indirizz variabil . 	4
A2561	Q2765	C2	IT	L31	, non è possibil modific grandezz un' array , sebben esist array dinam lunghezz dell' array è defin un' espression variabil , consent bypass problem inizial non conosc grandezz l' array 	1
A2769	Q2792	C2	IT	L32	convert numer form binar ottal occorr : 1 . prend numer binar suddivid , part dall' lsb , grupp 3 cifr 2 . far corrispond ogni grupp 3 cifr binar l' equivalent valor form decimal 3 . comporr numer ottal affianc cifr otten convert ogni grupp bit , rispett l' ordin numer binar esemp : (110101001 ) bin => (110 ) bin (101 ) bin (001 ) bin (6 ) dec (5 ) dec (1 ) dec => (651 ) tt 	1
A3358	Q3400	C2	IT	L36	quand vien istanz fil (fil *f ; ) sistem oper cre " stream " , fluss , assoc fil . fluss permett appunt legg scriv fil . i fluss utilizz comunic perifer com l' output vide tastier . quand chiud fil sistem oper " dissoc " stream fil . fil vien chius manier automat quand programm termin l' esecu . durant chiusur i dat veng scritt fil . programm si arrest inaspettat è possibil alcun dat vad pers . 	2
A3322	Q3434	C2	IT	L36	fil vien apert funzion fopen , restitu stream i/o alleg fil specific poss esser fatt lettur scrittur . funzion fopen contien fil modal (es : file* fp ; fp = fopen(nomefil ,modal ) ; ) . modal previst : " r " (lettur modal test ) , " w " (scrittur modal test ) , " rb" (lettur modal binar ) " wb " (scrittur modal binar ) , stream è posizion iniz fil , oppur " " (scrittur modal test ) " ab " (scrittur modal binar ) , stream è posizion fil . 	4
A2549	Q2667	C2	IT	L31	perc c array è essenzial puntator cell memor , element conten array è salv memor esatt punt [0 ] . 	2
A2708	Q2783	C2	IT	L31	funzion sizeof ( ) serv conosc lunghezz un' array static , è possibil ricav dimension un' array multidimensional (conosc com matric ; esemp : matt [ ] [ ] ) indic funzion rig specif . esemp : righ = sizeof(matt [ ] ) / sizeof(matt[ ] [0 ] ) ; 	3
A3334	Q3421	C2	IT	L36	funzion fread ( ) fwrit ( ) funzion veng utilizz lettur scrittur fil bianr . entramb funzion è necessar pass puntator fil ( " fil *fp " ) , tip dat scriv (es int , struttur , dimelement ) puntator all' element si vuol memorizz fil (void *ptr ) . abbiam pur possibil scriv più dat , pass funzion valor ( " numelement " ) . quinid conclud : - fwrit (void *ptr,dimelement ,numelement , fil *fp ) ; - fread(void *ptr,dimelement ,numelement , fil *fp ) ; 	0
A2365	Q2460	C2	IT	L29	fas svilupp programm c : edit , preprocess , compilation , link , load exec . fas " edit " programm vien cre nell' editor memorizz disc ; fas " preprocess " programm preprocessor elabor codic , conseguent fas " compilation " compil cre codic oggett memorizz disc ; fas " link " vien colleg codic oggett librer , success " load " programm vien caric memor , infin , fas " exec " cpu prend ogni istruzion esegu . 	1
A2834	Q2816	C2	IT	L32	i calcol non poss numer grand tendent infi , perc grandezz predefin (massim ) . valor massim inter calcol è : segn &#8722 ;2.147.483.648 +2.147.483.647 segn : 0 +4.294.967.295 quest inform si poss trov librer stdlib.h 	0
A2032	Q2132	C2	IT	L25	riloc dip mem central sist oper .generalizzando,il pc legg valor variabil attravers bus sistem assegn spaz virtual mem central .quest spaz nn è numer binar corrispond valor variabil memor può var bas tip incogn (ex : int ,char,float.. ) .riloc ,consist spost blocc dat memor contenent esemp variabil bus sistem . 	0
A2381	Q2429	C2	IT	L29	oper increment x++ ++x,svolg stess funzion ,increment x un' unit . è different scrittur : x++ è defin post increment , cio , compil esegu prim l' istruzion dov è present variabil dop increment . scrittur ++x si defin pre increment , cio , compil prim increment variabil poi esegu l' istruzion contien . assum x=3,esegu printf ( " % d " , x++ ) visualizz valor 3(dop quest' istruzion x=4 ) . quand esegu printf ( " % d " , ++x ) visualizz valor 4(variabil pre increment ) . 	2
A2702	Q2688	C2	IT	L31	i puntator caratterist import linguagg c , moment permett lavor bass livell , particol quant riguard l' alloc memor gestion indirizz . particol , essi fondamental cas utilizz funzion , poic permett passagg parametr indirizz valor , consent cos modif variabil mediant invoc funzion . propr fatt , tuttav , essi poss gener effett collateral qual modif involontar variabil . 	2
A3245	Q3131	C2	IT	L35	funzion tratt ogni singol element manier separ analizz singolar ! siccom array ser variabil memorizz spaz non conosc , funzion può restitu sol puntator singol cell dell' array ! 	1
A3284	Q3336	C2	IT	L36	stream è fluss dat , dir un' astrazion livell linguagg programm . può esser tip stream : -di tip binar (sequenz pur byte veng memorizz perifer esatt com scritt ) ; -di tip test (è sequenz caratter , stavolt non è garant sequenz i caratter scritt quell memorizz perifer ) . 	2
A2171	Q2203	C2	IT	L27	l' oper logic " or " restitu 1 almen operand è 1 , mentr restitu 0 tutt operand 0 . l' oper logic " xor " restitu 1 operand ugual 1 dispar , mentr restitu 0 tutt cas . 	1
A2209	Q2237	C2	IT	L27	un' architettur 32 bit permett numer indirizz memor par 2 32 , ovver 4gb . so può usar massim circ 3gb memor ram perc restant vien utilizz memor qual registr ram gpu . un' architettur 64 bit permett numer indirizz memor par 2 64 , numer assa maggior precedent permett l' utilizz memor volatil superior 4gb . 	1
A3414	Q3286	C2	IT	L36	l ' access modal binar port vantagg confront modal test quant fil binar : pros minor overhead (minor dimension ) , facil dell' access random modif , cons portabil calcol , non text editor 	1
A3029	Q2997	C2	IT	L33	puntator è variabil right valu è tip dat contien un' indirizz part memor . tipod indic puntator punt cell memor valor è tipod (es int ) . puntator è assoc puntator , vien decis programm pot utilizz all' intern programm . caratt * è simbol dereferenz puntator , indic vogl " legg " valor right valu puntator . cas dichiar scriv puntator è variabil punt variabil tipod 	0
A3321	Q3400	C2	IT	L36	riteng domand non chiar mal post . 	0
A3168	Q3167	C2	IT	L35	definizion funzion si divid header : dichiar progett .h seguent struttur : tipodelrisult nomedellafunzion (tipodellargoment argoment ) ; body : implement progett .c/.cpp seguent struttur : header{ part dichiar local , ossi variabil necessar funzion sottoprogramm non specific nell' header ; part programmat , ossi istruzion funzion comp ; return variabiledaritornaredopoavereffettuatoleistru ; } sol 500 caratter è difficil spieg . 	0
A3071	Q2999	C2	IT	L33	diment più break costrutt switc , cas verific cas si diment break verr esegu l' istruzion dov quel cas l' istruzion cas success . esemp programm valut valor variabil inter (suppon int a=1 ) , cas blocc istruzion : switc ( ) { cas 0 : printf ( " zer " ) ; break ; cas 1 : printf ( " " ) ; cas 2 : printf ( " " ) ; break ; default : printf ( " nessun precedent " ) ; } programm esegu l' istruzion cas 1 , l' istruzion cas 2 . 	3
A3352	Q3316	C2	IT	L36	funzion ricors è funzion richiam sè stess (ricorsion dirett ) richiam funzion volt richiam (ricorsion indirett ) . 	0
A2531	Q2434	C2	IT	L29	tip struttur è tip vien espress dichiar programm , può plasm bas esigent . c vien dichiar mod : struct nome_struttura{ tipo1 nomecampo1 ; tipo2 nomecampo2 ; .... } nome_var ; 	1
A1991	Q2069	C2	IT	L25	convert numer decimal binar è necessar effettu ser division 2 numer decimal . numer binar si ottien consider , cifr men signif più signif , i rest division effettu . esemp vogl convert numer 49 binar oper mod : 49 : 2=24 rest 1 24 : 2=12 rest 0 12 : 2=6 rest 0 6 : 2=3 rest 0 3 : 2=1 rest 1 1 : 2=0 rest 1 numer 49 notazion binar è 110001 	3
A2142	Q2307	C2	IT	L27	registr interru è sistem utilizz var hardw segnal azion event cpu . poic processor ricev inform sol attravers singl ingress , qualsias hardw debb richid l' utlizz cpu funzion , invi seganl cpu stess interromp ciò stav elabor analizz richiest dell' hardw . 	1
A3199	Q3233	C2	IT	L35	parol chiav const può qualific funzion membr imped qualsias modif class origin . esemp dichiar class " aut " " funzion ( ) const " essa non potr modific alcun valor variabil intern . funzion const util quant evit l' accidental modif parametr potrebber introdurr error programm (ad esemp programm vien usat più non sann qual parametr poss esser modific ) 	1
A3265	Q3230	C2	IT	L35	tip dat void (o tip indefin ) vien utilizz quand valor ritorn funzion non esser pres consider ; vien dichiar tip void funzion non necess com return non ritorn alcun valor . 	1
A3152	Q3167	C2	IT	L35	'definizion funzion ' si intend l' " header " ( test ) ; esso contien inform relat : -al tip risult ritorn funzion (es . int) ; -all' identif funzion (nom ) ; -ai parametr formal funzion identrific tip (quell parentes ) ; es . int diff(int a,int b ) ; corp funzion è costitu : -un part dichiar local contien variabil local intern funzion . -un part codic contenent oper sarann esegu moment dell' invoc . 	1
A1932	Q1999	C2	IT	L25	, non è possibil , poic caratt " 1 " post iniz variabil non è compres compil . variabil " counter1 " è tranquill possibil . 	0
A2893	Q2825	C2	IT	L32	typedef è " parol chiav " serv dichiar tip . mentr costrutt " struct " permett defin struttur aggreg inform var tip . poch parol " struct " è tip , dunqu esser defin dovr esser preced " typedef " . 	0
A2998	Q3103	C2	IT	L33	vantagg principal consist non dover cop conten string prim scrorr perc puntator punt all' indirizz dat (in cas i caratter string ) non valor dat . quest propriet è apprezz piccol programm , divent dover si vogl scorr i caratter string grand . 	1
A3012	Q3100	C2	IT	L33	typedef permett cre tip attravers tip costrutt , particol può esser built-in(es : int ,char. . ) struttur (array e/o struct ) . particolar util struct , enum matric , quant poss esser utilizz cre tip array più compless (es : matric tridimensional ) semplific l' uso costrutt (es : l' enum permett non elenc ogni volt element ogni nuov variabil ) . 	2
A2909	Q2820	C2	IT	L32	tip struct permett cre array struttur dat non omogene , cio array può conten variabil tip char , variabil tip int float , string caratter , esemp . 	1
A2274	Q2250	C2	IT	L27	registr interru tien memor richiest attenzion part unitã estern richied attenzion real . non foss registr quest richiest ferm l' unitã logic perd quant fatt quel moment . livell softw sistem permett richiam programm chiam chiamant . c' ã¨ fort correl quant livell softw si applic stess procedur dell' hardw real-tim . 	0
A1859	Q2022	C2	IT	L25	registr dat : contien dat attual oggett elabor risult termin dell’esecu . registr indirizz : conteng indirizz usat acced cell si vuol far rifer . 	0
A1896	Q2057	C2	IT	L25	clock sistem scand esecu un' istruzion programm . più alto è frequenz clock più istruzion potrann esser esegu determin lass . 	1
A3365	Q3401	C2	IT	L36	confront memor central , unit memor mass richied temp access scrittur elev . ruol buffer sistem (are memor central vien memorizz stream dat prim esser scritt fil ) è rend più veloc l' esecu programm è richiest scrittur fil . volt complet scrittur buffer si svuot . 	1
A2692	Q2626	C2	IT	L31	costrutt " if " vien utilizz situazion è necessar verific condizion è ver . costrutt " if-els " , permett verific condizion è ver cas fals , esegu blocc istruzion . 	5
A2427	Q2521	C2	IT	L29	quand numer cicl esser ripet è not cicl for è più facil scriv , modific , controll . quand cicl ripet finc val cert condizion ciò dip qualcos non preved , non si sa quant cicl esegu , si usa comun cicl whil . 	2
A2980	Q3055	C2	IT	L33	caratt '* ' può 3 usi : 1 ) simbol moltipl : moltipl right valu variabil ; 2 ) oper dereferenz (* ) : acced conten cell memor avent com indirizz right valu variabil a; 3 ) dichiar variabil puntator (int *a ) : dichiar variabil cell memor verr alloc indirizz un' altra cell memor . 	3
A1946	Q2068	C2	IT	L25	è necessar svuot fil stdin quand si legg variabil tip caratt tastier , perc dop aver esegu programm inser i valor tastier rimang memorizz non quest valor caratter (com invi ) dop chiusur dell' esecu , caus mal funzion programm . esemp utent dig numer 8 conferm invi , verrebb prelev fil input valor 8 valor invi . 	1
A2134	Q2306	C2	IT	L27	dichiar variabil tip int defin l' insiem valor quest può assum . i calcol preved i tip dat abbi dimension memor fortement dipendent dall' hardw ,esist poi qualif permett aument diminu .short utilizz valor compres -32767 32767 ( 2^15 ) mentr long -2147483647 2147483647 ( 2^31 ) .int assum valor max min bas calcol (16bit->2^15 32bit->2^31 ) .short<=int<=long 	0
A3115	Q3047	C2	IT	L33	funzion prend com input l' indirizz dat richied men memor si pass dat , , consent modific valor variabil livell visibil estern funzion metod . inoltr , passagg indirizz , è necessar pass funzion argoment tip puntator , variabil può restitu più valor . approcc vien predilett quand si dev pass struttur array oppur quand si vuol modific , dall' intern quell funzion , variabil pass . 	1
A2784	Q2920	C2	IT	L32	poss esser inser struttur i tip bas qual int , float , doubl chat . è possibil struttur struttur utilizz tip struttur qual struct , typedef , enumeration 	1
A2885	Q2792	C2	IT	L32	essend 8 multipl 2 (2^3 ) conversion risult semplic : ogni 3 cifr binar si otterr un' unic cifr ottal . numer convert separ grupp cifr part destr (senz preoccup cifr non multipl ) ognun qual vien divis 8 . numer ottal si ottien lettur sequenz rest otten division . facc esemp chiar : numer binar 1001010111 suddivis mod : " 00 " 1 -001-010-111 ; division ogni triad 8 si otteng i rest 1-1-2-7 . numer convert è 1127 . 	3
A2524	Q2467	C2	IT	L29	string è compost caratter , non bisogn inser " & " com scanf. non ten cont l' ultim posizion string caratt è occup da" \o " . string numer compost n element , dimentic element vettor nomin 0 n-1 . 	2
A3269	Q3233	C2	IT	L35	prim specific tip variabil si premett ?const ? conten variabil non può più esser modific . variabil ?const ? sempr esser inizializz . l' uso const è consigl all' altern scriv più stess costant , infatt programm decid camb valor durant compil programm usat const , è sufficient modif sol istruzion definizion . 	0
A1966	Q2032	C2	IT	L25	registr (stat register ) controll condizion anomal durant cicl esecu ; utilizz flag (c ,z,s,v ) ; registr dat (dat register ) contien dat prelev cell memor oppur dat dovr esserv trasfer ; registr indirizz (accumulator register ) vien utilizz esegu somm memorizz i risult parzial oper . 	0
A2353	Q2451	C2	IT	L29	cas costrutt else si rifer if (c2 ) poic compil attribu if più vicin . 	0
A1809	Q2165	C2	IT	L25	e' non scriv perc cas contrar dovre inser tastier ciò non è l' identif sta apic affinc variabil veng valorizz mod corrett . cas assegn valor valid variabil valor dovre scriv all' intern programm " valore= " segu valor inter desider . 	0
A2884	Q2792	C2	IT	L32	essend 8 multipl 2 (2^3 ) conversion risult semplic : ogni 3 cifr binar si otterr un' unic cifr ottal . numer convert separ grupp cifr part destr (senz preoccup cifr non multipl ) ognun qual vien divis 8 . numer ottal si ottien lettur sequenz rest otten division . facc esemp chiar : numer binar 1001010111 suddivis mod : " 00 " 1 -001-010-111 ; division ogni triad 8 si otteng i rest 1-1-2-7 . numer convert è 1127 . 	0
A3096	Q3012	C2	IT	L33	com break com sapp consent uscir switch.nel cas si omett tal istruzion cas veng esegu istruzion success fann part cas .pu esser util cas si vogl esegu cas tutt istruzion dop esso , second valor ingress switc . es : switc ( ) { cas 0 : printf ( " ciao\n " ) ; break ; cas 1 : printf ( " cia " ) ; cas 2 : printf ( " mario\n " ) ; } a=0 vien esegu cas 0 , a=1 i cas 1 2 , =2 esegu cas 2 . 	2
A2570	Q2619	C2	IT	L31	metod più efficent è l ?utilizz istruzion condizional , qual i costrutt " for " " whil " .conosc numero,seppur grande,d element array , cre inizializz variabil contator è possibil : 1 ) cre cicl whil fintantoc contator è minor numer element ?array spazz tutt i valor 2 ) cre cicl for fintantoc contator è minor numer element dell' array increment spazz cos tutt element ?array quest metod necessar fas inizializz stamp dell' array . 	0
A2133	Q2348	C2	IT	L27	osserv " comput " signif " calcol " , calcol non fa distinzion form poic entramb calcol . different and b not ( ( not ) or (not b ) ) risied veloc esecu calcol part compil . l' espression and b , infatt , è necessar sol oper , mentr not ( ( not ) or (not b ) ) necessar oper . quest different si può afferm and b è più rapid comput . 	3
A2878	Q2885	C2	IT	L32	rappresent complement più utilizz vantagg non dopp codif tratt segn non richied circuiter specif tratt segn . rappresent complement bit rappresent segn n bit si codific i valor -2^ (n-1 ) 2^ (n-1 ) -1 . codif avvien normal bit è 0 , mentr si decodif poi si sottra 2^ (n-1 ) . inoltr invert numer binar si invert singol cifr poi si aggiung . 	0
A1957	Q2143	C2	IT	L25	string " system( " paus " ) ; " è essenzial programm . e' consigl , non indispens , utilazz quest string poic essa finestr esecu programm si chiud all' istant , imped cos controll risult . inser " system( " paus " ) ; " è possibil manten apert finestr esecu tutt necessar consult . finestr vien poi chius prem qualsias tast tastier . 	1
A3018	Q2999	C2	IT	L33	l ?istruzion break permett uscir blocc switc , tal istruzion vien dimentic , veng esegu tutt istruzion segu cas desider (anc quell cas success ) . 	1
A3343	Q3316	C2	IT	L36	funzion ricors è funzion richiam sè stess (ricorsion dirett ) richiam funzion volt richiam (ricorsion indirett ) . 	2
A3349	Q3316	C2	IT	L36	funzion ricors è funzion richiam sè stess (ricorsion dirett ) richiam funzion volt richiam (ricorsion indirett ) . 	0
A3059	Q3103	C2	IT	L33	scorr string si utilizz sempr puntator , quest array char (char a[100 ] , è puntator ) puntator string (char* s , s è puntator ) , ogni cas scorr string util i puntator poic i var caratter alfanumer si trov distanz defin l' dall' (dimension char=1byt ) , ovver 8 bit distanz , bast conosc puntator individu tutt i caratter success string . 	1
A2877	Q2886	C2	IT	L32	è util non dover ripet l ?elenc valor ogni volt si defin variabil . esemp : typedef enum {lun , mar , mer , gio , ven , sab , dom } giornosettiman ; ? ? giornosettiman giorn ; 	0
A2766	Q2914	C2	IT	L32	principal different sta fatt tip dat astratt è riconosc dall' utent non compil ; infatt quand si " costru " bisogn assoc (con typedef ) tip dat riconosc compil . es : typedef int inter ; dic compil inter (riconosc dall' utent ) è " sinonim " int(riconosc compil ) . 	1
A3030	Q3047	C2	IT	L33	variabil tip puntator è variabil punt all' indirizz memor . i vantagg nell' usar i puntator funzion prim tutt si alloc dinam memor consent alloc quantit memor arbitrar , secondar si pass variabil non più fac cop essa pass rifer . l' uso puntator general , funzion , si risparm memor rend util quand abbiam funzion array grand cas list . 	0
A2002	Q1973	C2	IT	L25	memor ram funzion primar ricev un’enorm quantit dat finc pc sta elabor , comp cre access dirett tutt indirizz brev veloc elev . quant riguard memor mass ,invec , comp raccogl grand quantit dat veng immagazzin , vien defin different ram com memor non volatil , comp registr , conserv permett rilettur dat . 	0
A1982	Q2057	C2	IT	L25	ruol clock sistem è scand i temp esecu var istruzion . component funzion mand impuls ogni clock frequenz , misur hertz . clock frequenz più elev gener numer maggior impuls unit conseguent sarann esegu più veloc istruzion . 	0
A2755	Q2793	C2	IT	L32	e' fortement sconsigl poic , verif tip (x==y ) , risult è " ver " tutt cifr decimal ugual è improb . e' consigl scriv : ( ( x >= (y-d ) ) && (x<= (y+d ) ) dov d è piccol margin incertezz . 	3
A3001	Q3119	C2	IT	L33	linguagg c , graz all' aritmet puntator , permett svolg un' ampi gamm oper (tra assegn ) puntator costruzion più efficient dinam programm . infatt assegn semplic valor , variabil puntator [es : int *p ] poss memorizz l' indirizz memor precis variabil [p=&x ] zon memor alloc heap [p=new int] . inoltr l' uso puntator risult indispens nell' inizializz array (all' intern funzion ) nell' access camp struttur (mediant dot notation ) 	1
A2578	Q2677	C2	IT	L31	e' costrutt serv defin tip dat ordin numer natural ; pratic bass livell verrann sempr vist com inter , alto livell vedrem nom più signif com " luned , marted etc " (se utilizz i giorn settiman ) . 	0
A2583	Q2677	C2	IT	L31	enumeration è tip user-defined c , permett defin list simbol . si inizializz : enum {list simbol separ virgol } variabil ; solit si usa defin tip valor predefin programm numer limit . bisogn attenzion riguard com i valor defin veng gest compil : veng infatt consider com costant inter . 	1
A2673	Q2781	C2	IT	L31	typedef tip nomenuovotip esemp : typedef char nomistudent [lunghezza_massim ] 	0
A2415	Q2486	C2	IT	L29	succed si avrà un' esecu casc tutt i cas success scelt è indispens mett far si salt istruzion conten success cas vad dirett all' istruzion success switc . 	0
A2912	Q2800	C2	IT	L32	mod può esser trasform numer bas 8 bas 2 poi riconvert bas 16 . esemp : 64752 -> 110 100 111 101 010 raggrupp i bit otten 4 4 , part destr (aggiung zer sinistr ) otteng : 0110 1001 1110 1010 -> 6 9 	0
A2389	Q2427	C2	IT	L29	l' identif main vien defin " int " poic ' puo' restitu codic numer error sistem oper . argc arggv argoment line com . int argc contien numer string inser ?utent line com char *argv[ ] e' l ?array contien string inser ?utent line com (ogn element ?array è puntator caratt ) . 	0
A3114	Q3100	C2	IT	L33	typedef è parol chiav linguagg programm c . scop typedef è diassegnaredeinom altern tip dat esistent , solit quell dichiar standard è tropp ingombr , magar confusional , oppur rend codic riutilizz più facil un' implement un' altra . 	0
A3382	Q3401	C2	IT	L36	buffer contien i dat verrann poi salv com fclos fil precedent dichiar . infatt dann provoc non utilizz com fclos è perd dat . import usarl . 	1
A3229	Q3199	C2	IT	L35	attravers passagg rifer si forn funzion puntator (e l' indirizz posizion memor ) variabil interess oper . mod funzion è grad lavor variabil stess , anzic cre cop com passagg valor . funzion success prim vann oper variazion stess variabil , vien modific . passagg rifer miglior l' efficient programm , altern sarebber necessar 'n' cop stess variabil 'n' funzion . 	2
A1888	Q1971	C2	IT	L25	problem principal è l' approssim variabil float,es : 20.30 può ven scritt compil com 20.2999 . infatt i numer virgol mobil non esatt poss condurr risult " stran " . super problem non bisogn verific i valor sian esatt quell si aspett usand l' aritmet standard , bisogn verific i valor calcol si trovin all' intern intorn risult attes defin cert margin eps . 	1
A2391	Q2439	C2	IT	L29	cicl for l' inizializz variabil contator , test condizion ingress cicl l' increment variabil contator veng effettu all' iniz : for(inizializz ;condizion ;increment ) { istruzion } . cicl whil condizion vien post all' inizio(whil (condizion ) { istruzion } ) , mentr variabil utilizz com contator esser scritt all' intern cicl l' increment variabil stess . sol cicl for vien utilizz quand numer ripetizion è not , mentr cicl whil quand non si conosc . 	1
A2132	Q2347	C2	IT	L27	element principal macchin von neumann : processore=eseg i programm ; memor centrale=memorizz dat istruzion ; memor massa=memorizz grand quantit dat ; perifer i/o=consent interfacc l' estern ; bus sistema=colleg tutt element . 	0
A2402	Q2418	C2	IT	L29	scrittur programm è essenzial analizz problem progett l ?algoritm funzional poi verr tradott programm computer . è import funzional dat programm super-efficient ritorn risult tropp approssim non serv è import l ?ottimizz , perc programm corrett non funzion non serv . line massim si ottimizz già sed scrittur . è possibil comunqu ottimizz ulterior programm volt è funzion . 	0
A2447	Q2573	C2	IT	L29	line general istruzion prestazion simil . tuttav condizion casist tutt form " x==k " l' istruzion switc risult più leggibil immed . cas è consigl usar switc è quand variabil controll fa part funzion , quand quest verrebb richiam soltant volt , mentr l' istruzion if-els verrebb richiam ogni " if/else-if/els " . infin mentr l' istruzion switc esce ( " break " ) cicl volt esegu " cas " , l' if-els confront esegu tutt condizion . 	0
A1960	Q2166	C2	IT	L25	non c' è lim , per variabil dichiar veng mess stack programm dimension limit è possibil si riemp programm vad error . 	0
A3346	Q3316	C2	IT	L36	funzion ricors è funzion richiam sè stess (ricorsion dirett ) richiam funzion volt richiam (ricorsion indirett ) . 	0
A3000	Q3100	C2	IT	L33	typedef , letter : " type definition " , è com usat quand si bisogn defin tip dat non present nativ linguagg c . può esser usat rinomin tip dat nom più facil quell nat (ad esemp , rinomin tip " int " " numeriinter " ) , ver util sta nell' usarl insiem nomin tip array matric (non dov poi riscriv parentes quadr ogni nuov variabil ) , enumer , struttur compless all' intern più tip . 	1
A2256	Q2358	C2	IT	L27	modalitã master/slav consist grupp disposit process qual (master ) possied assum comp controll gest disposit (slaves ) . 	0
A2519	Q2495	C2	IT	L29	sint " struct nome0{ .. } " non si dichiar variabil tip struct struttur " nome0 " (quind success dichiar variabil scriv " struct nome0 nome_var " ) , " struct { .. } nome1 " vien dichiar variabil tip struct si chiam " 1 " struttur non mentr " typedef struct { .. } nome_tipod " si cre tip variabil defin dell' utent si chiam " nome_tipod " . prim equivalent mentr terz vantagg permett success rius tip dat " nome_tipod " 	2
A2372	Q2561	C2	IT	L29	costruttor tip struct c permett defin struttur aggreg element tip div ; tal element si chiam camp struttur . infatt , cas , risult tutt imposs struttur l' inform mediant meccan dell' array , poic esso richied tutt i element sian omogene . i valor tip costru mediant struct costitu sequenz valor , i valor camp , appartenent tip qualsias . fatt struct costruttor tip implic esso può esser impieg esatt com array . 	3
A3383	Q3295	C2	IT	L36	funzion ricors cre zon memor esemp ogni volt funzion richiam stess 	0
A2089	Q2210	C2	IT	L27	calcol è compost seguent part : - processor (svolg l' elabor ) - memor central (memorizz dat istruzion ) - perifer (mous , tastier ) - memor mass (memorizz grand quantit dat manier non volatil ) quest comunic attravers bus sistem , consent scamb dat . 	0
A2824	Q2819	C2	IT	L32	informat si utilizz fondamental complement 1 2 com metod rappresent dat inter relat complement si esegu invert tutt i bit parol : 00001001=9 ; 11110110=-9 metod è imperfett quant preved rappresent numer 0 complement 2 si esegu pratic complement aggiung 1 oper complet 00001001=9 ; 11110111=-9 metod è più usat quant semplif notevol oper somm different usand bit com indic segn 	1
A1974	Q2143	C2	IT	L25	" system( " paus " ) ; " è dirett vien dat compil , qual sosp l' esecu programm non vien prem tast . quest dirett programm si chiud appen esegu l' ultim istruzion . " system( " paus " ) ; " è essenzial si vuol programm non si chiud automat process . 	0
A2246	Q2234	C2	IT	L27	legg de morgan prov l' equivalent specif espression boolean . prim legg afferm and b equival not ( ( not ) or (not b ) ) ; mentr second verif not ( ( not ) and (not b ) ) ã¨ ugual or b . 	0
A2844	Q2870	C2	IT	L32	i caratter string linguagg c poss esser semplic confront ordin . si prend esemp consider l' eserciz (svolt laborator ) confront string decid qual preced l' altra ordin alfabet . bast utilizz variabil contator cont numer caratter utilizz un' altra valut i caratter . 	0
A3285	Q3308	C2	IT	L36	ricorsion tip dirett funzion richiam stess (ad esemp funzion p richiam p ) mentr ricorsion tip indirett funzion richiam altra funzion volt richiam prim (ad esemp funzion p richiam q richiam p ) 	0
A2530	Q2441	C2	IT	L29	array è raccoglitor variabil omogene , memorizz cell memor consecut . dat ogni variabil occup post divers memor , vien applic indic ognun , qual indic posizion (dell variabil ) all' intern dell' array . acced variabil desider --> nomearray[ind ] . array è util quand si vuol oper più variabil tip , evit dichiar volt volt variabil serv . 	2
A2901	Q2803	C2	IT	L32	c poss ridefin tip già esistent defin tip (user-defined types ) attravers com typedef . si vuol ridefin tip già esistent si digit l' istruzion typedef segu tip dat si vuol assegn . si vuol defin tip dop typedef segu tip dat compless (struct , bit-field , union , enumeration ) , tip (facolt ) parentes graff . cas struct all' intern parentes si poss trov variabil tip divers , cas enumeration sequenz numer . 	1
A2903	Q2928	C2	IT	L32	rappresent complement sostitu quell rappresent segn esplic perc , pur essend men intuit vantagg : non è dopp codif valor zer (infatt avrebb signific divers second si trov prim posizion ) non è richiest circuiter specif tratt segn infatt codif complement l ?oper sottrazion vien fatt esegu ?addizion . 	1
A3367	Q3373	C2	IT	L36	funzion remov permett elimin fil vien indic parentes : remov ( " fil .txt " ) ; renam permett camb fil : renam ( " vecchionom .txt " , " nuovonom .txt " ) ; bisogn ten ment fil è apert non è possibil elimin , l' effett dell' esecu dip com si implement programm . e' necessar utilizz funzion controll verific l' oper è andat buon (la funzion restitu 0 cas success 1 cas error ) . 	2
A2802	Q2793	C2	IT	L32	l' utilizz tal oper è sconsigl presenz floating point . ovver essend i numer rappresent attravers codic binar funzion esponenzial , essend numer bit fin , numer real poss infin numer dop virgol , fa si numer real " ugual " present different nell' digit fa si l' oper == restitu corrispondent non ver . 	1
A2840	Q2921	C2	IT	L32	dip tip è variabil tien risult dell' oper . cas sommator variabil float variabil int: variabil risult tip int , avrò risult inter ; altriment variabil tip float avrò com risult numer virgol . 	0
A2501	Q2415	C2	IT	L29	getc ( ) è funzion standard library , richiam l' #includ , consent lettur standard input caratt poi restitu com inter . eof sta end of fil , cio fil è valor particol vien ritorn funzion getc ( ) quand vien raggiunt fil , cio quand non più dat input . 	0
A1993	Q2129	C2	IT	L25	trov valor tronc , decimal dop virgol . esemp : 67.7 divent 67 	0
A2394	Q2470	C2	IT	L29	signif compil distingu lett minuscol mauscol . scriv esemp printf printf printf cas complet div . permett identific parol chiav non poss esser utilizz ambit (tip nome_var nome_funzion ) . 	1
A3101	Q3075	C2	IT	L33	cicl for è particolar util quand numer iter è not prior . cicl whil , , è utilizz cas numer iter non è not non si è sicur condizion ingress cicl soddisfatt almen volt . do-whil è analog whil , si usa si è sicur cicl veng esegu almen volt . 	0
A2648	Q2673	C2	IT	L31	linguagg c defin : - precedent oper , qual cert oper maggior priorit ; - associat , ovver ordin oper div , avent stess priorit , veng assoc . utilizz divent fondamental cas non veng modific l' ordin valut dell' espression , attravers l' utilizz parentes . 	0
A2822	Q2814	C2	IT	L32	integral utilizz rappresent i numer inter solit occup spaz 2 4 byte memor . i floating numer virgol mobil utilizz rappresent i numer razional solit occup 4 8 byte . 	1
A2695	Q2698	C2	IT	L31	l' istruzion if ( ) è costru scegl l' esecu un' istruzion altern un' altra second valor cert condizion . cas per altern scegl poss esser moltepl ognun possibil caratter dev esser esegu azion divers . tratt cas gen costrutt if ( ) può risult tedios innatural . vien utilizz com switc ( ) , struttur controll tip selett . 	1
A3198	Q3238	C2	IT	L35	non si defin separat header i body , si cre rifer funzion . int numeroprim (int n ) ; quest tecnic è util cas : quand realizz programm fil , defin tutt i rifer funzion prim cre esse creazion progett più fil , è buon norm scriv rifer fil " .h " ( header-files ) , mentr funzion si implement fil " .cpp " ( implementation-fil ) . entramb i cas si possibil implement funzion nell' ordin prefer si ordin maggior codic . 	1
A3293	Q3381	C2	IT	L36	fluss ifstream deriv class istream è utilizz gest lettur fil (sol lettur ) fluss ofstream deriv class ostream è utilizz gest scrittur fil (sol scrittur ) fluss fstream deriv iostream è utilizz gest lettur scrittur fil (lettura+scrittur contemporan ) 	0
A2900	Q2921	C2	IT	L32	si oper tip dat int , i 2 byte memor rappresent inter , dat float 4 byte , rappresent numer razional , men propr numer real , linguagg c non avvert alcun error , esegu assegn , cio conversion automat tip . l' assegn convert tip dx dell' ugual tip sx ( [int ] = c[float ] c->a ) . ciò può caus tronc , perd inform , trasform indesider . conversion implic trasform tip inferior superior , regol int<float . 	1
A2388	Q2455	C2	IT	L29	si , è possibil implement comand assembler all' intern programm c/c++ . ciò può esser fatt utilizz funzion asm ( ) (esemp : asm( " codic assembler " ) ; ) . 	3
A2418	Q2415	C2	IT	L29	getc ( ) è un' istruzion permett legg l' input buffer . a=getc ( ) ; legg caratt buffer assegn variabil . l' eof (end of fil ) è caratt special segn input caratter , serv compil controll quand fin fas input proced sezion success programm 	0
A3121	Q3047	C2	IT	L33	cre funzion è possibil pass input quest puntator , mod allegger programm diminu quantit memor occup , poic puntator non contien effett dat , indirizz (più legger ) . alcun cas tuttav l' utilizz puntator risc complic funzion rend men fruibil all' utent , cre possibil effett collateral dov utilizz non corrett passagg indirizz . 	0
A3102	Q3123	C2	IT	L33	i puntator veng salv memor steck , perc variabil com tutt quest destin conten indirizz memor . 	0
A2686	Q2674	C2	IT	L31	utilizz array defin numer massim element programm vien esegu mod più immed memor alloc già conosc macchin . invers array dinam comport ogni esecu programm far stim memor necessar possibil utilizz più cell necessar sian insufficient (overflow quand numer cell richiest superior quell dispon ) . comunqu scriv programm tip dell' dip programm è consapevol risc . 	3
A3169	Q3167	C2	IT	L35	definizion funzion si divid header : dichiar progett .h seguent struttur : tipodelrisult nomedellafunzion (tipodellargoment argoment ) ; body : implement progett .c/.cpp seguent struttur : header{ part dichiar local , ossi variabil necessar funzion sottoprogramm non specific nell' header ; part programmat , ossi istruzion funzion comp ; return variabiledaritornaredopoavereffettuatoleistru ; } cas procedur , ossi funzion non ritorn null , prim dell' header 	1
A3227	Q3202	C2	IT	L35	compless funzion può esser descritt attravers l' analis var fattor qual esecu , memor occup svolg difficolt l' elabor incontr acquis input restitu output . quest fattor fortement influenz dall' efficient dell' algoritm scelt funzion . funzion ricors compless può esser inoltr calcol bas quant vien semplific ogni ricorsion problem inizial . 	0
A3171	Q3253	C2	IT	L35	variabil static sono&#8239 ;alloc sol volt distrutt termin ?esecu programm , (lo quell global ) e&#8239 ;fung canal comun funzion . variabil dinam veng cre distrutt dinam implicit sistem (automat ) esplicit programm , appos costrutt . variabil automat cre quand fluss esecu entra ambit visibil distrutt ?usc tal ambit ; veng dichiar funzion (inclus parametr ) . 	1
A2855	Q2958	C2	IT	L32	codic asci forn tabell elenc corrispondent caratter numer . different codic asci standard 7 bit , mett disposizion possibil rappresent 128 caratter (2^7 caratter ) codific attravers 7 bit inform , conterrann cifr binar assoc caratt corrispondent , codic asci estes 8 bit mett disposizion possibil rappresent 256 caratter div (2^8 caratter ) , quant i bit veng consider grupp 8 non più grupp 7 . 	1
A2006	Q2058	C2	IT	L25	conten può esser var , sens non si è cert conteng registr assoc dett variabil . infatt è possibil esso conteng inform tip alfanumer (es : 0 , -20 , 14875269 , ecc . ) . inoltr , è assolut sconsigl l' uso variabil non inizializz all' intern programm , quant non si conosc conten . 	2
A3243	Q3284	C2	IT	L35	definizion funzion bas specif inizial sint linguagg , si present seguent form : tiporitorn nomefunzion (lista_parametr ) dichiarazione_parametr { definizioni/dichiar lista_statement } tiporitorn non vien specific , default vien assunt tip int. funzion non ritorn alcun risult . tiporitorn esser specific tip void . int fattorial (n ) int n; { if (n > 1 ) return n*fattorial (n-1 ) ; } 	0
A3210	Q3244	C2	IT	L35	imped funzion modific paramentr pass rifer è sufficient utilizz parol chiav " const " davant tip dat nell' intest funzion . esemp : void funzion (const int variabile1 , int variabile2 ) { variabile1 = 0 // error , c' è const davant " int variabile1 " variabile2 = 0 // è possibil ! ! } 	2
A2517	Q2546	C2	IT	L29	quand uso dowhil so blocc istruzion sar esegu almen volt , mentr utilizz whil c' è possibil non dover esegu mai codic blocc . 	0
A2180	Q2229	C2	IT	L27	ram è dett memor access casual quant permett l' access dirett qualsias indirizz memor brevissim , infatt è utilizz com memor central . è memor tip volatil poic necess aliment elettr manten propr intern inform , esemp spegn computer tutt inform memorizz all' intern essa veng cancell ; mot vien dett memor temporane . 	0
A3146	Q3262	C2	IT	L35	pass semplic vettor (quind compost list element raggrupp un' unic rig ) , calcol bast scorr element quest rig bast sap posizion inizial element ; pass matric (quind element raggrupp più righ ) calcol oper somm offset dopp puntator sap dimension massim righ colonn è compost matric . 	0
A2685	Q2664	C2	IT	L31	tip dat struttur array e' omogene sequenz cell consecut . non e' possibil intern dat tip divers , fas dichiar si scegl tip dat conterr l' array dichiar . 	2
A3072	Q3034	C2	IT	L33	pass l' indirizz variabil anzic valor stess può esser util quant forn maggior flessibil velocizz oper variabil grand memor . esemp suppon variabil occup spaz , cop più punt programm conseguent sprec memor è più comod utilizz puntator punt all' indirizz memor variabil . 	4
A2031	Q2135	C2	IT	L25	i modern elabor elettron verific presenz (o men ) corrent all' intern circu . l' unit fondamental inform veng rappresent , bit , assum pertant soltant : " 1 " " 0 " . sarebb cert possibil realizz computer sensibil , esemp , all' intens corrent , permett oper bas different , attual tecnolog sarebb particolar compless assicur calcol affid più . 	1
A2224	Q2201	C2	IT	L27	uc attravers segnal controll spost conten pc registr indirizzi( ) ; tram segnal vien lett dato.il dat vien spost registr dat (dr ) segu all' arriv segnal mfc (memory function completed ) cu spost dat registr istruzion corrent (cir ) .infin uc decodif l' istruzion segu gener sequenz segnal necessar all' esecu dell' istruzion , utilizz registr com quell operand 	1
A3289	Q3340	C2	IT	L36	sequenz ordin lunghezz 0 oppur 1 , è già ordin . altriment : sequenz vien divis (divid ) met (se sequenz contien numer dispar element , vien divis sottosequent prim element più second ) ognun quest sottosequent vien ordin , applic ricors l' algoritm (imper ) sottosequent ordin veng fus (combin ) . , si estra ripetut minim sottosequent si pon sequenz uscit , risult ordin 	3
A3378	Q3308	C2	IT	L36	si parl ricorsion indirett quand nell' algoritm funzion richiam un' altra volt richiam prim , altriment si parl ricorsion dirett . 	0
A2228	Q2245	C2	IT	L27	c i numer decimal si rappresent mediant tip float . rappresent un’ingent quantit cifr dop virgol è ben utilizz rappresent virgol mobil post quell virgol fiss (dov è sprec risors quant si riserv prior numer bit part inter part frazionar sap realment numer sfrutt quest spaz ) . mod si utilizz più efficient bit un’ottimizz risors . 	4
A2800	Q2899	C2	IT	L32	codif virgol fiss i bit dispon veng divis rappresent part inter quell frazionar , ovver virgol posizion fiss . vicevers codif virgol mobil larg part bit vien usat rappresent cifr signif , mentr i rimanent veng usat stabil posizion virgol . pag.6 cap 4.5 	0
A2713	Q2652	C2	IT	L31	scanf è sconsigl l' acquisizion string quant legg caratt " spaz " com termin string ossi com 0 . parol acquis esemp string caratt spaz (es cognom ) acquis . solit nell' acquisizion string tastier si usa gets ancor fgets : f gets infatt esegu controll dimension string segnal eventual error cas string super dimension buffer . 	1
A2699	Q2639	C2	IT	L31	array caratter può esser usat rappresent string , l' unic different è cas string vien aggiunt valor null indic string . cas string lunghezz n si dovr riserv spaz memor par n+1 , via caratt null . esemp : char string [ ]= " cia " ; equival dichiar array caratter chiam " string " sar compost 5 element . 	1
A3119	Q3126	C2	IT	L33	vien defin variabil tip char** p(la dopp de-referenz (** ) indic p è variabil puntator ) , stiam dic compil p punt cell memor conten sar volt indirizz (in cas p sta punt all' indirizz caratt ) . 	1
A1831	Q2042	C2	IT	L25	cpu , central processing unit , è processor calcol . gest tutt perifer contemporan graz : -il bus sistem , colleg tutt i component , rend dunqu raggiung messagg component -la frequenz clock stabil veloc processor , avend cos possìbil aument prestazion , riusc svolg più attiv contemporan 	1
A3166	Q3202	C2	IT	L35	nell' informat , funzion ricors class funzion numer natural numer natural " calcol " qualc sens intuit . infatt teor calcol si mostr funzion ricors corrispond precis quell funzion poss esser calcol tram macchin turing . non tutt funzion calcol , cio ricors , quest si dic funzion non ricors veng calcol attravers alcun teorem , com ferm . 	0
A3105	Q3119	C2	IT	L33	puntator è possibil effettu div tip assegn , particol : - assegn ?indirizz variabil tram l' oper unar & ; - assegn valor puntator ; - assegn valor special null ; - assegn indirizz memor segu oper alloc esplic memor . 	2
A3159	Q3160	C2	IT	L35	si , linguagg programm c è ammess chiam ricors sottoprogramm . programm ricors vien assoc un' are dat non sottoprogramm ogni esecu , chiam record attiv . 	2
A2905	Q2870	C2	IT	L32	i tip char sol veng rappresent mediant byte , sufficient rappresent i 256 caratter codif ascii.l' asci è sistem codif caratter 7 bit , comun utilizz calcol . codic asci caratter realt memor vien espress numer inter -128 +127 defin oper assegn quell aritmet quell relazional .pertant , i caratter è automat defin ordinamento,per esemp sar lec scriv 'a'< ' r ' . 	2
A3194	Q3169	C2	IT	L35	argoment funzion , elenc test all' intern parentes , veng dett parametr formal funzion . quest rappresent que valor funzion richied esegu oper l' utent inser all' intern . quant riguard i parametr attual ( dett effett ) quell funzion attu oper logic intern . quand funzion vien invoc , i parametr formal veng inizializz i valor parametr effett . 	1
A2269	Q2209	C2	IT	L27	x | y | not y | x or not y | not y and y and (x or not y ) 0 0 1 1 0 0 1 0 0 0 1 0 1 1 0 1 1 0 1 0 com si puã² not tabell , l' espression boolean dat non mai uscit valor ver , sempr valor fals . 	1
A3204	Q3187	C2	IT	L35	passagg parametr valor avvien copp (dall' ambient main all' ambient searc ) svantagg i parametr effett quell formal occup zon divers memor sistem passagg copp divent inefficient valor ingombr . passagg indirizz , , utilizz parametr formal tip puntator qual non contien i dat variabil contien l' indirizz cell memor dov essi conten acced vien usat l' oper de-referenz (* ) permett acced conten cell memor 	1
A2676	Q2632	C2	IT	L31	array static , volt dichiar grandezz dell' array , compil riserv spaz memor necessar memorizz quest' (cos com farebb ogni altra variabil dichiar ) non è più possibil modific segu . array dinam sar possibil modific dinam dimension . 	4
A2464	Q2563	C2	IT	L29	codif serv entramb rappresent i caratter . mentr codif asci utilizz 8 bit ( può rappresent massim 256 caratter , numer simbol ) , quell unicod utilizz 16 ( è stat aggiorn pot utilizz 21 ) , pot cos codific 65.536 caratter . unicod è utilizz internet perc ewb bisogn necessar rappresent i caratter divers lingu . 	1
A3421	Q3332	C2	IT	L36	nell' iter si esegu ripetut righ codic (cicl for , whil , do..whil ) mentr ricorsion è tutt routin richiam sè stess . ciò si ottien solit tram -ripet - chiam funzion , non cost trascur . general algoritm ricors codic più compatt analog iter , consum memor maggior . calcol infatt ten memor ogni chiam funzion all' ultim , qual part risolv problem . 	1
A3374	Q3434	C2	IT	L36	funzion fopen ( ) permett creazion colleg fluss fil perifer . funzion consent aprir fil gia ' esistent cre assoc fluss ; permett legg i dat manier different : lettur e/o scrittur modal ' test all' iniz fil , scrittur modal ' test fil , lettur e/o scrittur modal ' binar all' iniz test scrittur modal ' binar test . 	0
A2488	Q2439	C2	IT	L29	cicl for cicl whil equivalent infatt cicl for può esser riscritt usand cicl whil vicevers .son per div struttural .infatt cicl for struttur tip for(inizializz ; condizion ; increment ) { <istruzione> ; } mentr cicl whil struttur tip whil ( condizion ) { istruzion ; } 	0
A2200	Q2241	C2	IT	L27	rappresent più vantagg è quell virgol mobil (floating point ) utilizz notazion esponenzial ; i vantagg riguard possibil rappresent poch cifr numer grand oppur rappresent precision numer piccol . sostanz rappresent virgol mobil estend l’intervall numer rappresent , parit cifr , notazion virgol fiss . 	0
A2222	Q2201	C2	IT	L27	uc attravers segnal controll spost conten pc registr indirizzi( ) ; tram segnal vien lett dato.il dat vien spost registr dat (dr ) segu all' arriv segnal mfc (memory function completed ) cu spost dat registr istruzion corrent (cir ) .infin uc decodif l' istruzion segu gener sequenz segnal necessar all' esecu dell' istruzion , utilizz registr com quell operand 	0
A2373	Q2560	C2	IT	L29	puntator si dichiar usand l' oper aster (* ) , qual restitu conten dell' oggett punt puntator . tradott c : tipod *tipopunt (es : int *puntator ) 	1
A2301	Q2284	C2	IT	L27	principal different dram sram ã¨ conten dram , tip ram immagazzin ogni bit divers condes , necess esser " rinfresc " period , consent maggior densitã sram . sram inoltr bass temp lettur bass consum , cost piã¹ elev dov complessitã cell memor compong . sram puã² inoltr manten inform teoric infin , contrar dram perd inform quand cess l' aliment sistem . 	0
A2225	Q2201	C2	IT	L27	uc attravers segnal controll spost conten pc registr indirizzi( ) ; tram segnal vien lett dato.il dat vien spost registr dat (dr ) segu all' arriv segnal mfc (memory function completed ) cu spost dat registr istruzion corrent (cir ) .infin uc decodif l' istruzion segu gener sequenz segnal necessar all' esecu dell' istruzion , utilizz registr com quell operand 	0
A2147	Q2323	C2	IT	L27	gestion perifer è affid sistem oper qual , attravers programm denomin driver , gest oper input/output perifer . polling l' interrupt different modal controll gestion perifer i/o . polling è controll ciclic perifer , mentr l' interrupt è segnal tip asincr invi cpu , vien gener verific event estern intern . 	2
A3170	Q3243	C2	IT	L35	test funzion è part dov present dichiar , è tip dat funzion (int,void,c ) , funzion i parametr ingress , body contien variabil local part codic . test funzion conten vann sempr dichiar fil header (funzion .h ) , definizion compr head body inser fil .cpp (funzion .cpp ) . 	1
A3240	Q3281	C2	IT	L35	compless cas peggior , cas med cas miglior . 1 ) cas miglior è cas i dat input i miglior dat possibil l' algoritm , cio quell richied men elabor esser tratt . 2 ) cas med permett stud l' algoritm bas frequenz si verific input compless ciascun essi .e' più util analizz quant forn real indic compless dell' algoritm . 3 ) cas peggior è cas i dat input richied massim numer pass l' algoritm . 	3
A1958	Q1984	C2	IT	L25	l' alu funzion esegu oper aritmet logic , è component fondamental cpu assiem cu comp coordin azion necessar svolg istruzion . l' unit controll ricev segnal relat alu . 	0
A2988	Q3044	C2	IT	L33	e' possibil acced array mod different : scriv p[3 ] acced all' element dell' array posizion 3 (cio , cont 0! ) ; scriv * (p+3 ) esegu 2 oper : 1 ) part posizion punt p (cio posizion 0 dell' array ) , spost avant 3 indirizz , fac cos rifer cell dell' array posizion 3 (la quart , com ) . 2 ) l ?oper dereferenz ? * ? andrem legg valor cell memor abbiam appen individu punt 1 . 	2
A2552	Q2642	C2	IT	L31	array può esser defin com ?collezion organizz oggett ? . analizz definizion cap molt cos , innanzitutt concett ?collezion ? implic tal oggett sian tip ; array c è collezion variabil tip . ?organizz ? implic possibil identific univoc tutt ogget ?array mod sistemat ; c vien fatt tram l' uso indic numer , array dimension n , vann 0 n-1 . esist tip array : -monodimensional (vettor ) ; -multidimensional . 	1
A2744	Q2715	C2	IT	L31	normal dimension array è defin tram costant memor vien alloc durant fas compil . utilizz i puntator funzion malloc ( ) , per , è possibil cre vettor dimension poss esser defin fas esecu particol puntator si assegn puntator valor malloc(x*sizeof(typ ) ) ; x=numer element (defin input ) type=tip element quel puntator sar effett vettor x element tip " type " , x defin fas esecu 	0
A3344	Q3316	C2	IT	L36	funzion ricors è funzion richiam sè stess (ricorsion dirett ) richiam funzion volt richiam (ricorsion indirett ) . 	0
A2092	Q2335	C2	IT	L27	processor fas interpret decodif , graz all' unitã â controll (uc ) , registr dell' istruzion corrent (cir , ) qual sarã salv l' istruziuon compil dovr esegu segu , dop aver ricev i operand salv registr b . 	2
A2981	Q3067	C2	IT	L33	non si può restitu array sè com tip ritorn funzion , si può pass com parametr (per rend l' array modific ) com variabil ritorn puntator array consent poi nell' ambient dov è avven l' istanz funzion oggett gest . 	1
A2595	Q2627	C2	IT	L31	perc bisogn riserv l' post dell' array caratt '\0 ' è caratt " string " 	1
A2890	Q2887	C2	IT	L32	l' array è contenitor omogene , contien dat tutt tip , l' access ogni element avvien attravers indic (ed cicl for ) . struct è eterogene , può conten dat tip divers , camp si acced attravers dot notation . un' altra different è array non può esser restitu funzion , struct si 	0
A2221	Q2328	C2	IT	L27	i termin 32 64 bit si intend grandezz bit variabil semplic architettur hardw . esemp cpu , i registr architettur 64 bit dimension maggior 32 bit perc dev " ospit " quantit maggior dat cos sistem può gest più dat contemporan . quest è l' unic different i calcol quant essi oper sempr com metod : fas fetc , interpret esecu . 	0
A3113	Q3073	C2	IT	L33	solit , comod , si dichiar variabil " i " all' intern dell' intest cas quell variabil vien utilizz all' intern cicl non fuor . sè non camb null si dichiar prim (int i=0 ) nell' intest si scriv i=0 . 	0
A3338	Q3316	C2	IT	L36	funzion ricors è funzion richiam sè stess (ricorsion dirett ) richiam funzion volt richiam (ricorsion indirett ) . 	0
A2670	Q2655	C2	IT	L31	gets ( ) permett inser più parol all' intern string , legg fil stdin caratt nuov line fil , termin automat caratt string " \0 " . utilizz com scanf ( ) , contrar , non è possibil acquis più parol (in quant caratt spaz vien consider com valor string veng manten fil stdin eventual rimanent parol ) . gets è sempr convenient memorizz string caratter , scanf è prefer singol parol necessar tip dat . 	3
A2642	Q2614	C2	IT	L31	different sostanzial array dinam static è seguent : array static dimension è not compil mentr array dinam è dimension l' alloc esecu .questa,oltr esser sostanzial different , è vantagg principal array dinam quell static . 	0
A2803	Q2817	C2	IT	L32	dichiar tip variabil è fondamental fas programm far cap compil com esso debb tratt variabil stess . tip specif infatt aspett enorm import caratterizz variabil esso fa rifer , inform compil : 1 ) qual valor variabil può assum ; 2 ) l' insiem oper poss esser effettu quest ultim ; 3 ) quantit memor esserl riserv tal variabil : char=1 byte int short=2 byte long float=4 byte double= 8 byte . 	4
A2850	Q2825	C2	IT	L32	different const fatt struct è costruttor tip defin struttur , mentr typedef è oper sintatt ridefin cre identif tip esistent variabil user-defined (com struttur stess ) . typedef struct mod defin tip defin dall' utent spess typedef struct usat insiem dar nuov struttur . 	1
A2364	Q2435	C2	IT	L29	principal istruzion c : istruzion assegn vien utilizz assegn variabil valor un' espression ; istruzion ingress uscit consent legg scriv valor variabil standard input standard output ; istruzion compost qual l' istruzion condizional consent esegu divers sequenz istruzion bas valor verit condizion l' istruzion iter permett ripetizion dell' esecu sequenz istruzion ogni volt cert condizion è verific . 	1
A2910	Q2819	C2	IT	L32	complement è utilizz rappresent i numer segn solit vien utilizz numer binari.il complement n numer si fa invert tutt i bit numer (in parol sostitu 0 uni vicevers ) somm n-1.in particol complement 1 invert i bit somm nient , complement 2 invert i bit somm complement 3 invert i bit somm 2 ecc.solit i più utilizz complement 1 2 . (5 compl 2 ) 5->0000 0101->compl 1->1111 1010->compl 2->1111 1011 (-5 compl 2 ) 	3
A2439	Q2546	C2	IT	L29	cicl whil esegu ser istruzion finc condizion valut è ver . tip cicl condizion è valut prim esegu sequenz istruzion . quand numer iter è not prior è util usar cicl do whil . cicl do whil , può esser utilizz post cicl whil , esegu anch' esso ser istruzion si ripet ogni iter . contrar cicl whil , cicl condizion è valut ogni iter . 	2
A2841	Q2813	C2	IT	L32	si divid 22 1589 : 1589 : 22= 72 rest 5 72 : 22= 3 rest 6 3 : 22= 0 rest 0 si consider i rest bass vers l' alto 1589 , convert bas 22 è 065 	0
A2779	Q2886	C2	IT	L32	è util assoc tip defin un' enumer non dover ripet l' elenc valor ogni volt si defin variabil , sens non divent necessar richiam tutt string dell' insiem tip defin . esemp : enum{nome1,nome2,nome3,nome4 } student non dover richiam tutt part enum , si proced mod : typedef enum{nome1,nome2,nome3,nome4 } studentedainterrog ; studentedainterrog student ; 	2
A2311	Q2329	C2	IT	L27	termin " compil " si intend traduzion tutt programm linguagg . metod traduzion ã¨ piã¹ veloc puo' richied . " interpret " , , si intend traduzion line programm volt . metod l' esecu ã¨ piã¹ lent programm ã¨ piã¹ interatt . 	1
A2580	Q2702	C2	IT	L31	array corrispond blocc memor compost tant locazion quant lunghezz dell' array . mot si può acced singol element array utilizz indic corrispond posizion cell memor dell' array . cop l' inter conten array è necessar utilizz cicl (per esemp cicl for ) si individu ogni valor tram l' indic cicl . 	3
A2891	Q2817	C2	IT	L32	dichiar variabil si alloc spaz memor programm potr utilizz determin scop , inser cert tip dat (specific dichiar ) . quantit memor alloc dip tip variabil dichiar . non dichiar variabil vien riconosc com error , quant programm non saprebb spaz utilizz segu . 	0
A2151	Q2284	C2	IT	L27	sram è ram volatil non necess refresh , i banc memor consent manten inform teoric infin , bass temp lettur bass consum . necess usar component cell rend per più costos dram . dram , è tip ram refresh i banc memor necessit . 	0
A2069	Q2200	C2	IT	L27	oper logic bas and , or not . regol precedent dett tal oper , all' intern espression , vann esegu seguent ordin : prim vien esegu not , poi l' and infin l' or . tal precedent poss esser modific piec mediant l' uso parentes . 	2
A2025	Q2001	C2	IT	L25	different principal memor ram memor tip rom è prim è volatil , second permanent . pertant conten ram verr pers qundo cess l' aliment sistem . un' altra different è access : mentr ram (random access memory ) i l access è brev indipendent dall' indirizz parol vogl acced , rom esso è maggior . quest ultim inoltr memor access sequenzial . 	1
A2520	Q2443	C2	IT	L29	si intend linguagg non dirett esegu calcol , util per descrizion algoritm . 	0
A3323	Q3360	C2	IT	L36	moment programm termin propr esecu improvvis , ovver andand crash , i fil rimast apert poss non aver incis memor conten si poss perd dat . d' altra part modif eran stat salv precedent non vien pers alcun dat . 	1
A2546	Q2637	C2	IT	L31	c si poss defin array bidimensional : int a[n ] [ m ] corrispond matric 10 righ 5 colonn ,è possibil usar array più dimension aggiung copp più parentes quadr : float a[10 ] [5 ] [20 ] .il calcol comunqu memorizz tutt mod lineare,un dop l' altra . 	0
A3327	Q3404	C2	IT	L36	fscanf fgets entramb funzion lettur dat . prim legg i dat input spaz bianc , mentr second legg invi cap . inoltr fgets salv i dat lett array inser null com ultim cell dell' array , fscanf legg bas formatt dat all' iniz . si è sicur ciò si avrà nell' input è convenient usar fscanf, essend essa instabil (mand programm overflow dat input è form divers aspett ) spess convien usar fgets poic caus men error . 	4
A3404	Q3291	C2	IT	L36	e' buffer contien , simil fil test , tutt i dat veng lett scritt fil perifer . c acced buffer legg scriv perifer fil real binar test . 	0
A2859	Q2889	C2	IT	L32	poss utilizz manipol valor tip numer (int , doubl , float , long , ... ) string caratter (char , string ) . inoltr poss inser tip compost com array numer caratter . 	1
A2313	Q2306	C2	IT	L27	dichiar variabil tip int defin lâ ? ? insiem valor quest puã² assumere. calcol preved i tip dat abbi dimension memor fortement dipendent dall' hardw ,esist poi qualif permett aument diminu .short utilizz valor compres -32767 32767 ( 2^15 ) mentr long -2147483647 2147483647 ( 2^31 ) .int assum valor max min bas calcol (16bit->2^15 32bit->2^31 ) . short<=int<=long 	0
A3014	Q3044	C2	IT	L33	perc p è array " punt " element dell' array ... second oper aument p posizion facc punt terz posizion 	0
A2413	Q2442	C2	IT	L29	oper applic : -assegn (tram & ) assegn l' indirizz variabil . (es : p=&x , dov p è puntator tip inter ) . -dereferenz (tram * ) . (es : x=*p ) . -asegn valor puntator . (es : p=q ) -confront puntator . (es : p==q ) -oper aritmet (somm sottrazion ) . (es : p= a+1 è equivalent p=a [1 ] ) 	2
A3423	Q3378	C2	IT	L36	perifer fisic lavor utilizz fil access random oppur sequenzial . i fil access random è possibil moment apertur fil (open ) acced determin posizion identif posizion (puntator ) . fil access sequenzial non è possibil raggiung determin posizion occorr scorr fil . 	0
A1945	Q2032	C2	IT	L25	registr serv riport indic relat risult var oper ; registr dat , , caric conten cell memor (lettur ) oppur cop propr conten cell memor (scrittur ) . infin registr indirizz contien inform relat var posizion cell memor . 	1
A2666	Q2765	C2	IT	L31	linguagg c non è possibil modific dimension array dop averl dichiar , poic macchin riserv fisic spaz precis memor . per non confus l' alloc dinam memor , dov comunqu dimension dell' array vien determin fas esecu . 	4
A3230	Q3202	C2	IT	L35	ogni volt funzion invoc stess (funzion ricors ) , sta richied soluzion problem più semplic partenz . si arriv dunqu problem dimension sufficient piccol poter esser affront ,dett cas bas . punt vien restitu rispost , casc all' , permett calcol rispost intermed più compless rimast sospes . calcol compless è necessar introdurr equazion ricorrent , l' appunt ,descriv funzion termin valor input sempr più piccol . 	3
A2782	Q2914	C2	IT	L32	tip dat astratt (adt ) è particol inform , rappresent calcol , è not mod interpret manipol . ciò si evinc valor rappresent calcol può esser interpret manier different second tip dat vien assoc . es . caratt asci , integer floating , livell memor rapprent mediant sequenz bit ugual , rappresent inform complet different . non è sufficient chiar rispond , si intend tip ! 	2
A2177	Q2223	C2	IT	L27	memor e' costitu numerosissim cell , disposit bistabil , capac assum (0 1 ) attravers i qual e' possibil memorizz quant ' ã ?â minim inform (1 bit ) . numer bit identif spaz indirizz , avend disposizion k bit e' possibil indirizz 2^ ( k ) bit all' intern processor ; esemp si disposizion 10 byte (10*8 bit ) si potrann indirizz 2^ (10 ) byte memor , 1 kil byte . non e' possibil alloc piu' memor quell dispon . 	1
A2169	Q2358	C2	IT	L27	modal master/slav nell' ambit funzion bus sistem si intend facolt cpu controll mod unidirezional inform viagg bus sistem (dat , indirizz segnal controll ) . 	0
A2196	Q2365	C2	IT	L27	asci : vantagg : minor utilizz memor singol caratt (7 8 bit ) svantagg : minor numer caratter codific , esistent var codif asci estes incompat . unicod : vantagg : un' unic codif tutt i caratter lingu utilizz . svantagg : maggior occup memor (16 32 bit ) . mot è codic unicod non è implement softw nell' hardw " vecc dat " (antecedent 1990 ) , non è compat . 	2
A3021	Q3062	C2	IT	L33	puntator punt indirizz memor cas sarebb più appropr usar variabil puntator oppur far punt puntator (a ) variabil inizializz valor 20 . 	0
A1987	Q2082	C2	IT	L25	memor central quant volatil , present access cell ridott è inoltr indipendent dall' indirizz " word " qual si vuol acced , caratterist permett dirett collabor cpu . essa per necess un' aliment costant tratten i dat inser sistem inoltr ridott capac essa obblig compresent memor mass grad memorizz maggior quantit programm mod persistent . 	1
A2897	Q2952	C2	IT	L32	string binar è codific binar , corrispondent numer decimal è = 1* (2^0 ) + 0* (2^1 ) + 1* (2^2 ) + 0* (2^3 ) + 1* (2^4 ) + 0* (2^5 ) + 1* (2^6 ) + 0* (2^7 ) = 85 , è codific modul segn : bit più signif (0 ) indic numer è posit codif appen usat = +85 , è codific complement 2 : essend bit più signif 0 , si proced normal codif perc = +85 . com cas string binar bit più signif 0 corrispond numer decimal ciascun quest divers codif . 	2
A3063	Q3047	C2	IT	L33	passagg valor consent acced cop variabil , conseguent valor effett tal variabil non può esser modific . passagg indirizz implic passagg puntator all' are memor richiest , pertant poss modific valor fuor chiam funzion . si prefer usar metod quand parametr ingress sturct array perc vogl modific conten , poic tram passagg valor si modif cop variabil funzion . 	0
A3372	Q3341	C2	IT	L36	lettur fil binar avvien tram funzion fread . è possibil esegu l' oper lettur dat modal binar fil non scritt modal binar , dat vien interpret erron si legg sbagl . 	0
A1847	Q2146	C2	IT	L25	cpu contien disposit elettron grad acquis , interpret esegu istruzion ; memor central (ram ) è memor volatil accogl dat programm qual oper calcol ; memor mass (rom ) memorizz grand quantit dat programm manier persistent , cio non volatil ; perifer permett scamb inform calcol l' estern ; bus sistem interconnett component , consent scamb dat . 	2
A2424	Q2475	C2	IT	L29	programm è sequenz fin istruzion risolv problem , soddisf cert criteri(com ricezion valor ingress produzion valor uscit ;termin dop cert numer pass ) oper struttur dat . 	1
A2717	Q2766	C2	IT	L31	vantagg più evident consist definizion alloc esatt memor opportun l' esecu richiest . memor vien infatt utilizz durant esecu programm , evit fas compil si sprechin risors . limit principal consist necess scriv opportun righ codic aggiunt , rallent compil . int *p ; p=(int* ) malloc (5*sizeof(int ) ) ; garant spaz necessar 5 inter 	2
A3221	Q3238	C2	IT	L35	quand si scriv programm gross dimension è consigl suddivid i programm modul separ più ordin rend più leggibil codic . funzion main ( ) sar conten fil (es : ?mioprogr.c? ) . ?buon norm dichiar struttur header funzion fil separ (header fil ) includ tal modul (es : #includ ?mioprogr.h ? ) . fin è cre fil dov verr implement body funzion . 	1
A3312	Q3336	C2	IT	L36	c forn interfacc consistent perl gestion i/o indipendent perifer . ovver vien forn livell astrazion livell linguagg programm . quest astrazion vien chiam stream (perifer logic ) perifer (hard disk , stampant etc. . ) fil . e' possibil colleg fil stream tram un' oper " open " . volt esegu quest oper i dat poss esser scamb programm utent fil . tip stream : binar (sequenz byte ) tip test (sequenz caratter ) . 	1
A3020	Q3012	C2	IT	L33	omett break cas verrann valut i cas success . break serv appunt uscir struttur casc non appen condizion desider è ver . è util inser non cad error . 	1
A2102	Q2235	C2	IT	L27	rom (read-only memory ) è memor caratterist simil quell ram (random access memory ) , differ mot : è memor tip permanent d' access notevol superior quest' ultim . si utilizz memorizz i dat serv moment dell' accession calcol prim caric sistem oper , esemp bios . i dat rom veng gen inser fas costruzion non poss esser modific . 	0
A2505	Q2435	C2	IT	L29	istruzion : - assegn , si attribu variabil valor tip ; - lettur , si può ricev valor standard input eventual assegn variabil ; - scrittur , si può stamp valor standard output ; - condizional , permett esegu divers istruzion second valor variabil un' espression (se ver si esegu cert istruzion , fals ) ; - iter , permett ripet più ser istruzion . 	3
A3211	Q3281	C2	IT	L35	algoritm ricerc esist cas compless , : -il cas peggior è cas numer ricerc corrispond numer element impieg è par n (numer element ) . -il cas miglior è cas l' element cerc è list impieg unitar ricerc . -il cas med è più difficil calcol , perc dip dall' algoritm utilizz ricerc esemp ricerc lin corrispond n/2 , mentr ricerc binar è par log2 ( n ) 	2
A3248	Q3274	C2	IT	L35	macchin dedic è ambient dot propr memor , unic scop l' esecu determin funzion . pratic , i computer un' unic memor un' unic cpu . realizz macchin dedic si ricorr sistem lif : stess macchin esegu programm mett paus l' esecu , alloc determin spaz memor esegu sottoprogramm . termin memor vien recuper , l' ambient rimoss pil ripr l' esecu programm principal . 	0
A2098	Q2328	C2	IT	L27	entramb i calcol present stess component sistem comun i modul intern cpu . ciò distingu è lunghezz dat memorizz elabor , registr cell memor . i calcol 32bit present dat lung 32 bit mentr quell 64 elabor numer form 64 bit . dat binar form più bit si poss rappresent più combin si poss comp elabor più compless più veloc . 	1
A3089	Q3075	C2	IT	L33	cicl whil , verific condizion , esegu l' istruzion condizion è ver . cicl do-whil esegu l' istruzion volt verific condizion , poi si comport esatt com cicl whil . cicl for esegu l' istruzion tant quant impost condizion . cicl do-whil si utilizz cas si richied almen valor tastier , cicl for si utilizz quand si conosc prior numer sar esegu l' istruzion . cicl whil si utilizz cas . 	2
A2076	Q2233	C2	IT	L27	numer bit costitu indirizz memor determin numer indirizz , cio spaz indirizz . particol , indirizz memor è n bit , spaz indirizz disposizion è 2^n cell . 	2
A3043	Q3100	C2	IT	L33	typedef è parol chiav linguagg programm c c++ . scop typedef è assegn nom altern tip dat esistent , solit quell dichiar standard è tropp ingombr , magar confusional , oppur rend codic riutilizz più facil un' implement un' altra . 	0
A2112	Q2241	C2	IT	L27	rappresent binar più vantagg i numer real è quell virgol mobil quant essa permett rappresent manier compatt numer grand , piccol . rappresent virgol mobil standard 32 bit è seguent : bit codif segn , i success 8 codific l' esponent " " indic l' ordin grandezz numer infin i restant 23 codific mantiss " m " qual rappresent cifr signif numer . 	1
A2516	Q2429	C2	IT	L29	si scritt com istruzion cioe' rig termin punt virgol , perc ' entramb increment x , altriment fann part un' istruzion ?x++ ? valor x prim dell' increment ?++x ? valor x dop l' increment . si c'e ' different stamp : nell' istruzion " printf ( " % d " , x++ ) " valor x vien stamp e' ?3 ? perc x e' prim dell' increment ; nell' istruzion " printf ( " % d " , ++x ) ? valor x vien stamp e' ?4 ? perc x e' dop l' increment . 	0
A3054	Q3111	C2	IT	L33	scrittur question non equivalent , infatt svolg ciascun un' oper different : 1 ) * p=x assegn cell memor punt p valor variabil x 2 ) x =*p assegn variabil x valor conten cell memor punt p 3 ) x *=p equival scriv x=x*p assegn variabil x valor prodott sè stess valor variabil p. 	2
A2139	Q2295	C2	IT	L27	un' espression boolean contraddizion si ottien quand abbiam un' espression sempr fals , es . and (not ) ; mentr abbiam un' espression boolean tautolog quand abbiam un' espression sempr ver , es or (not ) . 	2
A3060	Q3013	C2	IT	L33	puntator è util cas alloc dinam memor . variabil puntator contien l' indirizz memor variabil punt . otten l' indirizz variabil si usa l' oper & . esemp assegn indirizz variabil puntator px : px = &x ; acced conten cell , indirizz è memorizz variabil puntator px , si fa preced puntator l' oper * (*px ) . 	4
A3200	Q3153	C2	IT	L35	passagg parametr valor cop e' inefficent parametr e' ingombr , parametr effett formal occup zon distint memor mentr passagg parametr indirizz c'e ' modif parametr effett cop indirizz variabil . 	0
A2205	Q2241	C2	IT	L27	rappresent più vantagg è quell virgol mobil (floating point ) utilizz notazion esponenzial ; i vantagg riguard possibil rappresent poch cifr numer grand oppur rappresent precision numer piccol . sostanz rappresent virgol mobil estend l’intervall numer rappresent , parit cifr , notazion virgol fiss . 	0
